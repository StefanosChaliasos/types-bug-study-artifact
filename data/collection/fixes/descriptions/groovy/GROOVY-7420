The static type checked cannot choose which variant of a overloaded method with both primitive and object parameters (e.g. {{long}} and {{Long}}) to use when the actual type of the parameter is the object type (e.g. {{Long}}):

{code}
class A {
    static String m(long p) {
        "primitive"
    }

    static String m(Long p) {
        "object"
    }
}

Long l = 42L
A.m(l)
{code}
yields the following compilation error:
{noformat}
[Static type checking] - Reference to method is ambiguous. Cannot choose between [java.lang.String A#m(java.lang.Long), java.lang.String A#m(long)]
{noformat}

The problem can be worked around by explicitely calling {{.longValue()}} on the {{Long}}.