I thought this had been resolved, but I just ran into it again.

The static type checker always infers the strictest possible generic bounds for an inline map.

{code:groovy}
void consume(Map<String, Object> map) {}

void run() {
  consume([key: 'value']) // compilation fails
}
{code}

{code}
Cannot call example#consume(java.util.Map <java.lang.String, java.lang.Object>) with arguments [java.util.LinkedHashMap <java.lang.String, java.lang.String>]
{code}

Explicitly causing the STC to "snap out of it" by adding {{as Map}} (no generics required) works.