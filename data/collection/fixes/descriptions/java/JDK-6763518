The new raw-type warnings are undoubtedly a good thing but should not have been unleashed on the world without the ability to shut them up selectively with @SuppressWarnings.
The behavior is more complex; take the following example:

import java.util.*;

class Test {      
  @SuppressWarnings("rawtypes")
   void foo(List l) {};      
}

does NOT generate any warning.

However I found that @SupressWarnings doesn't apply to raw fields, as in:

import java.util.*;

class Test {      
   @SuppressWarnings("rawtypes")
   List l;
}

The same happens with annotated method parameters:

class Test {        
   void foo(@SuppressWarnings("rawtypes") List l) {};      
}

Which is a symptom that something is wrong with VarDef AST nodes.
