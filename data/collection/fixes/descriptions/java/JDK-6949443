FULL PRODUCT VERSION :
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=lcd
java version "1.6.0_20"
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Java HotSpot(TM) Server VM (build 16.3-b01, mixed mode)

ADDITIONAL OS VERSION INFORMATION :
Linux achronisul 2.6.32-16-generic #25-Ubuntu SMP Tue Mar 9 16:33:52 UTC 2010 i686 GNU/Linux

A DESCRIPTION OF THE PROBLEM :
I tried to compile a small program using javac -Xjcov Bug.java. It compiles fine without -Xjcov.

STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :
Compile the program.

EXPECTED VERSUS ACTUAL BEHAVIOR :
EXPECTED -
Compiling fine.
ACTUAL -
AssertionError in compiler.

ERROR MESSAGES/STACK TRACES THAT OCCUR :
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=lcd
An exception has occurred in the compiler (1.6.0_20). Please file a bug at the Java Developer Connection (http://java.sun.com/webapps/bugreport)  after checking the Bug Parade for duplicates. Include your program and the following diagnostic in your report.  Thank you.
java.lang.AssertionError
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.visitTree(CRTable.java:505)
        at com.sun.tools.javac.tree.JCTree$Visitor.visitLetExpr(JCTree.java:2008)
        at com.sun.tools.javac.tree.JCTree$LetExpr.accept(JCTree.java:1863)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.csp(CRTable.java:184)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.visitExec(CRTable.java:345)
        at com.sun.tools.javac.tree.JCTree$JCExpressionStatement.accept(JCTree.java:1074)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.csp(CRTable.java:184)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.csp(CRTable.java:197)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.visitBlock(CRTable.java:250)
        at com.sun.tools.javac.tree.JCTree$JCBlock.accept(JCTree.java:739)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.csp(CRTable.java:184)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.visitMethodDef(CRTable.java:231)
        at com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:639)
        at com.sun.tools.javac.jvm.CRTable$SourceComputer.csp(CRTable.java:184)
        at com.sun.tools.javac.jvm.CRTable.writeCRT(CRTable.java:78)
        at com.sun.tools.javac.jvm.ClassWriter.writeCode(ClassWriter.java:1008)
        at com.sun.tools.javac.jvm.ClassWriter.writeMethod(ClassWriter.java:950)
        at com.sun.tools.javac.jvm.ClassWriter.writeMethods(ClassWriter.java:1426)
        at com.sun.tools.javac.jvm.ClassWriter.writeClassFile(ClassWriter.java:1507)
        at com.sun.tools.javac.jvm.ClassWriter.writeClass(ClassWriter.java:1444)
        at com.sun.tools.javac.main.JavaCompiler.genCode(JavaCompiler.java:618)
        at com.sun.tools.javac.main.JavaCompiler.generate(JavaCompiler.java:1289)
        at com.sun.tools.javac.main.JavaCompiler.generate(JavaCompiler.java:1259)
        at com.sun.tools.javac.main.JavaCompiler.compile2(JavaCompiler.java:765)
        at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:730)
        at com.sun.tools.javac.main.Main.compile(Main.java:353)
        at com.sun.tools.javac.main.Main.compile(Main.java:279)
        at com.sun.tools.javac.main.Main.compile(Main.java:270)
        at com.sun.tools.javac.Main.compile(Main.java:69)
        at com.sun.tools.javac.Main.main(Main.java:54)


REPRODUCIBILITY :
This bug can be reproduced always.

---------- BEGIN SOURCE ----------
public class Bug  {
    public static void main(String[] args) {
        Integer i = 0;
        i++;
    }
}

---------- END SOURCE ----------
