Core/libs test failed
Testname
===============================
java_util/EnumSet/EnumSetTest
===============================
Problem, compile error with
[2012-03-07T04:29:41.60] ${JAVAC}  ${JAVAC_OPTS} -d ${test_work_dir} ${test_work_dir}/EnumSetTest.java
[2012-03-07T04:29:41.60] # Actual: /Users/aurora/sandbox/jdk/bin/javac -d /Users/aurora/sandbox/results/ResultDir/EnumSetTest /Users/aurora/sandbox/results/ResultDir/EnumSetTest/EnumSetTest.java
[2012-03-07T04:29:41.60] /Users/aurora/sandbox/results/ResultDir/EnumSetTest/EnumSetTest.java:697: error: incompatible types
[2012-03-07T04:29:42.52]              EnumSet<T> newSetJan = EnumSet.range(enumArrayMonth[0],enumArrayMonth[0]);
[2012-03-07T04:29:42.52]                                                  ^
[2012-03-07T04:29:42.52]   required: EnumSet<T>
[2012-03-07T04:29:42.52]   found:    EnumSet<Enum>
[2012-03-07T04:29:42.52]   where T is a type-variable:

Source code is

695             Enum [] enumArrayMonth = enumClass.getEnumConstants();
696             EnumSet<T> newSetJan = EnumSet.range(enumArrayMonth[0],enumArrayMonth[0]);
697             EnumSet<T> complementOfNewSetJan = EnumSet.complementOf(newSetJan);

And the other failed test is
class Foo<X extends Foo<X>> {
  static <Z extends Foo<Z>> Foo<Z> get(Z fz) { return null; }

<U extends Foo<U>> void test(Foo foo) {
      Foo<U> fs = Foo.get(foo);
  }
}
