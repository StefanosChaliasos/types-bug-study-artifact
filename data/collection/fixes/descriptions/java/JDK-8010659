Attempting to build OpenJFX using the Gradle build system leads to a crash when building with JDK 8 b81. I believe I also verified it crashes while building with Ant. Note that the Gradle build is actually using Ant to do compilation and I am passing custom command line args, so I do not believe this is a Gradle specific issue. Below is the stack trace:

[ant:javac] An exception has occurred in the compiler (1.8.0-ea). Please file a bug at the Java Developer Connection (http://java.sun.com/webapps/bugreport)  after checking the Bug Parade for duplicates. Include your program and the following diagnostic in your report.  Thank you.
[ant:javac] java.lang.AssertionError
[ant:javac] 	at com.sun.tools.javac.util.Assert.error(Assert.java:126)
[ant:javac] 	at com.sun.tools.javac.util.Assert.check(Assert.java:45)
[ant:javac] 	at com.sun.tools.javac.util.Bits.incl(Bits.java:88)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.visitMethodDef(Flow.java:1642)
[ant:javac] 	at com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:771)
[ant:javac] 	at com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.visitClassDef(Flow.java:1607)
[ant:javac] 	at com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:686)
[ant:javac] 	at com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.visitNewClass(Flow.java:2053)
[ant:javac] 	at com.sun.tools.javac.tree.JCTree$JCNewClass.accept(JCTree.java:1491)
[ant:javac] 	at com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.scanExpr(Flow.java:1503)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.visitVarDef(Flow.java:1683)
[ant:javac] 	at com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:828)
[ant:javac] 	at com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.visitClassDef(Flow.java:1580)
[ant:javac] 	at com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:686)
[ant:javac] 	at com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.visitClassDef(Flow.java:1580)
[ant:javac] 	at com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:686)
[ant:javac] 	at com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:49)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.analyzeTree(Flow.java:2218)
[ant:javac] 	at com.sun.tools.javac.comp.Flow$AssignAnalyzer.analyzeTree(Flow.java:2195)
[ant:javac] 	at com.sun.tools.javac.comp.Flow.analyzeTree(Flow.java:211)
[ant:javac] 	at com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1330)
[ant:javac] 	at com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1304)
[ant:javac] 	at com.sun.tools.javac.main.JavaCompiler.compile2(JavaCompiler.java:909)
[ant:javac] 	at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:868)
[ant:javac] 	at com.sun.tools.javac.main.Main.compile(Main.java:517)
[ant:javac] 	at com.sun.tools.javac.main.Main.compile(Main.java:376)
[ant:javac] 	at com.sun.tools.javac.main.Main.compile(Main.java:365)
[ant:javac] 	at com.sun.tools.javac.main.Main.compile(Main.java:356)
[ant:javac] 	at com.sun.tools.javac.Main.compile(Main.java:76)
[ant:javac] 	at com.sun.tools.javac.Main.main(Main.java:61)