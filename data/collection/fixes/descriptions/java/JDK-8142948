On Linux i586, langtools/test/tools/javac/lambda/speculative/T8046685.java fails:

The system is out of resources.
Consult the following stack trace for details.
java.lang.StackOverflowError
	at com.sun.tools.javac.comp.DeferredAttr$DeferredType.<init>(DeferredAttr.java:180)
	at com.sun.tools.javac.comp.ArgumentAttr$ArgumentType.<init>(ArgumentAttr.java:338)
	at com.sun.tools.javac.comp.ArgumentAttr$ResolvedMemberType.<init>(ArgumentAttr.java:550)
	at com.sun.tools.javac.comp.ArgumentAttr$ResolvedMethodType.<init>(ArgumentAttr.java:593)
	at com.sun.tools.javac.comp.ArgumentAttr$ResolvedMethodType.dup(ArgumentAttr.java:608)
	at com.sun.tools.javac.comp.ArgumentAttr$ResolvedMethodType.dup(ArgumentAttr.java:586)
	at com.sun.tools.javac.comp.ArgumentAttr.processArg(ArgumentAttr.java:240)
	at com.sun.tools.javac.comp.ArgumentAttr.processArg(ArgumentAttr.java:214)
	at com.sun.tools.javac.comp.ArgumentAttr.visitApply(ArgumentAttr.java:305)
	at com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1598)
	at com.sun.tools.javac.comp.ArgumentAttr.attribArg(ArgumentAttr.java:192)
	at com.sun.tools.javac.comp.Attr$MethodAttrInfo.attr(Attr.java:541)
	at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:631)
	at com.sun.tools.javac.comp.Attr.attribArgs(Attr.java:727)
	at com.sun.tools.javac.comp.Attr.visitApply(Attr.java:1870)
	at com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1598)
	at com.sun.tools.javac.comp.Attr$ResultInfo.attr(Attr.java:493)
	at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:631)
	at com.sun.tools.javac.comp.DeferredAttr$4.complete(DeferredAttr.java:336)
	at com.sun.tools.javac.comp.ArgumentAttr$ArgumentType.complete(ArgumentAttr.java:361)
	at com.sun.tools.javac.comp.DeferredAttr$DeferredType.check(DeferredAttr.java:297)
	at com.sun.tools.javac.comp.DeferredAttr$DeferredType.check(DeferredAttr.java:284)
	at com.sun.tools.javac.comp.Resolve$MethodResultInfo.check(Resolve.java:1011)
	at com.sun.tools.javac.comp.Resolve$4.checkArg(Resolve.java:834)
	at com.sun.tools.javac.comp.Resolve$AbstractMethodCheck.argumentsAcceptable(Resolve.java:739)
	at com.sun.tools.javac.comp.Resolve$4.argumentsAcceptable(Resolve.java:843)
	at com.sun.tools.javac.comp.Infer.instantiateMethod(Infer.java:181)
	at com.sun.tools.javac.comp.Resolve.rawInstantiate(Resolve.java:570)
	at com.sun.tools.javac.comp.Resolve.checkMethod(Resolve.java:609)
	at com.sun.tools.javac.comp.Attr.checkMethod(Attr.java:3933)
	at com.sun.tools.javac.comp.Attr.checkIdInternal(Attr.java:3724)
	at com.sun.tools.javac.comp.Attr.checkMethodIdInternal(Attr.java:3631)
	at com.sun.tools.javac.comp.Attr.checkMethodId(Attr.java:3610)
	at com.sun.tools.javac.comp.Attr.checkId(Attr.java:3597)
	at com.sun.tools.javac.comp.Attr.visitIdent(Attr.java:3337)
	at com.sun.tools.javac.tree.JCTree$JCIdent.accept(JCTree.java:2188)
	at com.sun.tools.javac.comp.Attr$ResultInfo.attr(Attr.java:493)
	at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:631)
	at com.sun.tools.javac.comp.Attr.visitApply(Attr.java:1879)
	at com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1598)
	at com.sun.tools.javac.comp.Attr$ResultInfo.attr(Attr.java:493)
	at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:631)
	at com.sun.tools.javac.comp.DeferredAttr$4.complete(DeferredAttr.java:336)
	at com.sun.tools.javac.comp.ArgumentAttr$ArgumentType.complete(ArgumentAttr.java:361)
	at com.sun.tools.javac.comp.DeferredAttr$DeferredType.check(DeferredAttr.java:297)
	at com.sun.tools.javac.comp.DeferredAttr$DeferredType.check(DeferredAttr.java:284)
	at com.sun.tools.javac.comp.Resolve$MethodResultInfo.check(Resolve.java:1011)
	at com.sun.tools.javac.comp.Resolve$4.checkArg(Resolve.java:834)
	at com.sun.tools.javac.comp.Resolve$AbstractMethodCheck.argumentsAcceptable(Resolve.java:739)
	at com.sun.tools.javac.comp.Resolve$4.argumentsAcceptable(Resolve.java:843)
	at com.sun.tools.javac.comp.Infer.instantiateMethod(Infer.java:181)
	at com.sun.tools.javac.comp.Resolve.rawInstantiate(Resolve.java:570)
...



The test is too big for small stack settings. The test should be made independent from JVM ergonomics by specifying its one stack size.