Need to check the final form of changes for javac:

- do we remove disableAccessors/disableprivateAccessors flags or leave for future testing/experimentation?

- do we remove virtualizePrivateAccess or leave it and add tests that produce older version class files with virtualized private access?

- do we need additional tests for nestmate support within javac?

- Confirm this code in ClassWriter and remove TODO comment:

        poolbuf.appendChar(target.majorVersion);

        // TODO: Need to skip this for Modules - not sure where
        // that check really belongs, but this works.
        if (c.owner.kind != MDL) {
            if (target.hasNestmateAccess()) {
                acount += writeNestMembersIfNeeded(c);
                acount += writeNestHostIfNeeded(c);
            }
        }

        writePool(c.pool);

Do we need any other langtool support for nestmate attributes?