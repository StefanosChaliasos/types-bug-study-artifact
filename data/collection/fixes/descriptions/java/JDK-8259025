Using all requireNonNull variants of java.util.Objects

  import static java.util.Objects.*;
  record Test(String v) {
    Test {
      requireNonNull(v);
      requireNonNull(v, "v must be provided");
      // requireNonNull(v, () -> "v must be provided");
      requireNonNullElse(v, "w");
      // requireNonNullElseGet(v, () -> "w");
    }
  }

leads to this error message after uncommenting one or both of the supplier-taking lines:

  Test.java:2: error: invalid compact constructor in record <init>
    Test {
    ^
  (compact constructor must not have return statements)
  1 error

Observed with javac 16-ea+27 and 17-ea+3.