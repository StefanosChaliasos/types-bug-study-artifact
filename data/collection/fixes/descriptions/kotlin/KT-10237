```
interface I<T> where T : Unresolved<String>
```

Bound consistency checker fails trying to build a substitution map, because error class has no type parameters and we're passing one type argument:

```
java.lang.IllegalStateException
	at org.jetbrains.kotlin.types.SubstitutionUtils.fillInDeepSubstitutor(SubstitutionUtils.java:80)
	at org.jetbrains.kotlin.types.SubstitutionUtils.fillInDeepSubstitutor(SubstitutionUtils.java:96)
	at org.jetbrains.kotlin.types.SubstitutionUtils.buildDeepSubstitutionMultimap(SubstitutionUtils.java:65)
	at org.jetbrains.kotlin.resolve.DeclarationsChecker.checkSupertypesForConsistency(DeclarationsChecker.kt:188)
	at org.jetbrains.kotlin.resolve.DeclarationsChecker.access$checkSupertypesForConsistency(DeclarationsChecker.kt:69)
	at org.jetbrains.kotlin.resolve.DeclarationsChecker.checkTypeParameterConstraints(DeclarationsChecker.kt:339)
	at org.jetbrains.kotlin.resolve.DeclarationsChecker.checkClass(DeclarationsChecker.kt:274)
	at org.jetbrains.kotlin.resolve.DeclarationsChecker.process(DeclarationsChecker.kt:92)
	at org.jetbrains.kotlin.resolve.BodyResolver.resolveBodies(BodyResolver.java:227)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.kt:197)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeDeclarations(LazyTopDownAnalyzerForTopLevel.java:74)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeFiles(LazyTopDownAnalyzerForTopLevel.java:66)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.java:145)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegrationWithCustomContext(TopDownAnalyzerFacadeForJVM.java:78)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$3.invoke(KotlinToJVMBytecodeCompiler.java:337)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$3.invoke(KotlinToJVMBytecodeCompiler.java:328)
	at org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.java:266)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.java:327)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyzeAndGenerate(KotlinToJVMBytecodeCompiler.java:307)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileBunchOfSources(KotlinToJVMBytecodeCompiler.java:233)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:195)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:51)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:174)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:135)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:57)
	at org.jetbrains.kotlin.cli.common.CLICompiler.doMainNoExit(CLICompiler.java:240)
	at org.jetbrains.kotlin.cli.common.CLICompiler.doMain(CLICompiler.java:231)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler$Companion.main(K2JVMCompiler.kt:248)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.main(K2JVMCompiler.kt)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jetbrains.kotlin.preloading.Preloader.run(Preloader.java:73)
	at org.jetbrains.kotlin.preloading.Preloader.main(Preloader.java:35)
```
