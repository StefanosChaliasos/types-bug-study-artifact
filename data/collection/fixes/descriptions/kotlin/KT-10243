org.jetbrains.kotlin.cfg.pseudocodeTraverser.PseudocodeTraverserKt.collectDataFromSubgraph(Pseudocode, TraversalOrder, boolean, Map, Function2, Function3, Collection, boolean[], boolean) PseudocodeTraverser.kt:156
org.jetbrains.kotlin.cfg.pseudocodeTraverser.PseudocodeTraverserKt.collectData(Pseudocode, TraversalOrder, boolean, Function2, Function3, Object) PseudocodeTraverser.kt:72
org.jetbrains.kotlin.cfg.PseudocodeVariableDataCollector.collectData(TraversalOrder, boolean, InstructionDataMergeStrategy) PseudocodeVariableDataCollector.kt:45
org.jetbrains.kotlin.cfg.PseudocodeVariablesData.computeVariableInitializers() PseudocodeVariablesData.java:128
org.jetbrains.kotlin.cfg.PseudocodeVariablesData.getVariableInitializers() PseudocodeVariablesData.java:117
org.jetbrains.kotlin.cfg.JetFlowInformationProvider.recordInitializedVariables() JetFlowInformationProvider.java:354
org.jetbrains.kotlin.cfg.JetFlowInformationProvider.checkDeclaration() JetFlowInformationProvider.java:117
org.jetbrains.kotlin.resolve.ControlFlowAnalyzer.checkFunction(BodiesResolveContext, KtDeclarationWithBody, KotlinType) ControlFlowAnalyzer.java:105
org.jetbrains.kotlin.resolve.ControlFlowAnalyzer.process(BodiesResolveContext) ControlFlowAnalyzer.java:61
org.jetbrains.kotlin.resolve.BodyResolver.resolveBodies(BodiesResolveContext) BodyResolver.java:229
org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(TopDownAnalysisMode, Collection, DataFlowInfo) LazyTopDownAnalyzer.kt:197
org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeDeclarations(TopDownAnalysisMode, Collection) LazyTopDownAnalyzerForTopLevel.java:74
org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeFiles(TopDownAnalysisMode, Collection, List) LazyTopDownAnalyzerForTopLevel.java:66
org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(ModuleContext, Collection, BindingTrace, TopDownAnalysisMode, List, IncrementalCompilationComponents, PackagePartProvider) TopDownAnalyzerFacadeForJVM.java:145
org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegrationWithCustomContext(ModuleContext, Collection, BindingTrace, List, IncrementalCompilationComponents, PackagePartProvider) TopDownAnalyzerFacadeForJVM.java:78
org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$3.invoke() KotlinToJVMBytecodeCompiler.java:360
org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$3.invoke() KotlinToJVMBytecodeCompiler.java:351
org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(Collection, Function0) AnalyzerWithCompilerReport.java:266
org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinCoreEnvironment, String) KotlinToJVMBytecodeCompiler.java:350
org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules(KotlinCoreEnvironment, CompilerConfiguration, List, File, File, List, boolean) KotlinToJVMBytecodeCompiler.java:141
org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompilerArguments, Services, MessageCollector, Disposable) K2JVMCompiler.kt:169
org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(CommonCompilerArguments, Services, MessageCollector, Disposable) K2JVMCompiler.kt:48
org.jetbrains.kotlin.cli.common.CLICompiler.exec(MessageCollector, Services, CommonCompilerArguments) CLICompiler.java:174
org.jetbrains.kotlin.cli.common.CLICompiler.exec(PrintStream, Services, MessageRenderer, String[]) CLICompiler.java:135
org.jetbrains.kotlin.cli.common.CLICompiler.execAndOutputXml(PrintStream, Services, String[]) CLICompiler.java:63
org.jetbrains.kotlin.daemon.CompileServiceImpl$remoteIncrementalCompile$1.invoke(PrintStream, EventManger, Profiler) CompileServiceImpl.kt:240
org.jetbrains.kotlin.daemon.CompileServiceImpl$remoteIncrementalCompile$1.invoke(Object, Object, Object) CompileServiceImpl.kt:67
org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1$1.invoke() CompileServiceImpl.kt:414
org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1$1.invoke() CompileServiceImpl.kt:67
org.jetbrains.kotlin.daemon.common.DummyProfiler.withMeasure(Object, Function0) PerfUtils.kt:137
org.jetbrains.kotlin.daemon.CompileServiceImpl.checkedCompile(String[], PrintStream, Profiler, Function0) CompileServiceImpl.kt:447
org.jetbrains.kotlin.daemon.CompileServiceImpl.access$checkedCompile(CompileServiceImpl, String[], PrintStream, Profiler, Function0) CompileServiceImpl.kt:67
org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1.invoke() CompileServiceImpl.kt:413
org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1.invoke() CompileServiceImpl.kt:67
org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive(CompileServiceImpl$Aliveness, boolean, Function0) CompileServiceImpl.kt:553
org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive$default(CompileServiceImpl, CompileServiceImpl$Aliveness, boolean, Function0, int) CompileServiceImpl.kt:518
org.jetbrains.kotlin.daemon.CompileServiceImpl.doCompile(int, String[], RemoteOutputStream, RemoteOutputStream, RemoteOperationsTracer, Function3) CompileServiceImpl.kt:404
org.jetbrains.kotlin.daemon.CompileServiceImpl.remoteIncrementalCompile(int, CompileService$TargetPlatform, String[], CompilerCallbackServicesFacade, RemoteOutputStream, CompileService$OutputFormat, RemoteOutputStream, RemoteOperationsTracer) CompileServiceImpl.kt:237
java.lang.Thread.run() Thread.java:745
