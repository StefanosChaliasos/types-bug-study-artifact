{code:lang=kotlin}
interface Parent
interface Child : Parent

sealed class Page : Parent {
  object One : Page(), Child
  object Two : Page(), Child
}

// Type inference failed. Expected type mismatch:
// required: Child
// found: Parent
val page: Child by lazy { if (true) Page.One else Page.Two }
// Works fine:
val page by lazy<Child> { if (true) Page.One else Page.Two }
{code}