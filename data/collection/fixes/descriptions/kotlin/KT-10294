I get a StackOverflow error when IDEA plugin tries to complete and/or analyze the next code

{code:lang=kotlin|title=Code}
assertThat(ArrayList<String>()).isNotEmpty()
{code}

This is the stacktrace of the error:

{code:lang=bash|title=Code}
null
java.lang.StackOverflowError
	at com.intellij.psi.stubs.StubBase.findChildStubByType(StubBase.java:75)
	at com.intellij.psi.impl.compiled.ClsClassImpl.getTypeParameterList(ClsClassImpl.java:73)
	at com.intellij.psi.impl.PsiImplUtil.getTypeParameters(PsiImplUtil.java:116)
	at com.intellij.psi.impl.compiled.ClsClassImpl.getTypeParameters(ClsClassImpl.java:213)
	at com.intellij.psi.util.PsiUtil.typeParametersIterable(PsiUtil.java:815)
	at org.jetbrains.kotlin.load.java.structure.impl.JavaClassifierTypeImpl.getReversedTypeParameters(JavaClassifierTypeImpl.java:130)
	at org.jetbrains.kotlin.load.java.structure.impl.JavaClassifierTypeImpl.getTypeArguments(JavaClassifierTypeImpl.java:115)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver$LazyJavaClassifierType.isRaw(LazyJavaTypeResolver.kt:183)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver$LazyJavaClassifierType.getCapabilities(LazyJavaTypeResolver.kt:253)
	at org.jetbrains.kotlin.types.AbstractKotlinType.getCapability(AbstractKotlinType.java:32)
	at org.jetbrains.kotlin.types.typeUtil.TypeUtilsKt.getContainedTypeParameters(TypeUtils.kt:64)
	at org.jetbrains.kotlin.types.typeUtil.TypeUtilsKt.getContainedAndCapturedTypeParameterConstructors(TypeUtils.kt:90)
	at org.jetbrains.kotlin.types.TypeSubstitutor$2.<init>(TypeSubstitutor.java:234)
	at org.jetbrains.kotlin.types.TypeSubstitutor.substituteCompoundType(TypeSubstitutor.java:233)
	at org.jetbrains.kotlin.types.TypeSubstitutor.unsafeSubstitute(TypeSubstitutor.java:202)
	at org.jetbrains.kotlin.types.TypeSubstitutor.unsafeSubstitute(TypeSubstitutor.java:140)
	at org.jetbrains.kotlin.types.TypeSubstitutor.substituteWithoutApproximation(TypeSubstitutor.java:122)
	at org.jetbrains.kotlin.types.TypeSubstitutor.substitute(TypeSubstitutor.java:108)
	at org.jetbrains.kotlin.types.TypeSubstitutor.substitute(TypeSubstitutor.java:102)
	at org.jetbrains.kotlin.types.StarProjectionImplKt.starProjectionType(StarProjectionImpl.kt:48)
	at org.jetbrains.kotlin.types.StarProjectionImpl$_type$2.invoke(StarProjectionImpl.kt:31)
	at org.jetbrains.kotlin.types.StarProjectionImpl$_type$2.invoke(StarProjectionImpl.kt:22)
	at kotlin.SafePublicationLazyImpl.getValue(Lazy.kt:182)
	at kotlin.LazyKt.getValue(Lazy.kt:77)
	at org.jetbrains.kotlin.types.StarProjectionImpl.get_type(StarProjectionImpl.kt)
	at org.jetbrains.kotlin.types.StarProjectionImpl.getType(StarProjectionImpl.kt:34)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.toTypeArgument(CapturedTypeApproximation.kt:59)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateCapturedTypes(CapturedTypeApproximation.kt:108)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateProjection(CapturedTypeApproximation.kt:127)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateCapturedTypes(CapturedTypeApproximation.kt:108)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateProjection(CapturedTypeApproximation.kt:127)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateCapturedTypes(CapturedTypeApproximation.kt:108)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateProjection(CapturedTypeApproximation.kt:127)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateCapturedTypes(CapturedTypeApproximation.kt:108)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateProjection(CapturedTypeApproximation.kt:127)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateCapturedTypes(CapturedTypeApproximation.kt:108)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateProjection(CapturedTypeApproximation.kt:127)
	at org.jetbrains.kotlin.types.typesApproximation.CapturedTypeApproximationKt.approximateCapturedTypes(CapturedTypeApproximation.kt:108)
    ...
{code}

Notes:

Kotlin Plugin: 1.0.0-beta-3595-IJ141-11
AssertJ: 1.7.1