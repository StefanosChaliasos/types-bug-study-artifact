Consider the following code:

```
listOf<Any>().map {
    when (it) {
        is Int -> it
        else -> throw AssertionError()
    }
}.sum()
```

Although it should compile, it doesn't because the type of the `when` expression is `Any` instead of `Int`. If I add a cast to `Int` like so 

```
listOf<Any>().map {
    when (it) {
        is Int -> it as Int
        else -> throw AssertionError()
    }
}.sum()
```

the code compiles but a warning is generated saying "No cast needed".