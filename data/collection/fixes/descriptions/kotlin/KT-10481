Before beta 4, this was working:

```
open class A {
    open var value: Int = 4
        protected set
}

class MutableA : A() {
    override var value: Int = 4
    public set
}

fun test(myA: A) {
    if (myA is MutableA) {
        myA.value = 5
    }
}
```

Now, there is an error when assigning `myA.value` because `Cannot assign to 'value': the setter is 'protected' in 'A'`.

If I try to cast `myA`, then I get a warning instead: `No cast needed` :D

Hopefully this can revert to the smart casting situation, it's very useful