Consider code:
```
		var user: User? =  dao.users.get(ObjectId(inAuthRequest.userId))

		if (user != null)
			return Response.status(Response.Status.FORBIDDEN).entity("").build()

		try {
			user = User(
					ObjectId(inAuthRequest.userId),
					inAuthRequest.name)
		} catch (ex: Exception) {
			return Response.status(Response.Status.NOT_ACCEPTABLE).entity("").build()
		}

		user.iconName = ""
```
On last line compiler gives error: Error:(126, 7) Kotlin: Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable receiver of type X.X.User?

But if I place user assignment code outside of try/catch, then everything compiles fine.

User's constructor can throw IllegalArgumentException. But even if it doesn't, the error remains.