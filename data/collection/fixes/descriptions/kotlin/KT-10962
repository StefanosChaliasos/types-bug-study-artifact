{code}
public abstract class Camera {
    @Nullable
    public abstract String getPortExternal();
}
{code}

{code}
fun useCamera(camera: Camera) {
    val ports = hashSetOf<String>()
    var huntForPort = false
    if (camera.portExternal.isNullOrBlank() && ports.contains(camera.portExternal)) { // resolved to extension function
        huntForPort = true
    }
    if (camera.portExternal != null && ports.contains(camera.portExternal)) { // wrong error, resolved to member 
        huntForPort = true
    }
}
{code}

The second "contains" call is (correctly) highlighted as "Smart cast is impossible". The first one is, for some reason, allowed.