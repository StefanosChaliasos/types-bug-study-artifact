Occurs for the following code
```
fun doSomethingStrangeWithCollection(collection: Collection<String>): Collection<String>? {
    val groupsByLength = collection.groupBy { s -> { s.length } }

    val maximumSizeOfGroup = groupsByLength.values.maxBy { it.size }.
    return groupsByLength.values.firstOrNull { group -> {group.size == maximumSizeOfGroup} }
}
```

Stack trace:
```
java.lang.AssertionError: Cant find nested pseudocode for element: File name: Test.kt Physical: true
// ... function text ...
	at org.jetbrains.kotlin.cfg.pseudocode.PseudocodeUtilsKt.getContainingPseudocode(pseudocodeUtils.kt:302)
	at org.jetbrains.kotlin.idea.quickfix.createFromUsage.callableBuilder.CallableBuilder$pseudocode$2.invoke(CallableBuilder.kt:153)
	at org.jetbrains.kotlin.idea.quickfix.createFromUsage.callableBuilder.CallableBuilder$pseudocode$2.invoke(CallableBuilder.kt:141)
	at kotlin.SynchronizedLazyImpl.getValue(Lazy.kt:130)
	at org.jetbrains.kotlin.idea.quickfix.createFromUsage.callableBuilder.CallableBuilder.getPseudocode(CallableBuilder.kt:1053)
	at org.jetbrains.kotlin.idea.quickfix.createFromUsage.callableBuilder.TypeInfo$ByExpression.getPossibleTypes(CallableInfo.kt:48)
	at org.jetbrains.kotlin.idea.quickfix.createFromUsage.callableBuilder.CallableBuilder.computeTypeCandidates(CallableBuilder.kt:162)
	at org.jetbrains.kotlin.idea.quickfix.createFromUsage.createCallable.CreateCallableFromUsageFixBase.isAvailable(CreateCallableFromUsageFix.kt:117)
	at org.jetbrains.kotlin.idea.quickfix.QuickFixWithDelegateFactory.isAvailable(QuickFixWithDelegateFactory.kt:46)
	at org.jetbrains.kotlin.idea.quickfix.KotlinIntentionActionFactoryWithDelegate.doCreateActions(KotlinIntentionActionFactoryWithDelegate.kt:87)
	at org.jetbrains.kotlin.idea.quickfix.KotlinIntentionActionsFactory.createActions(KotlinIntentionActionsFactory.kt:54)
	at org.jetbrains.kotlin.idea.quickfix.KotlinIntentionActionsFactory.createActionsForAllProblems(KotlinIntentionActionsFactory.kt:36)
	at org.jetbrains.kotlin.idea.highlighter.KotlinPsiCheckerKt.createQuickFixes(KotlinPsiChecker.kt:122)
	at org.jetbrains.kotlin.idea.highlighter.KotlinPsiCheckerKt.access$createQuickFixes(KotlinPsiChecker.kt:1)
	at org.jetbrains.kotlin.idea.highlighter.ElementAnnotator.setUpAnnotations(KotlinPsiChecker.kt:251)
	at org.jetbrains.kotlin.idea.highlighter.ElementAnnotator.registerDiagnosticAnnotations(KotlinPsiChecker.kt:247)
	at org.jetbrains.kotlin.idea.highlighter.ElementAnnotator.registerDiagnosticsAnnotations(KotlinPsiChecker.kt:183)
	at org.jetbrains.kotlin.idea.highlighter.KotlinPsiChecker.annotateElement(KotlinPsiChecker.kt:93)
	at org.jetbrains.kotlin.idea.highlighter.KotlinPsiChecker.annotate(KotlinPsiChecker.kt:73)
	at org.jetbrains.kotlin.idea.highlighter.KotlinPsiCheckerAndHighlightingUpdater.annotate(KotlinPsiCheckerAndHighlightingUpdater.java:32)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.runAnnotators(DefaultHighlightVisitor.java:159)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.visit(DefaultHighlightVisitor.java:102)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.runVisitors(GeneralHighlightingPass.java:340)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$100(GeneralHighlightingPass.java:64)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$3.run(GeneralHighlightingPass.java:269)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:294)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$200(GeneralHighlightingPass.java:64)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$4.run(GeneralHighlightingPass.java:300)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.analyze(DefaultHighlightVisitor.java:86)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:297)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectHighlights(GeneralHighlightingPass.java:266)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectInformationWithProgress(GeneralHighlightingPass.java:205)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:97)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:67)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1$1.run(PassExecutorService.java:444)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1098)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1.run(PassExecutorService.java:435)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:452)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:402)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:54)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:432)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:408)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask.exec(JobLauncherImpl.java:189)
	at jsr166e.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at jsr166e.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:858)
	at jsr166e.ForkJoinPool.scan(ForkJoinPool.java:1687)
	at jsr166e.ForkJoinPool.runWorker(ForkJoinPool.java:1642)
	at jsr166e.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:109)
```