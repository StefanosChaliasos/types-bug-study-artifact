{code}public abstract class VirtualFile() {
    public abstract val size : Long
}

public class PhysicalVirtualFile : VirtualFile() {
    public override val size: Long
    get() = 11
}{code}


java.lang.NullPointerException
	at org.jetbrains.jet.codegen.JetTypeMapper.mapReturnType(JetTypeMapper.java:125)
	at org.jetbrains.jet.codegen.JetTypeMapper.mapSignature(JetTypeMapper.java:544)
	at org.jetbrains.jet.codegen.FunctionCodegen.checkOverride(FunctionCodegen.java:448)
	at org.jetbrains.jet.codegen.FunctionCodegen.generateBridgeIfNeeded(FunctionCodegen.java:275)
	at org.jetbrains.jet.codegen.FunctionCodegen.generatedMethod(FunctionCodegen.java:253)
	at org.jetbrains.jet.codegen.FunctionCodegen.generateMethod(FunctionCodegen.java:56)
	at org.jetbrains.jet.codegen.PropertyCodegen.generateGetter(PropertyCodegen.java:88)
	at org.jetbrains.jet.codegen.PropertyCodegen.gen(PropertyCodegen.java:43)
	at org.jetbrains.jet.codegen.ClassBodyCodegen.generateDeclaration(ClassBodyCodegen.java:71)
	at org.jetbrains.jet.codegen.ImplementationBodyCodegen.generateDeclaration(ImplementationBodyCodegen.java:760)
	at org.jetbrains.jet.codegen.ClassBodyCodegen.generateClassBody(ClassBodyCodegen.java:63)
	at org.jetbrains.jet.codegen.ClassBodyCodegen.generate(ClassBodyCodegen.java:46)
	at org.jetbrains.jet.codegen.ClassCodegen.generateImplementation(ClassCodegen.java:55)
	at org.jetbrains.jet.codegen.ClassCodegen.generate(ClassCodegen.java:45)
	at org.jetbrains.jet.codegen.NamespaceCodegen.generate(NamespaceCodegen.java:74)
	at org.jetbrains.jet.codegen.GenerationState.generateNamespace(GenerationState.java:137)
	at org.jetbrains.jet.codegen.GenerationState.compileCorrectFiles(GenerationState.java:118)
	at org.jetbrains.jet.plugin.compiler.JetCompiler$1.run(JetCompiler.java:98)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:854)
	at org.jetbrains.jet.plugin.compiler.JetCompiler.compile(JetCompiler.java:64)
	at com.intellij.compiler.impl.CompileDriver.compileSources(CompileDriver.java:1960)
	at com.intellij.compiler.impl.CompileDriver.translate(CompileDriver.java:1255)
	at com.intellij.compiler.impl.CompileDriver.doCompile(CompileDriver.java:987)
	at com.intellij.compiler.impl.CompileDriver.doCompile(CompileDriver.java:753)
	at com.intellij.compiler.impl.CompileDriver.access$1100(CompileDriver.java:105)
	at com.intellij.compiler.impl.CompileDriver$8.run(CompileDriver.java:649)
	at com.intellij.compiler.progress.CompilerTask.run(CompilerTask.java:155)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$TaskRunnable.run(ProgressManagerImpl.java:457)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$2.run(ProgressManagerImpl.java:178)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:206)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.runProcess(ProgressManagerImpl.java:169)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$7.run(ProgressManagerImpl.java:366)
	at com.intellij.openapi.application.impl.ApplicationImpl$6.run(ApplicationImpl.java:428)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
	at com.intellij.openapi.application.impl.ApplicationImpl$1$1.run(ApplicationImpl.java:140)
