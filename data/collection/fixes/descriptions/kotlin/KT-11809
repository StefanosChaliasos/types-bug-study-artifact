```
class A {
    val password by lazy { 2 }
        get
}
```Delegated property should have getter/setter public final var password: <Not computed yet> defined in A[PropertyDescriptorImpl@50f69228] string() by "smtpPassword"
java.lang.AssertionError: Delegated property should have getter/setter public final var password: <Not computed yet> defined in A[PropertyDescriptorImpl@50f69228] string() by "smtpPassword"
	at org.jetbrains.kotlin.resolve.DelegatedPropertyResolver.resolveDelegatedPropertyConventionMethod(DelegatedPropertyResolver.java:184)
	at org.jetbrains.kotlin.resolve.DelegatedPropertyResolver.getDelegatedPropertyGetMethodReturnType(DelegatedPropertyResolver.java:96)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver.resolveDelegatedPropertyType(VariableTypeResolver.kt:144)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver.access$resolveDelegatedPropertyType(VariableTypeResolver.kt:39)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver$process$1.invoke(VariableTypeResolver.kt:72)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver$process$1.invoke(VariableTypeResolver.kt:39)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.types.DeferredType.getDelegate(DeferredType.java:90)
	at org.jetbrains.kotlin.types.DelegatingType.isError(DelegatingType.java:61)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolvePropertyGetterDescriptor(DescriptorResolver.java:917)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolvePropertyDescriptor(DescriptorResolver.java:750)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.doGetProperties(AbstractLazyMemberScope.kt:105)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$propertyDescriptors$1.invoke(AbstractLazyMemberScope.kt:50)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$propertyDescriptors$1.invoke(AbstractLazyMemberScope.kt:39)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.getContributedVariables(AbstractLazyMemberScope.kt:96)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getContributedVariables(LazyClassMemberScope.kt:185)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.computeDescriptorsFromDeclaredElements(AbstractLazyMemberScope.kt:144)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope$descriptorsFromDeclaredElements$1.invoke(LazyClassMemberScope.kt:55)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope$descriptorsFromDeclaredElements$1.invoke(LazyClassMemberScope.kt:47)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getContributedDescriptors(LazyClassMemberScope.kt:63)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getAllDescriptors(DescriptorUtils.java:554)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.resolveMemberHeaders(LazyClassDescriptor.java:552)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.doForceResolveAllContents(LazyClassDescriptor.java:522)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.access$200(LazyClassDescriptor.java:73)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$6.invoke(LazyClassDescriptor.java:224)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$6.invoke(LazyClassDescriptor.java:221)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.forceResolveAllContents(LazyClassDescriptor.java:518)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.doForceResolveAllContents(ForceResolveUtil.java:71)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:37)