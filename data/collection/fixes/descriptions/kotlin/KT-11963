Example:

{code} val <T :  <caret>    KClass<T>.java: Class<T> {code}

Recursive call in a lazy value under LockBasedStorageManager@5949052b (org.jetbrains.kotlin.idea.caches.resolve.GlobalContextUtilsKt.withCompositeExceptionTrackerUnderSameLock(globalContextUtils.kt:27))
java.lang.IllegalStateException: Recursive call in a lazy value under LockBasedStorageManager@5949052b (org.jetbrains.kotlin.idea.caches.resolve.GlobalContextUtilsKt.withCompositeExceptionTrackerUnderSameLock(globalContextUtils.kt:27))
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType.getDelegate(TypeResolver.kt:91)
	at org.jetbrains.kotlin.types.DelegatingType.getMemberScope(DelegatingType.java:56)
	at org.jetbrains.kotlin.resolve.TypeResolver.getScopeForTypeParameter(TypeResolver.kt:330)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeForTypeParameter(TypeResolver.kt:305)
	at org.jetbrains.kotlin.resolve.TypeResolver.access$resolveTypeForTypeParameter(TypeResolver.kt:49)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:184)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:905)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:50)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:159)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:116)
	at org.jetbrains.kotlin.resolve.TypeResolver.access$doResolvePossiblyBareType(TypeResolver.kt:49)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:90)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:89)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType.getDelegate(TypeResolver.kt:91)
	at org.jetbrains.kotlin.types.DelegatingType.getAnnotations(DelegatingType.java:67)
	at org.jetbrains.kotlin.resolve.TypeResolver.forceResolveTypeContents(TypeResolver.kt:142)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveDescriptorForType(TypeResolver.kt:580)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:161)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:905)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:50)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:159)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:116)
	at org.jetbrains.kotlin.resolve.TypeResolver.access$doResolvePossiblyBareType(TypeResolver.kt:49)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:90)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:89)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType.getDelegate(TypeResolver.kt:91)
	at org.jetbrains.kotlin.types.DelegatingType.getConstructor(DelegatingType.java:33)
	at org.jetbrains.kotlin.resolve.SupertypeLoopCheckerImpl.findLoopsInSupertypesAndDisconnect(findLoopsInSupertypes.kt:38)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor$supertypes$3.invoke(AbstractTypeConstructor.kt:42)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor$supertypes$3.invoke(AbstractTypeConstructor.kt:22)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$3.postCompute(LockBasedStorageManager.java:171)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:323)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor.getSupertypes(AbstractTypeConstructor.kt:23)
	at org.jetbrains.kotlin.descriptors.impl.AbstractTypeParameterDescriptor.getUpperBounds(AbstractTypeParameterDescriptor.java:116)
	at org.jetbrains.kotlin.types.TypeIntersector.getUpperBoundsAsType(TypeIntersector.java:148)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.checkConflictingUpperBounds(DescriptorResolver.java:567)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolveGenericBounds(DescriptorResolver.java:521)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolvePropertyDescriptor(DescriptorResolver.java:729)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.doGetProperties(AbstractLazyMemberScope.kt:105)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$propertyDescriptors$1.invoke(AbstractLazyMemberScope.kt:50)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$propertyDescriptors$1.invoke(AbstractLazyMemberScope.kt:39)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.getContributedVariables(AbstractLazyMemberScope.kt:96)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver$1.visitProperty(LazyDeclarationResolver.java:223)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver$1.visitProperty(LazyDeclarationResolver.java:118)
	at org.jetbrains.kotlin.psi.KtProperty.accept(KtProperty.java:57)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver.resolveToDescriptor(LazyDeclarationResolver.java:118)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver.resolveToDescriptor(LazyDeclarationResolver.java:113)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.createPropertyDescriptors(LazyTopDownAnalyzer.kt:204)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.kt:176)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeDeclarations(LazyTopDownAnalyzerForTopLevel.java:74)
	at org.jetbrains.kotlin.idea.caches.resolve.KotlinResolveDataProvider.analyze(KotlinResolveCache.kt:174)
	at org.jetbrains.kotlin.idea.caches.resolve.PerFileAnalysisCache.analyze(KotlinResolveCache.kt:93)
	at org.jetbrains.kotlin.idea.caches.resolve.PerFileAnalysisCache.getAnalysisResults(KotlinResolveCache.kt:78)
	at org.jetbrains.kotlin.idea.caches.resolve.ProjectResolutionFacade.getAnalysisResultsForElements(ProjectResolutionFacade.kt:76)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.analyzeFullyAndGetResult(ProjectResolutionFacade.kt:108)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.analyzeFullyAndGetResult(resolutionApi.kt:77)
	at org.jetbrains.kotlin.idea.highlighter.KotlinPsiChecker.annotate(KotlinPsiChecker.kt:63)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.runAnnotators(DefaultHighlightVisitor.java:135)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.visit(DefaultHighlightVisitor.java:99)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.runVisitors(GeneralHighlightingPass.java:351)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$100(GeneralHighlightingPass.java:62)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$3.run(GeneralHighlightingPass.java:280)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:305)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$200(GeneralHighlightingPass.java:62)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$4.run(GeneralHighlightingPass.java:311)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.analyze(DefaultHighlightVisitor.java:83)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:308)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectHighlights(GeneralHighlightingPass.java:277)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectInformationWithProgress(GeneralHighlightingPass.java:216)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:82)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1$1.run(PassExecutorService.java:444)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1178)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1.run(PassExecutorService.java:435)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:446)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:392)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:54)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:432)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:408)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:206)
	at jsr166e.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at jsr166e.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:858)
	at jsr166e.ForkJoinPool.scan(ForkJoinPool.java:1687)
	at jsr166e.ForkJoinPool.runWorker(ForkJoinPool.java:1642)
	at jsr166e.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:108)
