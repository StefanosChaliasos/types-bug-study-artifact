java.lang.IllegalStateException
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3$1.getTypeVariable(JavaTypeTransformer.java:145)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:93)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:82)
	at com.intellij.psi.PsiClassType.accept(PsiClassType.java:218)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer.transformToType(JavaTypeTransformer.java:82)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$1.visitWildcardType(JavaTypeTransformer.java:55)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$1.visitWildcardType(JavaTypeTransformer.java:39)
	at com.intellij.psi.PsiWildcardType.accept(PsiWildcardType.java:170)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer.transformToTypeProjection(JavaTypeTransformer.java:39)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:153)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:82)
	at com.intellij.psi.PsiClassType.accept(PsiClassType.java:218)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer.transformToType(JavaTypeTransformer.java:82)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveParameterDescriptor(JavaDescriptorResolver.java:860)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveParameterDescriptors(JavaDescriptorResolver.java:784)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveMethodToFunctionDescriptor(JavaDescriptorResolver.java:1389)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveNamedGroupFunctions(JavaDescriptorResolver.java:1137)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveFunctionGroup(JavaDescriptorResolver.java:1186)
	at org.jetbrains.jet.lang.resolve.java.JavaClassOrPackageScope.getFunctions(JavaClassOrPackageScope.java:71)
	at org.jetbrains.jet.lang.resolve.ImportsResolver$ImportResolver.lookupDescriptorsForSimpleNameReference(ImportsResolver.java:293)
	at org.jetbrains.jet.lang.resolve.ImportsResolver$ImportResolver.lookupDescriptorsForQualifiedExpression(ImportsResolver.java:188)
	at org.jetbrains.jet.lang.resolve.ImportsResolver$ImportResolver.processImportReference(ImportsResolver.java:139)
	at org.jetbrains.jet.lang.resolve.ImportsResolver.processImports(ImportsResolver.java:52)
	at org.jetbrains.jet.lang.resolve.ImportsResolver.processMembersImports(ImportsResolver.java:36)
	at org.jetbrains.jet.lang.resolve.DeclarationResolver.process(DeclarationResolver.java:30)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.doProcess(TopDownAnalyzer.java:67)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.process(TopDownAnalyzer.java:54)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.process(TopDownAnalyzer.java:40)
	at org.jetbrains.jet.lang.resolve.AnalyzingUtils.analyzeFilesWithGivenTrace(AnalyzingUtils.java:102)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade.analyzeFilesWithJavaIntegration(AnalyzerFacade.java:129)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade$2.compute(AnalyzerFacade.java:58)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:47)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:200)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:37)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade.analyzeFileWithCache(AnalyzerFacade.java:80)
	at org.jetbrains.jet.plugin.compiler.WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(WholeProjectAnalyzerFacade.java:70)
	at org.jetbrains.jet.plugin.annotations.JetLineMarkerProvider.getLineMarkerInfo(JetLineMarkerProvider.java:47)
	at com.intellij.codeInsight.daemon.impl.LineMarkersPass.addLineMarkers(LineMarkersPass.java:177)
	at com.intellij.codeInsight.daemon.impl.LineMarkersPass.collectInformationWithProgress(LineMarkersPass.java:117)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:58)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:61)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1$1.run(PassExecutorService.java:350)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1049)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1.run(PassExecutorService.java:342)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:206)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:340)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:316)
	at com.intellij.concurrency.JobUtil$3.call(JobUtil.java:134)
	at com.intellij.concurrency.JobUtil$3.call(JobUtil.java:131)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at com.intellij.concurrency.PrioritizedFutureTask.access$101(PrioritizedFutureTask.java:31)
	at com.intellij.concurrency.PrioritizedFutureTask$1.run(PrioritizedFutureTask.java:70)
	at com.intellij.concurrency.PrioritizedFutureTask.run(PrioritizedFutureTask.java:113)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
java.lang.IllegalStateException
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3$1.getTypeVariable(JavaTypeTransformer.java:145)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:93)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:82)
	at com.intellij.psi.PsiClassType.accept(PsiClassType.java:218)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer.transformToType(JavaTypeTransformer.java:82)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$1.visitWildcardType(JavaTypeTransformer.java:55)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$1.visitWildcardType(JavaTypeTransformer.java:39)
	at com.intellij.psi.PsiWildcardType.accept(PsiWildcardType.java:170)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer.transformToTypeProjection(JavaTypeTransformer.java:39)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:153)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer$3.visitClassType(JavaTypeTransformer.java:82)
	at com.intellij.psi.PsiClassType.accept(PsiClassType.java:218)
	at org.jetbrains.jet.lang.resolve.java.JavaTypeTransformer.transformToType(JavaTypeTransformer.java:82)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveParameterDescriptor(JavaDescriptorResolver.java:860)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveParameterDescriptors(JavaDescriptorResolver.java:784)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveMethodToFunctionDescriptor(JavaDescriptorResolver.java:1389)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveNamedGroupFunctions(JavaDescriptorResolver.java:1137)
	at org.jetbrains.jet.lang.resolve.java.JavaDescriptorResolver.resolveFunctionGroup(JavaDescriptorResolver.java:1186)
	at org.jetbrains.jet.lang.resolve.java.JavaClassOrPackageScope.getFunctions(JavaClassOrPackageScope.java:71)
	at org.jetbrains.jet.lang.resolve.ImportsResolver$ImportResolver.lookupDescriptorsForSimpleNameReference(ImportsResolver.java:293)
	at org.jetbrains.jet.lang.resolve.ImportsResolver$ImportResolver.lookupDescriptorsForQualifiedExpression(ImportsResolver.java:188)
	at org.jetbrains.jet.lang.resolve.ImportsResolver$ImportResolver.processImportReference(ImportsResolver.java:139)
	at org.jetbrains.jet.lang.resolve.ImportsResolver.processImports(ImportsResolver.java:52)
	at org.jetbrains.jet.lang.resolve.ImportsResolver.processMembersImports(ImportsResolver.java:36)
	at org.jetbrains.jet.lang.resolve.DeclarationResolver.process(DeclarationResolver.java:30)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.doProcess(TopDownAnalyzer.java:67)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.process(TopDownAnalyzer.java:54)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.process(TopDownAnalyzer.java:40)
	at org.jetbrains.jet.lang.resolve.AnalyzingUtils.analyzeFilesWithGivenTrace(AnalyzingUtils.java:102)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade.analyzeFilesWithJavaIntegration(AnalyzerFacade.java:129)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade$2.compute(AnalyzerFacade.java:58)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:47)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:200)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:37)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade.analyzeFileWithCache(AnalyzerFacade.java:80)
	at org.jetbrains.jet.plugin.compiler.WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(WholeProjectAnalyzerFacade.java:70)
	at org.jetbrains.jet.plugin.annotations.JetLineMarkerProvider.getLineMarkerInfo(JetLineMarkerProvider.java:47)
	at com.intellij.codeInsight.daemon.impl.LineMarkersPass.addLineMarkers(LineMarkersPass.java:177)
	at com.intellij.codeInsight.daemon.impl.LineMarkersPass.collectInformationWithProgress(LineMarkersPass.java:117)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:58)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:61)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1$1.run(PassExecutorService.java:350)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1049)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1.run(PassExecutorService.java:342)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:206)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:340)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:316)
	at com.intellij.concurrency.JobUtil$3.call(JobUtil.java:134)
	at com.intellij.concurrency.JobUtil$3.call(JobUtil.java:131)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at com.intellij.concurrency.PrioritizedFutureTask.access$101(PrioritizedFutureTask.java:31)
	at com.intellij.concurrency.PrioritizedFutureTask$1.run(PrioritizedFutureTask.java:70)
	at com.intellij.concurrency.PrioritizedFutureTask.run(PrioritizedFutureTask.java:113)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
