{code}

interface K1 {
    fun test() {
    }
}

interface K12 : K1 {
    override fun test();
}


interface K13 : K1 {

}

interface K14 : K13, K12 {

}

class K5 : K14 {

}
{code}

{cut Exception}
java.lang.IllegalStateException: Concrete fake override DescriptorBasedFunctionHandle(descriptor=public open fun test(): kotlin.Unit defined in org.jetbrains.kotlin.codegen.intrinsics.K5[SimpleFunctionDescriptorImpl@42c6122f]) should have exactly one concrete super-declaration: []
	at org.jetbrains.kotlin.backend.common.bridges.BridgesKt.findConcreteSuperDeclaration(bridges.kt:113)
	at org.jetbrains.kotlin.backend.common.bridges.BridgesKt.generateBridges(bridges.kt:51)
	at org.jetbrains.kotlin.backend.common.bridges.ImplKt.generateBridgesForFunctionDescriptor(impl.kt:30)
	at org.jetbrains.kotlin.codegen.FunctionCodegen.generateBridges(FunctionCodegen.java:574)
	at org.jetbrains.kotlin.codegen.ClassBodyCodegen.generateBody(ClassBodyCodegen.java:92)
	at org.jetbrains.kotlin.codegen.MemberCodegen.generate(MemberCodegen.java:118)
	at org.jetbrains.kotlin.codegen.MemberCodegen.genClassOrObject(MemberCodegen.java:232)
	at org.jetbrains.kotlin.codegen.PackageCodegen.generateClassOrObject(PackageCodegen.java:145)
	at org.jetbrains.kotlin.codegen.PackageCodegen.generateFile(PackageCodegen.java:98)
	at org.jetbrains.kotlin.codegen.PackageCodegen.generate(PackageCodegen.java:61)
	at org.jetbrains.kotlin.codegen.KotlinCodegenFacade.generatePackage(KotlinCodegenFacade.java:99)
	at org.jetbrains.kotlin.codegen.KotlinCodegenFacade.doGenerateFiles(KotlinCodegenFacade.java:77)
	at org.jetbrains.kotlin.codegen.KotlinCodegenFacade.compileCorrectFiles(KotlinCodegenFacade.java:44)
	at org.jetbrains.kotlin.idea.internal.KotlinBytecodeToolWindow.getBytecodeForFile(KotlinBytecodeToolWindow.java:239)
	at org.jetbrains.kotlin.idea.internal.KotlinBytecodeToolWindow$UpdateBytecodeToolWindowTask.processRequest(KotlinBytecodeToolWindow.java:108)
	at org.jetbrains.kotlin.idea.internal.KotlinBytecodeToolWindow$UpdateBytecodeToolWindowTask.processRequest(KotlinBytecodeToolWindow.java:69)
	at org.jetbrains.kotlin.idea.util.LongRunningReadTask$1$1.run(LongRunningReadTask.java:110)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:950)
	at org.jetbrains.kotlin.idea.util.LongRunningReadTask$3.run(LongRunningReadTask.java:226)
	at com.intellij.openapi.progress.impl.CoreProgressManager$2.run(CoreProgressManager.java:142)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:446)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:392)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:54)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:127)
	at org.jetbrains.kotlin.idea.util.LongRunningReadTask.runWithWriteActionPriority(LongRunningReadTask.java:223)
	at org.jetbrains.kotlin.idea.util.LongRunningReadTask$1.run(LongRunningReadTask.java:105)
	at com.intellij.openapi.application.impl.ApplicationImpl$8.run(ApplicationImpl.java:369)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

{cut}
