Suddenly my small kotlin project is not compiled anymore, not even clean rebuild

IntelliJ IDEA 2016.3 EAP
Build #IU-163.377, built on June 22, 2016
IntelliJ IDEA EAP User
Expiration date: July 22, 2016
JRE: 1.8.0_76-release-b218 x86_64
JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o


{code}
Error:Kotlin: [Internal Error] java.lang.AssertionError: Recursion detected on input: IMPORT_DIRECTIVE under LockBasedStorageManager@814dd0 (org.jetbrains.kotlin.storage.LockBasedStorageManager.createWithExceptionHandling(LockBasedStorageManager.java:65))
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.getImportScope(LazyImportScope.kt:161)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$1.invoke(LazyImportScope.kt:136)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:142)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:73)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager.compute(LockBasedStorageManager.java:211)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.selectSingleFromImports(LazyImportScope.kt:142)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportScope.getContributedClassifier(LazyImportScope.kt:187)
	at org.jetbrains.kotlin.resolve.scopes.utils.ScopeUtilsKt.findClassifier(ScopeUtils.kt:74)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.resolveDescriptorForType(QualifiedExpressionResolver.kt:74)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveDescriptorForType(TypeResolver.kt:585)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:161)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:905)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:50)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:159)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:116)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolvePossiblyBareType(TypeResolver.kt:104)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveType(TypeResolver.kt:74)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeProjections(TypeResolver.kt:551)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeForClass(TypeResolver.kt:364)
	at org.jetbrains.kotlin.resolve.TypeResolver.access$resolveTypeForClass(TypeResolver.kt:49)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:186)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:905)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:50)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:159)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:116)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolvePossiblyBareType(TypeResolver.kt:104)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveType(TypeResolver.kt:74)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveType(TypeResolver.kt:69)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolveSuperTypeListEntries(DescriptorResolver.java:176)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolveSupertypes(DescriptorResolver.java:106)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$LazyClassTypeConstructor.computeSupertypes(LazyClassDescriptor.java:602)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor$supertypes$1.invoke(AbstractTypeConstructor.kt:35)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor$supertypes$1.invoke(AbstractTypeConstructor.kt:22)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor.getSupertypes(AbstractTypeConstructor.kt:23)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor.getSupertypes(AbstractTypeConstructor.kt:22)
	at org.jetbrains.kotlin.types.checker.UtilsKt.findCorrespondingSupertype(utils.kt:71)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.findCorrespondingSupertype(TypeCheckingProcedure.java:46)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.isSubtypeOfForRepresentatives(TypeCheckingProcedure.java:212)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.isSubtypeOf(TypeCheckingProcedure.java:196)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.heterogeneousEquivalence(TypeCheckingProcedure.java:127)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.equalTypes(TypeCheckingProcedure.java:76)
	at org.jetbrains.kotlin.types.checker.KotlinTypeChecker.equalTypes(KotlinTypeChecker.java:66)
	at org.jetbrains.kotlin.load.java.typeEnhancement.TypeQualifiersKt.computeIndexedQualifiersForOverride(typeQualifiers.kt:126)
	at org.jetbrains.kotlin.load.java.typeEnhancement.SignatureParts.enhance(signatureEnhancement.kt:65)
	at org.jetbrains.kotlin.load.java.typeEnhancement.SignatureEnhancementKt.enhanceSignature(signatureEnhancement.kt:48)
	at org.jetbrains.kotlin.load.java.typeEnhancement.SignatureEnhancementKt.enhanceSignatures(signatureEnhancement.kt:25)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:92)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:52)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedFunctions(LazyJavaScope.kt:219)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.computeDescriptors(LazyJavaScope.kt:321)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:58)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:52)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedDescriptors(LazyJavaScope.kt:300)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getAllDescriptors(DescriptorUtils.java:563)
	at org.jetbrains.kotlin.load.java.sam.SingleAbstractMethodUtils.getAbstractMembers(SingleAbstractMethodUtils.java:48)
	at org.jetbrains.kotlin.load.java.sam.SingleAbstractMethodUtils.getSingleAbstractMethodOrNull(SingleAbstractMethodUtils.java:104)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl.resolveFunctionTypeIfSamInterface(SamConversionResolverImpl.kt:48)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassDescriptor$functionTypeForSamInterface$1.invoke(LazyJavaClassDescriptor.kt:111)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassDescriptor$functionTypeForSamInterface$1.invoke(LazyJavaClassDescriptor.kt:46)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassDescriptor.getFunctionTypeForSamInterface(LazyJavaClassDescriptor.kt:124)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl.resolveSamConstructor(SamConversionResolverImpl.kt:33)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaPackageScope.computeNonDeclaredFunctions(LazyJavaPackageScope.kt:182)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:90)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:52)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedFunctions(LazyJavaScope.kt:219)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaPackageScope.getContributedFunctions(LazyJavaPackageScope.kt:143)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaPackageScope.getContributedFunctions(LazyJavaPackageScope.kt:36)
	at org.jetbrains.kotlin.resolve.scopes.ChainedMemberScope.getContributedFunctions(ChainedMemberScope.kt:40)
	at org.jetbrains.kotlin.resolve.scopes.AbstractScopeAdapter.getContributedFunctions(AbstractScopeAdapter.kt:37)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.collectCandidateDescriptors(QualifiedExpressionResolver.kt:216)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processSingleImport(QualifiedExpressionResolver.kt:191)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processImportReference(QualifiedExpressionResolver.kt:167)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:84)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:73)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.getImportScope(LazyImportScope.kt:161)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$1.invoke(LazyImportScope.kt:136)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:142)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:73)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager.compute(LockBasedStorageManager.java:211)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.selectSingleFromImports(LazyImportScope.kt:142)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportScope.getContributedClassifier(LazyImportScope.kt:187)
	at org.jetbrains.kotlin.resolve.scopes.utils.ScopeUtilsKt.findClassifier(ScopeUtils.kt:74)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.resolveDescriptorForType(QualifiedExpressionResolver.kt:74)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveDescriptorForType(TypeResolver.kt:585)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:161)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:905)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:50)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:159)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:116)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolvePossiblyBareType(TypeResolver.kt:104)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveType(TypeResolver.kt:74)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveType(TypeResolver.kt:69)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.resolveValueParameters(FunctionDescriptorResolver.kt:320)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.createValueParameterDescriptors(FunctionDescriptorResolver.kt:214)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.initializeFunctionDescriptorAndExplicitReturnType(FunctionDescriptorResolver.kt:159)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.resolveFunctionDescriptor(FunctionDescriptorResolver.kt:106)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.resolveFunctionDescriptor(FunctionDescriptorResolver.kt:75)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.doGetFunctions(AbstractLazyMemberScope.kt:77)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.access$doGetFunctions(AbstractLazyMemberScope.kt:39)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$functionDescriptors$1.invoke(AbstractLazyMemberScope.kt:49)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$functionDescriptors$1.invoke(AbstractLazyMemberScope.kt:39)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.getContributedFunctions(AbstractLazyMemberScope.kt:68)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getContributedFunctions(LazyClassMemberScope.kt:125)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver$1.visitNamedFunction(LazyDeclarationResolver.java:167)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver$1.visitNamedFunction(LazyDeclarationResolver.java:118)
	at org.jetbrains.kotlin.psi.KtNamedFunction.accept(KtNamedFunction.java:48)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver.resolveToDescriptor(LazyDeclarationResolver.java:118)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver.resolveToDescriptor(LazyDeclarationResolver.java:113)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.createFunctionDescriptors(LazyTopDownAnalyzer.kt:215)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.kt:175)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeDeclarations(LazyTopDownAnalyzerForTopLevel.java:74)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeFiles(LazyTopDownAnalyzerForTopLevel.java:66)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.java:145)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegrationWithCustomContext(TopDownAnalyzerFacadeForJVM.java:78)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$analyze$1.analyze(KotlinToJVMBytecodeCompiler.kt:325)
	at org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.kt:129)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.kt:318)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules(KotlinToJVMBytecodeCompiler.kt:124)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:173)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:221)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:175)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execAndOutputXml(CLICompiler.java:80)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$remoteIncrementalCompile$1.invoke(CompileServiceImpl.kt:248)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$remoteIncrementalCompile$1.invoke(CompileServiceImpl.kt:71)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1$1.invoke(CompileServiceImpl.kt:422)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1$1.invoke(CompileServiceImpl.kt:71)
	at org.jetbrains.kotlin.daemon.common.DummyProfiler.withMeasure(PerfUtils.kt:137)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.checkedCompile(CompileServiceImpl.kt:455)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.access$checkedCompile(CompileServiceImpl.kt:71)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1.invoke(CompileServiceImpl.kt:421)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$1.invoke(CompileServiceImpl.kt:71)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive(CompileServiceImpl.kt:540)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive$default(CompileServiceImpl.kt:505)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.doCompile(CompileServiceImpl.kt:412)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.remoteIncrementalCompile(CompileServiceImpl.kt:245)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$256(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}