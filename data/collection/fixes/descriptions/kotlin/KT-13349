
```
Exception while analyzing expression at (35,18) in ....kt:
Linker<IndexedValue<Foo>, FooWrapper, FooController>()
: Illegal resolved call to variable with invoke for Linker<IndexedValue<Foo>, FooWrapper, FooController>(). Variable: org.jetbrains.kotlin.resolve.calls.util.FakeCallableDescriptorForObject@261b2315
java.lang.AssertionError: Illegal resolved call to variable with invoke for Linker<IndexedValue<Foo>, FooWrapper, FooController>(). Variable: org.jetbrains.kotlin.resolve.calls.util.FakeCallableDescriptorForObject@261b2315
```
	at org.jetbrains.kotlin.resolve.calls.checkers.OperatorCallChecker.check(OperatorCallChecker.kt:46)
	at org.jetbrains.kotlin.resolve.calls.CallCompleter.completeCall(CallCompleter.kt:94)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:528)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.access$100(CallResolver.java:65)
	at org.jetbrains.kotlin.resolve.calls.CallResolver$1.invoke(CallResolver.java:186)
	at org.jetbrains.kotlin.resolve.calls.CallResolver$1.invoke(CallResolver.java:180)
	at org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:92)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:180)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:170)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:266)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.kt:88)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.kt:194)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfo(CallExpressionResolver.kt:173)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:691)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitCallExpression(ExpressionTypingVisitorDispatcher.java:389)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitCallExpression(ExpressionTypingVisitorDispatcher.java:55)
	at org.jetbrains.kotlin.psi.KtCallExpression.accept(KtCallExpression.java:35)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$1.invoke(ExpressionTypingVisitorDispatcher.java:182)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$1.invoke(ExpressionTypingVisitorDispatcher.java:172)
	at org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:92)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:172)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:143)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:155)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:98)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getType(ExpressionTypingServices.java:114)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.safeGetType(ExpressionTypingServices.java:81)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver.resolveInitializerType(VariableTypeResolver.kt:159)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver.access$resolveInitializerType(VariableTypeResolver.kt:39)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver$process$2.invoke(VariableTypeResolver.kt:88)
	at org.jetbrains.kotlin.resolve.VariableTypeResolver$process$2.invoke(VariableTypeResolver.kt:39)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.types.DeferredType.getDelegate(DeferredType.java:90)
	at org.jetbrains.kotlin.types.DelegatingType.getAnnotations(DelegatingType.java:67)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:94)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.doForceResolveAllContents(ForceResolveUtil.java:85)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:37)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:47)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:42)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.doForceResolveAllContents(LazyClassDescriptor.java:524)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.access$200(LazyClassDescriptor.java:73)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$6.invoke(LazyClassDescriptor.java:224)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$6.invoke(LazyClassDescriptor.java:221)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.forceResolveAllContents(LazyClassDescriptor.java:512)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.doForceResolveAllContents(ForceResolveUtil.java:71)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:37)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.doForceResolveAllContents(LazyClassDescriptor.java:519)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.access$200(LazyClassDescriptor.java:73)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$6.invoke(LazyClassDescriptor.java:224)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$6.invoke(LazyClassDescriptor.java:221)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.forceResolveAllContents(LazyClassDescriptor.java:512)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.doForceResolveAllContents(ForceResolveUtil.java:71)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:37)
	at org.jetbrains.kotlin.idea.caches.resolve.IDELightClassGenerationSupport.getContextForNonLocalClassOrObject(IDELightClassGenerationSupport.kt:89)
	at org.jetbrains.kotlin.idea.caches.resolve.IDELightClassGenerationSupport.getContextForClassOrObject(IDELightClassGenerationSupport.kt:71)
	at org.jetbrains.kotlin.asJava.builder.LightClassDataProviderForClassOrObject.getContext(LightClassDataProvider.kt:176)
	at org.jetbrains.kotlin.asJava.builder.LightClassDataProvider.computeLightClassData(LightClassDataProvider.kt:82)
	at org.jetbrains.kotlin.asJava.builder.LightClassDataProvider.compute(LightClassDataProvider.kt:72)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:49)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:222)
	at com.intellij.psi.impl.PsiCachedValue.getValueWithLock(PsiCachedValue.java:65)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:38)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$Companion.getLightClassData(KtLightClassForSourceDeclaration.kt:381)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getLightClassData(KtLightClassForSourceDeclaration.kt:112)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getJavaFileStub(KtLightClassForSourceDeclaration.kt:105)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.access$getJavaFileStub(KtLightClassForSourceDeclaration.kt:62)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$clsDelegate$2.invoke(KtLightClassForSourceDeclaration.kt:83)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$clsDelegate$2.invoke(KtLightClassForSourceDeclaration.kt:62)
	at kotlin.SafePublicationLazyImpl.getValue(Lazy.kt:189)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getClsDelegate(KtLightClassForSourceDeclaration.kt)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getClsDelegate(KtLightClassForSourceDeclaration.kt:62)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassBase.getDelegate(KtLightClassBase.java:57)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$_modifierList$2$1.getDelegate(KtLightClassForSourceDeclaration.kt:199)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers$_annotations$2.invoke(KtLightModifierListWithExplicitModifiers.kt:44)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers$_annotations$2.invoke(KtLightModifierListWithExplicitModifiers.kt:38)
	at kotlin.SafePublicationLazyImpl.getValue(Lazy.kt:189)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers.get_annotations(KtLightModifierListWithExplicitModifiers.kt)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers.getAnnotations(KtLightModifierListWithExplicitModifiers.kt:48)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers.findAnnotation(KtLightModifierListWithExplicitModifiers.kt:52)
	at com.intellij.codeInsight.AnnotationUtil.isAnnotated(AnnotationUtil.java:336)
	at com.intellij.codeInsight.AnnotationUtil.isAnnotated(AnnotationUtil.java:322)
	at com.intellij.spring.model.jam.SpringSemContributorUtil.lambda$createFunction$0(SpringSemContributorUtil.java:93)
	at com.intellij.semantic.SemServiceImpl$2.a(SemServiceImpl.java:92)
	at com.intellij.semantic.SemServiceImpl.a(SemServiceImpl.java:177)
	at com.intellij.semantic.SemServiceImpl.getSemElements(SemServiceImpl.java:148)
	at com.intellij.semantic.SemService.getSemElement(SemService.java:37)
	at com.intellij.spring.model.jam.SpringSemContributorUtil$1.fun(SpringSemContributorUtil.java:73)
	at com.intellij.spring.model.jam.SpringSemContributorUtil$1.fun(SpringSemContributorUtil.java:71)
	at com.intellij.semantic.SemServiceImpl$2.a(SemServiceImpl.java:92)
	at com.intellij.semantic.SemServiceImpl.a(SemServiceImpl.java:177)
	at com.intellij.semantic.SemServiceImpl.getSemElements(SemServiceImpl.java:148)
	at com.intellij.semantic.SemService.getSemElement(SemService.java:37)
	at com.intellij.jam.JamService.getJamElement(JamService.java:119)
	at com.intellij.spring.model.utils.SpringCommonUtils.isConfigurationOrMeta(SpringCommonUtils.java:129)
	at com.intellij.spring.profiles.SpringChangeActiveProfilesAction.containsConfigurations(SpringChangeActiveProfilesAction.java:131)
	at com.intellij.spring.profiles.SpringChangeActiveProfilesAction.hasConfigurations(SpringChangeActiveProfilesAction.java:123)
	at com.intellij.spring.profiles.SpringChangeActiveProfilesAction.getSpringModel(SpringChangeActiveProfilesAction.java:104)
	at com.intellij.spring.profiles.SpringProfilesEditorNotificationsProvider.createNotificationPanel(SpringProfilesEditorNotificationsProvider.java:70)
	at com.intellij.spring.profiles.SpringProfilesEditorNotificationsProvider.createNotificationPanel(SpringProfilesEditorNotificationsProvider.java:24)
	at com.intellij.ui.EditorNotificationsImpl$3.performInReadAction(EditorNotificationsImpl.java:143)
	at com.intellij.openapi.progress.util.ReadTask$1.compute(ReadTask.java:70)
	at com.intellij.openapi.progress.util.ReadTask$1.compute(ReadTask.java:67)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:871)
	at com.intellij.openapi.progress.util.ReadTask.runBackgroundProcess(ReadTask.java:67)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.a(ProgressIndicatorUtils.java:213)
	at com.intellij.openapi.progress.impl.CoreProgressManager$4.run(CoreProgressManager.java:190)
	at com.intellij.openapi.progress.impl.CoreProgressManager$3.run(CoreProgressManager.java:170)
	at com.intellij.openapi.progress.impl.CoreProgressManager.a(CoreProgressManager.java:494)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:443)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:54)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:155)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:187)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.a(ProgressIndicatorUtils.java:211)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.access$000(ProgressIndicatorUtils.java:44)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils$4.run(ProgressIndicatorUtils.java:179)
	at com.intellij.util.concurrency.BoundedTaskExecutor.runFirstTaskThenPollAndRunRest(BoundedTaskExecutor.java:178)
	at com.intellij.util.concurrency.BoundedTaskExecutor.access$000(BoundedTaskExecutor.java:40)
	at com.intellij.util.concurrency.BoundedTaskExecutor$2.run(BoundedTaskExecutor.java:197)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
