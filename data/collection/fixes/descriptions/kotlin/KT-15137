Example (module should have Kotlin facet with default platform):

```
// Header.kt
package test

platform fun foo(): Int
```

The following exception occurs constantly:

```
Facade class test.HeaderKt not found
java.lang.IllegalStateException: Facade class test.HeaderKt not found
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForFacade.getClsDelegate(KtLightClassForFacade.kt:202)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForFacade.getClsDelegate(KtLightClassForFacade.kt:50)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassBase.getDelegate(KtLightClassBase.java:57)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassBase.getOwnMethods(KtLightClassBase.java:136)
	at com.intellij.psi.impl.source.ClassInnerStuffCache.c(ClassInnerStuffCache.java:173)
	at com.intellij.psi.impl.source.ClassInnerStuffCache.access$300(ClassInnerStuffCache.java:39)
	at com.intellij.psi.impl.source.ClassInnerStuffCache$3.compute(ClassInnerStuffCache.java:79)
	at com.intellij.psi.util.CachedValuesManager$1.compute(CachedValuesManager.java:137)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:49)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:222)
	at com.intellij.psi.impl.PsiCachedValue.getValueWithLock(PsiCachedValue.java:65)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:38)
	at com.intellij.util.CachedValuesManagerImpl.getCachedValue(CachedValuesManagerImpl.java:84)
	at com.intellij.psi.util.CachedValuesManager.getCachedValue(CachedValuesManager.java:133)
	at com.intellij.psi.impl.source.ClassInnerStuffCache.getMethods(ClassInnerStuffCache.java:75)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassBase.getMethods(KtLightClassBase.java:69)
	at org.jetbrains.kotlin.asJava.LightClassUtil$getPsiMethodWrappers$1.invoke(LightClassUtil.kt:131)
	at org.jetbrains.kotlin.asJava.LightClassUtil$getPsiMethodWrappers$1.invoke(LightClassUtil.kt:33)
	at kotlin.sequences.FlatteningSequence$iterator$1.ensureItemIterator(Sequences.kt:239)
	at kotlin.sequences.FlatteningSequence$iterator$1.hasNext(Sequences.kt:227)
	at kotlin.sequences.FilteringSequence$iterator$1.calcNext(Sequences.kt:95)
	at kotlin.sequences.FilteringSequence$iterator$1.hasNext(Sequences.kt:119)
	at kotlin.sequences.SequencesKt___SequencesKt.toCollection(_Sequences.kt:533)
	at kotlin.sequences.SequencesKt___SequencesKt.toMutableList(_Sequences.kt:557)
	at kotlin.sequences.SequencesKt___SequencesKt.toList(_Sequences.kt:550)

```