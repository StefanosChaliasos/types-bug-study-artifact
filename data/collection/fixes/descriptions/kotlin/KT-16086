I'm encountering a critical issue in latest IDEA 2016.3.3 with Kotlin 1.0.6. The issue is very critical because the Kotlin editor support doesn't work properly afterwards, e.g. code completion doesn't work as expected, syntax errors are not highlighted correctly etc.

The error is thrown every time I open the following Kotlin class and also other files related to this class.

```kotlin
package de.pondus.platform.observer

class Observer<T : Any, S : Any?>(private val observable: T, private val reaction: Reaction<T, S?>) {

    private var snapshot: S? = null

    init {
        snapshot = reaction.getState(observable)
    }

    fun runReaction() {
        val oldValue = snapshot
        val newValue = reaction.getState(observable)
        if (oldValue != newValue) {
            reaction.onStateChange(observable, newValue, oldValue)
            snapshot = newValue
        }
    }

}
```

Stacktrace:

```
Recursion detected on input: IEntity under LockBasedStorageManager@7bab769d (<unknown creating class>)
java.lang.AssertionError: Recursion detected on input: IEntity under LockBasedStorageManager@7bab769d (<unknown creating class>)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedFunctions(LazyJavaScope.kt:216)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.JvmPackageScope.getContributedFunctions(JvmPackageScope.kt:65)
	at org.jetbrains.kotlin.resolve.scopes.ChainedMemberScope.getContributedFunctions(ChainedMemberScope.kt:39)
	at org.jetbrains.kotlin.resolve.scopes.AbstractScopeAdapter.getContributedFunctions(AbstractScopeAdapter.kt:37)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.collectCandidateDescriptors(QualifiedExpressionResolver.kt:203)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processSingleImport(QualifiedExpressionResolver.kt:178)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processImportReference(QualifiedExpressionResolver.kt:154)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:88)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:75)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.getImportScope(LazyImportScope.kt:165)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$1.invoke(LazyImportScope.kt:140)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:146)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:75)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager.compute(LockBasedStorageManager.java:211)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.selectSingleFromImports(LazyImportScope.kt:146)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportScope.getContributedClassifier(LazyImportScope.kt:194)
	at org.jetbrains.kotlin.resolve.scopes.utils.ScopeUtilsKt.findClassifier(ScopeUtils.kt:74)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.resolveDescriptorForType(QualifiedExpressionResolver.kt:71)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveDescriptorForType(TypeResolver.kt:616)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:162)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:905)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:42)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:160)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:117)
	at org.jetbrains.kotlin.resolve.TypeResolver.access$doResolvePossiblyBareType(TypeResolver.kt:52)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:91)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:90)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType.getDelegate(TypeResolver.kt:92)
	at org.jetbrains.kotlin.types.DelegatingType.isError(DelegatingType.java:61)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyTypeParameterDescriptor.resolveUpperBounds(LazyTypeParameterDescriptor.java:80)
	at org.jetbrains.kotlin.descriptors.impl.AbstractTypeParameterDescriptor$TypeParameterTypeConstructor.computeSupertypes(AbstractTypeParameterDescriptor.java:161)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor$supertypes$1.invoke(AbstractTypeConstructor.kt:35)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor$supertypes$1.invoke(AbstractTypeConstructor.kt:22)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.types.AbstractTypeConstructor.getSupertypes(AbstractTypeConstructor.kt:23)
	at org.jetbrains.kotlin.descriptors.impl.AbstractTypeParameterDescriptor.getUpperBounds(AbstractTypeParameterDescriptor.java:116)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolverKt.getErasedUpperBound(LazyJavaTypeResolver.kt:428)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver$LazyJavaClassifierType.computeArguments(LazyJavaTypeResolver.kt:211)
	at org.jetbrains.kotlin.types.AbstractLazyType$arguments$1.invoke(AbstractLazyType.kt:32)
	at org.jetbrains.kotlin.types.AbstractLazyType$arguments$1.invoke(AbstractLazyType.kt:25)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.types.AbstractLazyType.getArguments(AbstractLazyType.kt:33)
	at org.jetbrains.kotlin.types.DelegatingType.getArguments(DelegatingType.java:39)
	at org.jetbrains.kotlin.load.java.typeEnhancement.TypeQualifiersKt$computeIndexedQualifiersForOverride$1$1.invoke(typeQualifiers.kt:104)
	at org.jetbrains.kotlin.load.java.typeEnhancement.TypeQualifiersKt$computeIndexedQualifiersForOverride$1.invoke(typeQualifiers.kt:114)
	at org.jetbrains.kotlin.load.java.typeEnhancement.TypeQualifiersKt.computeIndexedQualifiersForOverride(typeQualifiers.kt:119)
	at org.jetbrains.kotlin.load.java.typeEnhancement.SignatureParts.enhance(signatureEnhancement.kt:65)
	at org.jetbrains.kotlin.load.java.typeEnhancement.SignatureEnhancementKt.enhanceSignature(signatureEnhancement.kt:48)
	at org.jetbrains.kotlin.load.java.typeEnhancement.SignatureEnhancementKt.enhanceSignatures(signatureEnhancement.kt:25)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:91)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:51)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedFunctions(LazyJavaScope.kt:216)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassMemberScope.getContributedFunctions(LazyJavaClassMemberScope.kt:669)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.computeDescriptors(LazyJavaScope.kt:313)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:57)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:51)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedDescriptors(LazyJavaScope.kt:292)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getAllDescriptors(DescriptorUtils.java:566)
	at org.jetbrains.kotlin.load.java.sam.SingleAbstractMethodUtils.getAbstractMembers(SingleAbstractMethodUtils.java:48)
	at org.jetbrains.kotlin.load.java.sam.SingleAbstractMethodUtils.getSingleAbstractMethodOrNull(SingleAbstractMethodUtils.java:104)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl.resolveFunctionTypeIfSamInterface(SamConversionResolverImpl.kt:48)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassDescriptor$functionTypeForSamInterface$1.invoke(LazyJavaClassDescriptor.kt:116)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassDescriptor$functionTypeForSamInterface$1.invoke(LazyJavaClassDescriptor.kt:48)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassDescriptor.getFunctionTypeForSamInterface(LazyJavaClassDescriptor.kt:129)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl.resolveSamConstructor(SamConversionResolverImpl.kt:33)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaPackageScope.computeNonDeclaredFunctions(LazyJavaPackageScope.kt:152)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:89)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:51)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedFunctions(LazyJavaScope.kt:216)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.JvmPackageScope.getContributedFunctions(JvmPackageScope.kt:65)
	at org.jetbrains.kotlin.resolve.scopes.ChainedMemberScope.getContributedFunctions(ChainedMemberScope.kt:39)
	at org.jetbrains.kotlin.resolve.scopes.AbstractScopeAdapter.getContributedFunctions(AbstractScopeAdapter.kt:37)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.collectCandidateDescriptors(QualifiedExpressionResolver.kt:203)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processSingleImport(QualifiedExpressionResolver.kt:178)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processImportReference(QualifiedExpressionResolver.kt:154)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:88)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:75)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.getImportScope(LazyImportScope.kt:165)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$1.invoke(LazyImportScope.kt:140)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:146)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:75)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager.compute(LockBasedStorageManager.java:211)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.selectSingleFromImports(LazyImportScope.kt:146)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportScope.getContributedClassifier(LazyImportScope.kt:194)
	at org.jetbrains.kotlin.resolve.scopes.utils.ScopeUtilsKt.findClassifier(ScopeUtils.kt:74)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.resolveDescriptorForType(QualifiedExpressionResolver.kt:71)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveDescriptorForType(TypeResolver.kt:616)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:162)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:905)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:42)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:160)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:117)
	at org.jetbrains.kotlin.resolve.TypeResolver.access$doResolvePossiblyBareType(TypeResolver.kt:52)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:91)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType$_delegate$1.invoke(TypeResolver.kt:90)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolvePossiblyBareType$LazyKotlinType.getDelegate(TypeResolver.kt:92)
	at org.jetbrains.kotlin.types.DelegatingType.isError(DelegatingType.java:61)
	at org.jetbrains.kotlin.descriptors.impl.TypeParameterDescriptorImpl.doAddUpperBound(TypeParameterDescriptorImpl.java:128)
	at org.jetbrains.kotlin.descriptors.impl.TypeParameterDescriptorImpl.addUpperBound(TypeParameterDescriptorImpl.java:124)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolveGenericBounds(DescriptorResolver.java:493)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.initializeFunctionDescriptorAndExplicitReturnType(FunctionDescriptorResolver.kt:147)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.resolveFunctionDescriptor(FunctionDescriptorResolver.kt:104)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.resolveFunctionDescriptor(FunctionDescriptorResolver.kt:73)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.doGetFunctions(AbstractLazyMemberScope.kt:79)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.access$doGetFunctions(AbstractLazyMemberScope.kt:41)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$functionDescriptors$1.invoke(AbstractLazyMemberScope.kt:51)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$functionDescriptors$1.invoke(AbstractLazyMemberScope.kt:41)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:394)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:458)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.getContributedFunctions(AbstractLazyMemberScope.kt:70)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getContributedFunctions(LazyClassMemberScope.kt:126)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.computeDescriptorsFromDeclaredElements(AbstractLazyMemberScope.kt:140)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope$descriptorsFromDeclaredElements$1.invoke(LazyClassMemberScope.kt:56)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope$descriptorsFromDeclaredElements$1.invoke(LazyClassMemberScope.kt:48)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:362)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getContributedDescriptors(LazyClassMemberScope.kt:64)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getAllDescriptors(DescriptorUtils.java:566)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.resolveMemberHeaders(LazyClassDescriptor.java:559)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.doForceResolveAllContents(LazyClassDescriptor.java:529)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.access$200(LazyClassDescriptor.java:73)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$8.invoke(LazyClassDescriptor.java:237)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor$8.invoke(LazyClassDescriptor.java:234)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:321)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.forceResolveAllContents(LazyClassDescriptor.java:525)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.doForceResolveAllContents(ForceResolveUtil.java:71)
	at org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(ForceResolveUtil.java:37)
	at org.jetbrains.kotlin.idea.caches.resolve.IDELightClassGenerationSupport.getContextForNonLocalClassOrObject(IDELightClassGenerationSupport.kt:89)
	at org.jetbrains.kotlin.idea.caches.resolve.IDELightClassGenerationSupport.getContextForClassOrObject(IDELightClassGenerationSupport.kt:71)
	at org.jetbrains.kotlin.asJava.builder.LightClassDataProviderForClassOrObject.getContext(LightClassDataProvider.kt:176)
	at org.jetbrains.kotlin.asJava.builder.LightClassDataProvider.computeLightClassData(LightClassDataProvider.kt:81)
	at org.jetbrains.kotlin.asJava.builder.LightClassDataProvider.compute(LightClassDataProvider.kt:71)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:49)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:222)
	at com.intellij.psi.impl.PsiCachedValue.getValueWithLock(PsiCachedValue.java:65)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:38)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$Companion.getLightClassData(KtLightClassForSourceDeclaration.kt:387)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getLightClassData(KtLightClassForSourceDeclaration.kt:113)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getJavaFileStub(KtLightClassForSourceDeclaration.kt:106)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.access$getJavaFileStub(KtLightClassForSourceDeclaration.kt:63)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$clsDelegate$2.invoke(KtLightClassForSourceDeclaration.kt:84)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$clsDelegate$2.invoke(KtLightClassForSourceDeclaration.kt:63)
	at kotlin.SafePublicationLazyImpl.getValue(Lazy.kt:189)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getClsDelegate(KtLightClassForSourceDeclaration.kt)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration.getClsDelegate(KtLightClassForSourceDeclaration.kt:63)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassBase.getDelegate(KtLightClassBase.java:57)
	at org.jetbrains.kotlin.asJava.classes.KtLightClassForSourceDeclaration$_modifierList$2$1.getDelegate(KtLightClassForSourceDeclaration.kt:200)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers$_annotations$2.invoke(KtLightModifierListWithExplicitModifiers.kt:43)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers$_annotations$2.invoke(KtLightModifierListWithExplicitModifiers.kt:37)
	at kotlin.SafePublicationLazyImpl.getValue(Lazy.kt:189)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers.get_annotations(KtLightModifierListWithExplicitModifiers.kt)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers.getAnnotations(KtLightModifierListWithExplicitModifiers.kt:47)
	at org.jetbrains.kotlin.asJava.elements.KtLightModifierListWithExplicitModifiers.findAnnotation(KtLightModifierListWithExplicitModifiers.kt:51)
	at com.intellij.patterns.PsiModifierListOwnerPattern$3.accepts(PsiModifierListOwnerPattern.java:67)
	at com.intellij.patterns.PsiModifierListOwnerPattern$3.accepts(PsiModifierListOwnerPattern.java:64)
	at com.intellij.patterns.ObjectPattern.accepts(ObjectPattern.java:65)
	at com.intellij.patterns.ObjectPattern.accepts(ObjectPattern.java:48)
	at com.intellij.semantic.SemServiceImpl$2.a(SemServiceImpl.java:91)
	at com.intellij.semantic.SemServiceImpl.a(SemServiceImpl.java:177)
	at com.intellij.semantic.SemServiceImpl.getSemElements(SemServiceImpl.java:148)
	at com.intellij.semantic.SemService.getSemElement(SemService.java:37)
	at com.intellij.jam.JamService.getJamElement(JamService.java:119)
	at com.intellij.jam.JamService.lambda$getJamClassElements$1(JamService.java:180)
	at com.intellij.util.InstanceofQuery$MyProcessor.process(InstanceofQuery.java:90)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher$execute$1.invoke(KotlinAnnotatedElementsSearcher.kt:50)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher$execute$1.invoke(KotlinAnnotatedElementsSearcher.kt:43)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher$Companion$processAnnotatedMembers$result$1.invoke(KotlinAnnotatedElementsSearcher.kt:94)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher$Companion$processAnnotatedMembers$result$1.invoke(KotlinAnnotatedElementsSearcher.kt:66)
	at org.jetbrains.kotlin.idea.util.application.ApplicationUtilsKt$sam$Computable$360e73c2.compute(ApplicationUtils.kt)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:895)
	at org.jetbrains.kotlin.idea.util.application.ApplicationUtilsKt.runReadAction(ApplicationUtils.kt:24)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher$Companion.processAnnotatedMembers(KotlinAnnotatedElementsSearcher.kt:82)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher$Companion.processAnnotatedMembers$default(KotlinAnnotatedElementsSearcher.kt:71)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher.execute(KotlinAnnotatedElementsSearcher.kt:46)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinAnnotatedElementsSearcher.execute(KotlinAnnotatedElementsSearcher.kt:43)
	at com.intellij.util.ExecutorsQuery.processResults(ExecutorsQuery.java:45)
	at com.intellij.util.AbstractQuery.forEach(AbstractQuery.java:79)
	at com.intellij.util.InstanceofQuery.forEach(InstanceofQuery.java:58)
	at com.intellij.jam.model.util.JamCommonUtil.findAnnotatedElements(JamCommonUtil.java:483)
	at com.intellij.jam.JamService.getJamClassElements(JamService.java:179)
	at com.intellij.jam.JamService.getJamClassElements(JamService.java:144)
	at com.intellij.spring.model.jam.SpringJamModelImpl.getComponents(SpringJamModelImpl.java:84)
	at com.intellij.spring.model.jam.SpringJamModelImpl.getStereotypeComponents(SpringJamModelImpl.java:50)
	at com.intellij.spring.model.jam.SpringJamModelImpl.lambda$getStereotypeComponents$0(SpringJamModelImpl.java:40)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:49)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:222)
	at com.intellij.psi.impl.PsiCachedValue.getValueWithLock(PsiCachedValue.java:65)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:38)
	at com.intellij.util.CachedValuesManagerImpl.getCachedValue(CachedValuesManagerImpl.java:84)
	at com.intellij.psi.util.CachedValuesManager.getCachedValue(CachedValuesManager.java:119)
	at com.intellij.spring.model.jam.SpringJamModelImpl.getStereotypeComponents(SpringJamModelImpl.java:38)
	at com.intellij.spring.model.xml.context.impl.ComponentScanImpl.lambda$getScannedElements$0(ComponentScanImpl.java:28)
	at com.intellij.spring.model.utils.SpringCacheUtils$1.create(SpringCacheUtils.java:64)
	at com.intellij.spring.model.utils.SpringCacheUtils$1.create(SpringCacheUtils.java:61)
	at com.intellij.util.containers.FactoryMap.get(FactoryMap.java:57)
	at com.intellij.spring.model.utils.SpringCacheUtils.getCreatedCachedBeans(SpringCacheUtils.java:72)
	at com.intellij.spring.model.xml.context.impl.ComponentScanImpl.getScannedElements(ComponentScanImpl.java:25)
	at com.intellij.spring.contexts.model.SpringComponentScanModel.calculateScannedBeans(SpringComponentScanModel.java:75)
	at com.intellij.spring.contexts.model.ComponentScanPackagesModel.calculateLocalBeans(ComponentScanPackagesModel.java:57)
	at com.intellij.spring.contexts.model.SpringComponentScanModel.lambda$getLocalBeans$0(SpringComponentScanModel.java:64)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:49)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:222)
	at com.intellij.psi.impl.PsiCachedValue.getValueWithLock(PsiCachedValue.java:65)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:38)
	at com.intellij.spring.contexts.model.SpringComponentScanModel.getLocalBeans(SpringComponentScanModel.java:70)
	at com.intellij.spring.contexts.model.AbstractSimpleSpringModel.processLocalBeans(AbstractSimpleSpringModel.java:174)
	at com.intellij.spring.contexts.model.AbstractSimpleSpringModel.access$100(AbstractSimpleSpringModel.java:43)
	at com.intellij.spring.contexts.model.AbstractSimpleSpringModel$1.doProcessBeans(AbstractSimpleSpringModel.java:48)
	at com.intellij.spring.contexts.model.AbstractSimpleSpringModel$1.doProcessBeans(AbstractSimpleSpringModel.java:45)
	at com.intellij.spring.contexts.model.AbstractSimpleSpringModel$LocalBeansCachingProcessor.findPointers(AbstractSimpleSpringModel.java:68)
	at com.intellij.spring.contexts.model.SpringCachingProcessor$1.createValue(SpringCachingProcessor.java:52)
	at com.intellij.spring.contexts.model.SpringCachingProcessor$1.createValue(SpringCachingProcessor.java:48)
	at com.intellij.spring.contexts.model.SpringCachingProcessor$SpringSLRUCache.get(SpringCachingProcessor.java:118)
	at com.intellij.spring.contexts.model.SpringCachingProcessor.process(SpringCachingProcessor.java:83)
	at com.intellij.spring.contexts.model.AbstractSimpleSpringModel.processByClass(AbstractSimpleSpringModel.java:164)
	at com.intellij.spring.contexts.model.CachedLocalModel.lambda$processRelatedModels$2(CachedLocalModel.java:185)
	at com.intellij.spring.contexts.model.CachedLocalModel.lambda$processRelatedModels$1(CachedLocalModel.java:160)
	at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)
	at com.intellij.openapi.util.RecursionManager.doPreventingRecursion(RecursionManager.java:68)
	at com.intellij.spring.contexts.model.CachedLocalModel.processRelatedModels(CachedLocalModel.java:157)
	at com.intellij.spring.contexts.model.CachedLocalModel.processRelatedModels(CachedLocalModel.java:185)
	at com.intellij.spring.contexts.model.LocalXmlModelImpl.processByClass(LocalXmlModelImpl.java:458)
	at com.intellij.spring.contexts.model.SpringModel.lambda$processByClass$5(SpringModel.java:158)
	at com.intellij.spring.contexts.model.SpringModel.processModels(SpringModel.java:231)
	at com.intellij.spring.contexts.model.SpringModel.processModels(SpringModel.java:227)
	at com.intellij.spring.contexts.model.SpringModel.processModels(SpringModel.java:227)
	at com.intellij.spring.contexts.model.SpringModel.processModels(SpringModel.java:216)
	at com.intellij.spring.contexts.model.SpringModel.processByClass(SpringModel.java:154)
	at com.intellij.spring.model.utils.SpringModelSearchers.containsBean(SpringModelSearchers.java:91)
	at com.intellij.spring.model.utils.SpringModelSearchers.doesBeanExist(SpringModelSearchers.java:79)
	at com.intellij.spring.java.SpringJavaClassInfo.lambda$new$0(SpringJavaClassInfo.java:83)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:49)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:222)
	at com.intellij.psi.impl.PsiCachedValue.getValueWithLock(PsiCachedValue.java:65)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:38)
	at com.intellij.spring.java.SpringJavaClassInfo.isMapped(SpringJavaClassInfo.java:200)
	at com.intellij.spring.java.SpringJavaClassInfo.isMappedDomBean(SpringJavaClassInfo.java:204)
	at com.intellij.spring.gutter.SpringClassAnnotator.annotateClass(SpringClassAnnotator.java:142)
	at com.intellij.spring.gutter.SpringClassAnnotator.collectNavigationMarkers(SpringClassAnnotator.java:116)
	at org.jetbrains.kotlin.idea.spring.lineMarking.KotlinSpringClassAnnotator.doCollectMarkers(KotlinSpringClassAnnotator.kt:83)
	at org.jetbrains.kotlin.idea.spring.lineMarking.KotlinSpringClassAnnotator.collectNavigationMarkers(KotlinSpringClassAnnotator.kt:98)
	at com.intellij.codeInsight.daemon.RelatedItemLineMarkerProvider.collectNavigationMarkers(RelatedItemLineMarkerProvider.java:49)
	at com.intellij.spring.gutter.SpringClassAnnotator.collectNavigationMarkers(SpringClassAnnotator.java:109)
	at com.intellij.codeInsight.daemon.RelatedItemLineMarkerProvider.collectSlowLineMarkers(RelatedItemLineMarkerProvider.java:40)
	at com.intellij.codeInsight.daemon.impl.LineMarkersPass.a(LineMarkersPass.java:209)
	at com.intellij.codeInsight.daemon.impl.LineMarkersPass.a(LineMarkersPass.java:111)
	at com.intellij.codeInsight.daemon.impl.Divider.divideInsideAndOutsideInOneRoot(Divider.java:96)
	at com.intellij.codeInsight.daemon.impl.LineMarkersPass.doCollectInformation(LineMarkersPass.java:106)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.c(PassExecutorService.java:433)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1061)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.b(PassExecutorService.java:426)
	at com.intellij.openapi.progress.impl.CoreProgressManager.a(CoreProgressManager.java:568)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:519)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:54)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.a(PassExecutorService.java:425)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:405)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:155)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
```