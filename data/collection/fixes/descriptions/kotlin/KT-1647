Suppose we have next classes

{code:lang=kotlin|title=Predeclaration}open class Abs
class Bar : Abs(){code}

Now I use pattern matching on it
{code:lang=kotlin|title=Pattern Matching}fun patternMatching(arg : Any) : String {
    if(arg is Bar){
      return "Bar"
    }
    return "else";
}{code}
It works. Now, I want to use generics too
{code:lang=kotlin|title=Pattern Matching with Generics}fun <F : Abs> patternMatchingAndGenerics(arg : F) : String {
    if(arg is Bar){
      return "Bar"
    }
    return "else";
}{code}
It fails with compilation error: Incompatible types: Bar and F.
{code:lang=kotlin|title=Temporary workaround}fun <F : Abs> workaround(arg : F) : String {
    val casted : Any = arg;
    if(casted is Bar){
      return "Bar"
    }
    return "else";
}{code}
I believe It shoud work without any workarounds.
