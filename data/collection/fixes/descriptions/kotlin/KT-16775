Example:

```
class Labyrinth {
    fun isValid() =
            false <caret>

    companion object {

        fun create() = Labyrinth()

    }
}
```

Set caret at the given position and type `&&`. You'll get the following stack trace:

```
Rewrite at slice CLASS key: OBJECT_DECLARATION old value: lazy class <no name provided>@163409337 new value: lazy class no_name_in_PSI_3d19d79d_1ba9_4cd0_b7f5_b46aa3cd5d40@2121439636
File name: Main.kt Physical: true Injected: false
class Labyrinth {
    fun isValid() =
            false &&

    companion <caret>object {

        fun create() = Labyrinth()

    }
}
java.lang.Throwable
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:132)
	at org.jetbrains.kotlin.util.slicedMap.Slices$1.processRewrite(Slices.java:40)
	at org.jetbrains.kotlin.util.slicedMap.SlicedMapImpl.put(SlicedMapImpl.java:60)
	at org.jetbrains.kotlin.resolve.BindingTraceContext.record(BindingTraceContext.java:131)
	at org.jetbrains.kotlin.storage.LockBasedLazyResolveStorageManager$LockProtectedTrace$record$1.invoke(LockBasedLazyResolveStorageManager.kt:70)
	at org.jetbrains.kotlin.storage.LockBasedLazyResolveStorageManager$LockProtectedTrace$record$1.invoke(LockBasedLazyResolveStorageManager.kt:58)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager.compute(LockBasedStorageManager.java:211)
	at org.jetbrains.kotlin.storage.LockBasedLazyResolveStorageManager$LockProtectedTrace.record(LockBasedLazyResolveStorageManager.kt:70)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassDescriptor.<init>(LazyClassDescriptor.java:133)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.doGetClasses(AbstractLazyMemberScope.kt:60)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.access$doGetClasses(AbstractLazyMemberScope.kt:39)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$classDescriptors$1.invoke(AbstractLazyMemberScope.kt:48)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$classDescriptors$1.invoke(AbstractLazyMemberScope.kt:39)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:402)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:470)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.getContributedClassifier(AbstractLazyMemberScope.kt:70)
	at org.jetbrains.kotlin.resolve.scopes.InnerClassesScopeWrapper.getContributedClassifier(InnerClassesScopeWrapper.kt:29)
	at org.jetbrains.kotlin.resolve.jvm.JavaDescriptorResolver.resolveClass(JavaDescriptorResolver.kt:38)
	at org.jetbrains.kotlin.idea.caches.resolve.JavaResolutionUtils.getContainingScope(JavaResolveExtension.kt:134)
	at org.jetbrains.kotlin.idea.caches.resolve.JavaResolutionUtils.resolveMethod(JavaResolveExtension.kt:122)
	at org.jetbrains.kotlin.idea.caches.resolve.JavaResolutionUtils.getJavaMethodDescriptor(JavaResolveExtension.kt:47)
	at org.jetbrains.kotlin.idea.caches.resolve.JavaResolutionUtils.getJavaMethodDescriptor$default(JavaResolveExtension.kt:41)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinPropertyAccessorsReferenceSearcher.propertyName(KotlinPropertyAccessorsReferenceSearcher.kt:57)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinPropertyAccessorsReferenceSearcher.processQuery(KotlinPropertyAccessorsReferenceSearcher.kt:41)
	at org.jetbrains.kotlin.idea.search.ideaExtensions.KotlinPropertyAccessorsReferenceSearcher.processQuery(KotlinPropertyAccessorsReferenceSearcher.kt:35)
	at com.intellij.openapi.application.QueryExecutorBase.execute(QueryExecutorBase.java:87)
	at com.intellij.util.ExecutorsQuery.processResults(ExecutorsQuery.java:45)
	at com.intellij.util.AbstractQuery.forEach(AbstractQuery.java:79)
	at com.intellij.util.MergeQuery.processSubQuery(MergeQuery.java:85)
	at com.intellij.util.MergeQuery.forEach(MergeQuery.java:57)
	at com.intellij.util.UniqueResultsQuery.process(UniqueResultsQuery.java:66)
	at com.intellij.util.UniqueResultsQuery.forEach(UniqueResultsQuery.java:56)
	at org.jetbrains.kotlin.idea.inspections.UnusedSymbolInspection.hasReferences(UnusedSymbolInspection.kt:284)
	at org.jetbrains.kotlin.idea.inspections.UnusedSymbolInspection.hasNonTrivialUsages(UnusedSymbolInspection.kt:240)
	at org.jetbrains.kotlin.idea.inspections.UnusedSymbolInspection.access$hasNonTrivialUsages(UnusedSymbolInspection.kt:80)
	at org.jetbrains.kotlin.idea.inspections.UnusedSymbolInspection$buildVisitor$1.visitDeclaration(UnusedSymbolInspection.kt:176)

```