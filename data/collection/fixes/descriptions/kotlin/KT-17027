Currently compilation fails in the example below because parameter names of Java declarations are non-stable and are therefore seen as "p0", "p1", etc by the compiler, so the names do not match with the names in the header declaration. We should not check parameter name equality if the impl declaration has non-stable parameter names.

Common:
```
// FILE: common.kt

header class Foo {
    fun foo(aaaaa: Int): Unit
}
```

JVM:
```
// FILE: FooImpl.java

public class FooImpl {
    public final void foo(int p1 /* non-stable parameter name */) {}
}

// FILE: jvm.kt

impl typealias Foo = FooImpl
```
