Try this code:

```
import java.util.stream.Collectors
import java.util.function.Function

val res = listOf(1, 2, 3, 4)
    .parallelStream()
    .map { it * 3 }
    .filter { it < 20 }
    .collect(Collectors.groupingByConcurrent(Function<Int, String> { if (it % 2 == 0) "even" else "odd" }))
```

`Function<Int, String>` is rendered in grey and there's a suggestion to remove it as redundant. Doing so yields a type inference error saying:

"Type inference failed, not enough information to infer parameter K in <T, K> Collector<T, ?, ConcurrentMap<K, List<T>>>
    groupingByConcurrent(Function<? super T, ? extends K> classifier)"