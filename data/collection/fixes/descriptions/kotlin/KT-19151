Compile a JVM library in a multiplatform project consisting of common.kt and jvm.kt:

{code:title=common.kt}
class Foo(val a: A? = null)

header class A
{code}

{code:title=jvm.kt}
impl typealias A = AImpl

class AImpl
{code}


Then try to compile a JVM source against such library:
{code:title=usage.kt}
val a = Foo().a
{code}

```
usage.kt:1:9: error: cannot access class 'A'. Check your module classpath for missing or conflicting dependencies
val a = Foo().a
        ^
usage.kt:1:15: error: cannot access class 'A'. Check your module classpath for missing or conflicting dependencies
val a = Foo().a
              ^
```
