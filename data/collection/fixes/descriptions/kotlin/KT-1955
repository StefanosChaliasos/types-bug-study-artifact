{code}
package files.builders

import java.io.File
import javax.swing.JFrame
import javax.swing.JLabel
import javax.swing.JScrollPane
import java.util.List
import java.util.ArrayList
import java.util.Collection

fun <T> Collection<T>.join(sep : String = "") : String {
    val sb = StringBuilder()
    var it = iterator()
    while (it.hasNext()) {
        sb.append(it.next())
        if (it.hasNext()) {
            sb.append(sep)
        }
    }
    return sb.toString()!!
}

abstract class Tag(val name : String) {
    val children : List<Tag> = ArrayList()
    fun toString() = "<$name>${children.join()}</$name>"
}

class HTML : Tag("html")
class Table : Tag("table")
class TR : Tag("tr")
class TD : Tag("td")
class B : Tag("b")

fun html(init : HTML.() -> Unit) : HTML {
    val 
} 


fun renderChildren(f : File) : String {
    val sb = StringBuilder()
    fun String.add() {
        sb.append(this)
    }

    "<html>".add()
    """<table border="1">""".add()
    "<tr><td>Files in ${f.getCanonicalFile()?.getName()}</td><td># children</td></tr>".add()
    for (child in f.listFiles()) {
        """
            <tr>
                <td align="right">${child!!.getName()}</td>
                <td>${child!!.listFiles()?.size}</td>
            </tr>
        """.add()
    }
    "</table>".add()
    return sb.toString()!!
}


fun main(args : Array<String>) {
    val frame = JFrame("Files")
    frame.setSize(800, 600)
    val scrollPane = JScrollPane(JLabel(
        renderChildren(File("."))
    ))
    frame.add(scrollPane)


    frame.show()
}
{code}