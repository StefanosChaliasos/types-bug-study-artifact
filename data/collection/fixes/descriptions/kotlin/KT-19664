Given
{code}
internal expect class Foo
{code}
in the common module and 
{code}
internal actual typealias Foo = java.lang.Object
{code}
in a JVM module, the build will fail with
{code}
Header declaration 'Foo' has no implementation in module
The following declaration is incompatible because visibility is different:
    internal typealias Foo = Object
{code}

Since `typealias` otherwise allows visibility widening, it should work for an `actual` as well.