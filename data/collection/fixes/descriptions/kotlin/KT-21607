```
fun <T, R> foo(value: T, bar: (T) -> R) {
}

fun <T, R> bar(f: (T) -> R): (T) -> R {
    TODO()
}

// does not type check
foo(1, bar { it.toString() })
```
Error:(55, 5) Kotlin: Type inference failed: Not enough information to infer parameter R in fun <T, R> foo(value: T, bar: (T) -> R): Unit
Please specify it explicitly.
Error:(55, 12) Kotlin: Type inference failed: Not enough information to infer parameter R in fun <T, R> bar(f: (T) -> R): (T) -> R
Please specify it explicitly.

The equivalent code in java works as expected

```
public static <T, R> void foo(T value, Function<T, R> f) {
}

public static <T, R> Function<T, R> bar(Function<T, R> f) {
    throw new AssertionError();
}

// type checks
foo(1, bar(i -> i.toString()))
```