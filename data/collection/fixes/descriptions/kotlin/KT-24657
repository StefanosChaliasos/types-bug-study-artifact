I am converting WASM to Kotlin (and Java).

WASM generated code usually has a lot of local variables, and nested loops with labeled breaks and continues. All the code is fully typed without using type inference.

The java compiler compiles those files in a couple of seconds, but the Kotlin compiler takes a lot of time: several minutes, at least two orders of magnitude slower.

I took a screenshot of the jvisualvm profiler. Most of the time is spent calculating hash codes.

I'm attaching several generated projects of different sizes with java and kotlin versions. Each wasm module is packed in a single java or kt file with a single class, and except for the required companion object, it also generates a single .class.

In order of complexity/length: arithmetic, nanosvg, brotli.opt, brotli
