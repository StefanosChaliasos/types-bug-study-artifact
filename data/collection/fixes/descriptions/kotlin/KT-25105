If I have an interface
```kotlin
interface Manager<T> {
    fun <A : T> execute(task: Task<A>)
}
```
and I try to implement it with a final type `Message`
```kotlin
object MessageManager : Manager<Message> {
    override fun <T : Message> execute(task: Task<T>) { ... }
}
```
I get an intention on `<T : Message>` saying
> `Message` is a final type, and thus the value of the type parameter is predetermined
with an action to fix it for me. The fix changes the function to
```kotlin
override fun execute(task: Task<Message>) { ... }
```
which is invalid and give the error
> `execute` overrides nothing