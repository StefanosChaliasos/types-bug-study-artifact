Front-end doesn't check that fun with contract and `callsInPlace` effect (with `InvocationKind.EXACTLY_ONCE`) is an inline function in case, when in lambda is used val initialization.
Therefore only back-end throws exception about it:
```
Error:Kotlin: [Internal Error] java.lang.IllegalStateException: Backend Internal error: Exception during code generation
Cause: Back-end (JVM) Internal error: wrong code generated
org.jetbrains.kotlin.codegen.CompilationException Back-end (JVM) Internal error: Couldn't transform method node:
case_1 ()V:
   L0
    LINENUMBER 17 L0
   L1
    LINENUMBER 18 L1
    NEW org/jetbrains/kotlin/MainKt$case_1$1
    DUP
    ILOAD 0
    INVOKESPECIAL org/jetbrains/kotlin/MainKt$case_1$1.<init> (I)V
    CHECKCAST kotlin/jvm/functions/Function0
    INVOKESTATIC org/jetbrains/kotlin/MainKt.myRun (Lkotlin/jvm/functions/Function0;)V
   L2
    LINENUMBER 21 L2
    RETURN
   L3
    LOCALVARIABLE tt I L1 L3 0
    MAXSTACK = 3
    MAXLOCALS = 1
Cause: AFTER mandatory stack transformations: incorrect bytecode
Element is unknownThe root cause was thrown at: MethodVerifier.kt:28
bytecode:
   L0
    LINENUMBER 17 L0
   L1
    LINENUMBER 18 L1
    NEW org/jetbrains/kotlin/MainKt$case_1$1
    DUP
    ILOAD 0
    INVOKESPECIAL org/jetbrains/kotlin/MainKt$case_1$1.<init> (I)V
    CHECKCAST kotlin/jvm/functions/Function0
    INVOKESTATIC org/jetbrains/kotlin/MainKt.myRun (Lkotlin/jvm/functions/Function0;)V
   L2
    LINENUMBER 21 L2
    RETURN
   L3
    LOCALVARIABLE tt I L1 L3 0
    MAXSTACK = 3
    MAXLOCALS = 1
Cause: Back-end (JVM) Internal error: Couldn't transform method node:
case_1 ()V:
   L0
    LINENUMBER 17 L0
   L1
    LINENUMBER 18 L1
    NEW org/jetbrains/kotlin/MainKt$case_1$1
    DUP
    ILOAD 0
    INVOKESPECIAL org/jetbrains/kotlin/MainKt$case_1$1.<init> (I)V
    CHECKCAST kotlin/jvm/functions/Function0
    INVOKESTATIC org/jetbrains/kotlin/MainKt.myRun (Lkotlin/jvm/functions/Function0;)V
   L2
    LINENUMBER 21 L2
    RETURN
   L3
    LOCALVARIABLE tt I L1 L3 0
    MAXSTACK = 3
    MAXLOCALS = 1
Cause: AFTER mandatory stack transformations: incorrect bytecode
Element is unknownThe root cause was thrown at: MethodVerifier.kt:28
File being compiled at position: (16,1) in /Users/victor.petukhov/IdeaProjects/kotlin-sandbox/src/org/jetbrains/kotlin/main.kt
The root cause was thrown at: TransformationMethodVisitor.java:88
File being compiled at position: file:///Users/victor.petukhov/IdeaProjects/kotlin-sandbox/src/org/jetbrains/kotlin/main.kt
The root cause was thrown at: FunctionCodegen.java:1033
	at org.jetbrains.kotlin.codegen.CompilationErrorHandler.lambda$static$0(CompilationErrorHandler.java:24)
	at org.jetbrains.kotlin.codegen.PackageCodegenImpl.generate(PackageCodegenImpl.java:74)
	at org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generatePackage(CodegenFactory.kt:97)
	at org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generateModule(CodegenFactory.kt:68)
	at org.jetbrains.kotlin.codegen.KotlinCodegenFacade.doGenerateFiles(KotlinCodegenFacade.java:47)
	at org.jetbrains.kotlin.codegen.KotlinCodegenFacade.compileCorrectFiles(KotlinCodegenFacade.java:39)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.generate(KotlinToJVMBytecodeCompiler.kt:441)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli(KotlinToJVMBytecodeCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:159)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:56)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.java:96)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.java:52)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$compile$$inlined$ifAlive$lambda$1.invoke(CompileServiceImpl.kt:402)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$compile$$inlined$ifAlive$lambda$1.invoke(CompileServiceImpl.kt:101)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$$inlined$ifAlive$lambda$2.invoke(CompileServiceImpl.kt:929)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$$inlined$ifAlive$lambda$2.invoke(CompileServiceImpl.kt:101)
	at org.jetbrains.kotlin.daemon.common.DummyProfiler.withMeasure(PerfUtils.kt:137)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.checkedCompile(CompileServiceImpl.kt:969)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.doCompile(CompileServiceImpl.kt:928)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:400)
	at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: wrong code generated
org.jetbrains.kotlin.codegen.CompilationException Back-end (JVM) Internal error: Couldn't transform method node:
case_1 ()V:
   L0
    LINENUMBER 17 L0
   L1
    LINENUMBER 18 L1
    NEW org/jetbrains/kotlin/MainKt$case_1$1
    DUP
    ILOAD 0
    INVOKESPECIAL org/jetbrains/kotlin/MainKt$case_1$1.<init> (I)V
    CHECKCAST kotlin/jvm/functions/Function0
    INVOKESTATIC org/jetbrains/kotlin/MainKt.myRun (Lkotlin/jvm/functions/Function0;)V
   L2
    LINENUMBER 21 L2
    RETURN
   L3
    LOCALVARIABLE tt I L1 L3 0
    MAXSTACK = 3
    MAXLOCALS = 1
Cause: AFTER mandatory stack transformations: incorrect bytecode
Element is unknownThe root cause was thrown at: MethodVerifier.kt:28
bytecode:
   L0
    LINENUMBER 17 L0
   L1
    LINENUMBER 18 L1
    NEW org/jetbrains/kotlin/MainKt$case_1$1
    DUP
    ILOAD 0
    INVOKESPECIAL org/jetbrains/kotlin/MainKt$case_1$1.<init> (I)V
    CHECKCAST kotlin/jvm/functions/Function0
    INVOKESTATIC org/jetbrains/kotlin/MainKt.myRun (Lkotlin/jvm/functions/Function0;)V
   L2
    LINENUMBER 21 L2
    RETURN
   L3
    LOCALVARIABLE tt I L1 L3 0
    MAXSTACK = 3
    MAXLOCALS = 1
Cause: Back-end (JVM) Internal error: Couldn't transform method node:
case_1 ()V:
   L0
    LINENUMBER 17 L0
   L1
    LINENUMBER 18 L1
    NEW org/jetbrains/kotlin/MainKt$case_1$1
    DUP
    ILOAD 0
    INVOKESPECIAL org/jetbrains/kotlin/MainKt$case_1$1.<init> (I)V
    CHECKCAST kotlin/jvm/functions/Function0
    INVOKESTATIC org/jetbrains/kotlin/MainKt.myRun (Lkotlin/jvm/functions/Function0;)V
   L2
    LINENUMBER 21 L2
    RETURN
   L3
    LOCALVARIABLE tt I L1 L3 0
    MAXSTACK = 3
    MAXLOCALS = 1
Cause: AFTER mandatory stack transformations: incorrect bytecode
Element is unknownThe root cause was thrown at: MethodVerifier.kt:28
File being compiled at position: (16,1) in /Users/victor.petukhov/IdeaProjects/kotlin-sandbox/src/org/jetbrains/kotlin/main.kt
The root cause was thrown at: TransformationMethodVisitor.java:88
	at org.jetbrains.kotlin.codegen.FunctionCodegen.endVisit(FunctionCodegen.java:1033)
	at org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethodBody(FunctionCodegen.java:435)
	at org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethod(FunctionCodegen.java:263)
	at org.jetbrains.kotlin.codegen.FunctionCodegen.generateMethod(FunctionCodegen.java:184)
	at org.jetbrains.kotlin.codegen.FunctionCodegen.gen(FunctionCodegen.java:155)
	at org.jetbrains.kotlin.codegen.MemberCodegen.genSimpleMember(MemberCodegen.java:196)
	at org.jetbrains.kotlin.codegen.PackagePartCodegen.generateBody(PackagePartCodegen.java:95)
	at org.jetbrains.kotlin.codegen.MemberCodegen.generate(MemberCodegen.java:128)
	at org.jetbrains.kotlin.codegen.PackageCodegenImpl.generateFile(PackageCodegenImpl.java:127)
	at org.jetbrains.kotlin.codegen.PackageCodegenImpl.generate(PackageCodegenImpl.java:66)
	... 35 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't transform method node:
case_1 ()V:
   L0
    LINENUMBER 17 L0
   L1
    LINENUMBER 18 L1
    NEW org/jetbrains/kotlin/MainKt$case_1$1
    DUP
    ILOAD 0
    INVOKESPECIAL org/jetbrains/kotlin/MainKt$case_1$1.<init> (I)V
    CHECKCAST kotlin/jvm/functions/Function0
    INVOKESTATIC org/jetbrains/kotlin/MainKt.myRun (Lkotlin/jvm/functions/Function0;)V
   L2
    LINENUMBER 21 L2
    RETURN
   L3
    LOCALVARIABLE tt I L1 L3 0
    MAXSTACK = 3
    MAXLOCALS = 1
Cause: AFTER mandatory stack transformations: incorrect bytecode
Element is unknownThe root cause was thrown at: MethodVerifier.kt:28
	at org.jetbrains.kotlin.codegen.TransformationMethodVisitor.visitEnd(TransformationMethodVisitor.java:88)
	at org.jetbrains.kotlin.codegen.FunctionCodegen.endVisit(FunctionCodegen.java:1021)
	... 44 more
Caused by: java.lang.AssertionError: AFTER mandatory stack transformations: incorrect bytecode
	at org.jetbrains.kotlin.codegen.optimization.MethodVerifier.transform(MethodVerifier.kt:28)
	at org.jetbrains.kotlin.codegen.optimization.transformer.CompositeMethodTransformer.transform(CompositeMethodTransformer.kt:25)
	at org.jetbrains.kotlin.codegen.optimization.OptimizationMethodVisitor.performTransformations(OptimizationMethodVisitor.kt:62)
	at org.jetbrains.kotlin.codegen.TransformationMethodVisitor.visitEnd(TransformationMethodVisitor.java:65)
	... 45 more
Caused by: java.lang.RuntimeException: org.jetbrains.org.objectweb.asm.tree.analysis.AnalyzerException: Error at instruction 6: Expected I, but found .
	at org.jetbrains.kotlin.codegen.optimization.transformer.MethodTransformer.runAnalyzer(MethodTransformer.java:34)
	at org.jetbrains.kotlin.codegen.optimization.transformer.MethodTransformer.analyze(MethodTransformer.java:44)
	at org.jetbrains.kotlin.codegen.optimization.MethodVerifier.transform(MethodVerifier.kt:26)
	... 48 more
Caused by: org.jetbrains.org.objectweb.asm.tree.analysis.AnalyzerException: Error at instruction 6: Expected I, but found .
	at org.jetbrains.org.objectweb.asm.tree.analysis.Analyzer.analyze(Analyzer.java:295)
	at org.jetbrains.kotlin.codegen.optimization.transformer.MethodTransformer.runAnalyzer(MethodTransformer.java:31)
	... 50 more
Caused by: org.jetbrains.org.objectweb.asm.tree.analysis.AnalyzerException: Expected I, but found .
	at org.jetbrains.org.objectweb.asm.tree.analysis.BasicVerifier.copyOperation(BasicVerifier.java:95)
	at org.jetbrains.org.objectweb.asm.tree.analysis.BasicVerifier.copyOperation(BasicVerifier.java:47)
	at org.jetbrains.org.objectweb.asm.tree.analysis.Frame.execute(Frame.java:277)
	at org.jetbrains.org.objectweb.asm.tree.analysis.Analyzer.analyze(Analyzer.java:200)
	... 51 more
```
Code example:
```
fun myRun(block: () -> Unit) {
    contract {
        callsInPlace(block, InvocationKind.EXACTLY_ONCE)
    }
    return block()
}

fun case_1() {
    val tt: Int
    myRun {
        tt = 10
    }
}

/* Without initialization in lambda is OK
fun case_1() {
    val tt: Int
    myRun { }
}
*/

fun main(args : Array<String>) {
    case_1()
}
```
I added diagnostic test for this case (is it expected that there will be a corresponding diagnostic?).