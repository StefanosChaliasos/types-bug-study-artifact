This issue can be a duplicate of KT-26153 (I'm not sure).

This is a valid code, but the contract does not work.

Examples:
```
inline fun case_1(value: Int?) {
    println("!")
    contract {
        returns(true) implies (value != null)
    } as ContractBuilder
}
```
```
inline fun case_1(value: Int?) {
    100 + 10
    throw Exception(contract {
        returns(true) implies (value != null)
    }.toString())
}
```
```
inline fun case_1(value: Int?) {
    for (i in 0..10) {
        println(i)
    }
    return contract {
        returns(true) implies (value != null)
    }
}
```
```
inline fun case_1(value: Int?, block: () -> Unit) {
    val f = 10 - 20
    val g = contract {
        returns(true) implies (value != null)
    }
}
```
Etc.