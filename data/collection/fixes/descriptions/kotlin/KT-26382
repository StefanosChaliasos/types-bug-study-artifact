Example:
```
fun <T : Number?> T.case_1(): Boolean? {
    contract { returns(null) implies (this@case_10 != null) }
    return this != null
}

fun case_10(value1: Number?) {
    if (value1?.case_10() == null) {
        println(value1.toByte()) // smartcast to not null
    } else {
        println(value1.toByte()) // smartcast to not null
    }
}

fun main(args: Array<String>) {
    case_10(null) // NPE
}
```
In both branches smartcast occurs, but `value1?.case_10()` can be null without using contract.