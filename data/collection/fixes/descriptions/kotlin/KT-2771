{code lang=kt}
class A {
    enum class E {
        ENTRY
    }
}
{code}
This fails to compile, because ENTRY needs to be put into E's class object, but class objects are not allowed in a non-static context.
On the other hand, if E is declared inside A's class object, everything works fine:
{code lang=kt}
class A {
    class object {
        enum class E {
            ENTRY
        }
    }
}
{code}

We should place every inner enum into its parent's class object implicitly, like javac does (inner enum in Java is implicitly static).