```kotlin
class Test<T> {
    fun <C : MutableCollection<T>> test(f: () -> C): C {
        return f()
    }
}

    val t = Test<Int>()
    t.test { ArrayList() }
```

```text
Kotlin: Type inference failed: Not enough information to infer parameter E in fun <E> <init>(): kotlin.collections.ArrayList<E> /* = java.util.ArrayList<E> */
Please specify it explicitly.
```

If I change the function like ``` fun test(f: () -> MutableCollection<T>): MutableCollection<T>``` the compiler stops complaining but I loose precise return type of the function.