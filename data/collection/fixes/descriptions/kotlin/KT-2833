{code}
package test

public trait FunDependencyEdge {
    val from: FunctionNode
}

public trait FunctionNode

public class FunctionNodeImpl : FunctionNode

class FunDependencyEdgeImpl(override val from: FunctionNodeImpl): FunDependencyEdge {
}

fun main(args: Array<String>) {
    (FunDependencyEdgeImpl(FunctionNodeImpl()) as FunDependencyEdge).from
}
{code}

Exception in thread "main" java.lang.AbstractMethodError: test.FunDependencyEdgeImpl.getFrom()Ltest/FunctionNode;
	at test.namespace.main(Test.kt:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)