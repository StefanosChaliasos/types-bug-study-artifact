{code}
open class Base {
    fun foo() {}
}

class SubBase : Base()

open class Some<T: Base>(val p: T) {
    fun bad() = p.foo()
}

class SubSome<T: SubBase?>(p: T) : Some<T>(p) // ! Should be a compile error here

fun main(args: Array<String>) {
    // val test = Some<SubBase?>(null) // Ok, error as expected

    val some = SubSome<SubBase?>(null)
    some.bad() // NullPointerException
}
{code}