{code}
fun {
    val tttt : TTTTT = null
}
{code}

Copy of EA-39006

Argument 0 for @NotNull parameter of org/jetbrains/jet/lang/resolve/scopes/ChainedScope.getFunctions must not be null: Argument 0 for @NotNull parameter of org/jetbrains/jet/lang/resolve/scopes/ChainedScope.getFunctions must not be null
java.lang.IllegalArgumentException: Argument 0 for @NotNull parameter of org/jetbrains/jet/lang/resolve/scopes/ChainedScope.getFunctions must not be null
	at org.jetbrains.jet.lang.resolve.scopes.ChainedScope.getFunctions(ChainedScope.java)
	at org.jetbrains.jet.lang.resolve.scopes.ChainedScope.getFunctions(ChainedScope.java:34)
	at org.jetbrains.jet.lang.resolve.lazy.ResolveSession$2.visitNamedFunction(ResolveSession.java:228)
	at org.jetbrains.jet.lang.resolve.lazy.ResolveSession$2.visitNamedFunction(ResolveSession.java:174)
	at org.jetbrains.jet.lang.psi.JetNamedFunction.accept(JetNamedFunction.java:56)
	at org.jetbrains.jet.lang.resolve.lazy.ResolveSession.resolveToDescriptor(ResolveSession.java:174)
	at org.jetbrains.jet.lang.resolve.lazy.ResolveSessionUtils.functionAdditionalResolve(ResolveSessionUtils.java:188)
	at org.jetbrains.jet.lang.resolve.lazy.ResolveSessionUtils.resolveToExpression(ResolveSessionUtils.java:113)
	at org.jetbrains.jet.plugin.caches.JetShortNamesCache.getTopLevelFunctionDescriptorsByName(JetShortNamesCache.java:140)
	at org.jetbrains.jet.plugin.quickfix.ImportClassAndFunFix.getJetTopLevelFunctions(ImportClassAndFunFix.java:120)
	at org.jetbrains.jet.plugin.quickfix.ImportClassAndFunFix.computeSuggestions(ImportClassAndFunFix.java:100)
	at org.jetbrains.jet.plugin.quickfix.ImportClassAndFunFix.<init>(ImportClassAndFunFix.java:79)
	at org.jetbrains.jet.plugin.quickfix.ImportClassAndFunFix$10.createAction(ImportClassAndFunFix.java:310)
	at org.jetbrains.jet.plugin.quickfix.ImportClassAndFunFix$10.createAction(ImportClassAndFunFix.java:303)
	at org.jetbrains.jet.plugin.highlighter.JetPsiChecker.registerQuickFix(JetPsiChecker.java:228)
	at org.jetbrains.jet.plugin.highlighter.JetPsiChecker.registerDiagnosticAnnotations(JetPsiChecker.java:169)
	at org.jetbrains.jet.plugin.highlighter.JetPsiChecker.annotate(JetPsiChecker.java:123)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.runAnnotators(DefaultHighlightVisitor.java:160)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.visit(DefaultHighlightVisitor.java:103)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$10.run(GeneralHighlightingPass.java:634)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:747)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$3500(GeneralHighlightingPass.java:83)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$12.run(GeneralHighlightingPass.java:753)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.analyze(DefaultHighlightVisitor.java:87)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:750)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$3500(GeneralHighlightingPass.java:83)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$12.run(GeneralHighlightingPass.java:753)
	at com.intellij.codeInsight.daemon.impl.RefCountHolder.analyze(RefCountHolder.java:296)
	at com.intellij.codeInsight.daemon.impl.analysis.HighlightVisitorImpl.analyze(HighlightVisitorImpl.java:137)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:750)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectHighlights(GeneralHighlightingPass.java:707)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectInformationWithProgress(GeneralHighlightingPass.java:206)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:58)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:62)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1$1.run(PassExecutorService.java:357)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1144)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1.run(PassExecutorService.java:348)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:232)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:345)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:321)
	at com.intellij.concurrency.JobLauncherImpl$3.call(JobLauncherImpl.java:129)
	at com.intellij.concurrency.JobLauncherImpl$3.call(JobLauncherImpl.java:126)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at com.intellij.concurrency.PrioritizedFutureTask.access$101(PrioritizedFutureTask.java:31)
	at com.intellij.concurrency.PrioritizedFutureTask$1.run(PrioritizedFutureTask.java:70)
	at com.intellij.concurrency.PrioritizedFutureTask.run(PrioritizedFutureTask.java:113)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)