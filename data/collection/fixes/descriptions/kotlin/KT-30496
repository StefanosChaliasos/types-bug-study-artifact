Consider the following:
```
class A
infix fun <T> A.foo(i: Int){} // foo1
infix fun <T> T.foo(i: Int?){} // foo2

fun test(){
    val a = null foo null
}
```

```
[TYPE_INFERENCE_INCORPORATION_ERROR] Type inference failed. Please try to specify type arguments explicitly.
[UNSAFE_INFIX_CALL] Infix call corresponds to a dot-qualified call 'null.foo(null)' which is not allowed on a nullable receiver 'null'. Use '?.'-qualified call instead. 
```

IMO only foo2 should apply as null cannot be used as receiver of `A` (because it is not nullable)

Notice that the example compiles if you remove `<T>` in foo1