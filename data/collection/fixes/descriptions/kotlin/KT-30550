Consider the following builders:
```
fun <T> foo(block: suspend () -> T): T = TODO()
fun <T> bar(block: () -> T): T = TODO()
```

Now I want to use them with some type `T`, but return a `Unit`:
```
fun callFooWithType(): Unit = foo<Unit> { 1 } // 1, works
fun callFoo(): Unit = foo { 1 } // 2, does not compile

fun callBarWithType(): Unit = bar<Unit> { 1 } // 3, works
fun callBar(): Unit = bar { 1 } // 4, works
```

I'd expect that 2 and 4 behave identically