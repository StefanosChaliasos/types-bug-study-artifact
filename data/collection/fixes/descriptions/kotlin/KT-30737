```
open class A
class B : A()

class Or(left: A, right: A) : A()

fun test(ls: List<B>) {
    ls.reduce(::Or) // works in OI, error in NI 
    ls.reduce { left, right -> Or(left, right) } // error everywhere
}

fun <S, T : S> Iterable<T>.reduce(operation: (acc: S, T) -> S): S = TODO()
```