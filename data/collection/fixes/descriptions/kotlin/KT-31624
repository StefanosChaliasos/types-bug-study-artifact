```
// FILE: Tasks.java

public class Tasks {
    public static <T> Inv<T> call(JSam<T> f) {
        return null;
    }
}

// FILE: JSam.java

public interface JSam<V> {
    V call();
}

// FILE: test.kt

fun <K> withLock(g: () -> K): K = g()

class Out<out P>
class Inv<S>

fun <R> Inv<R>.asOut(): Out<R> = TODO()

fun test() {
    val o: Out<Int> = Tasks.call { // type mismatch
        withLock { TODO() }
    }.asOut()
}
```

Original example from kotlinx.coroutines: [TaskTest.kt#L135](https://github.com/Kotlin/kotlinx.coroutines/blob/64be7952806a0e7211ba3e513317a2772f6aacb5/integration/kotlinx-coroutines-play-services/test/TaskTest.kt#L135)