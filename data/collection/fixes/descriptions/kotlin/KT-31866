The following code produces an exception
```
fun foo(a: Any) {}

fun test() {
    foo(HashMap<*, *>::getOrDefault)
}
```
Exception:
```
Caused by: java.lang.AssertionError: Receiver argument should be null if parameter is: org.jetbrains.kotlin.resolve.calls.components.CallableReceiver$UnboundReference@7abf1eda
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolutionKt.addReceiverConstraint(CallableReferenceResolution.kt:140)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolutionKt.checkCallableReference(CallableReferenceResolution.kt:122)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferencesCandidateFactory$createCandidate$1.invoke(CallableReferenceResolution.kt:199)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferencesCandidateFactory$createCandidate$1.invoke(CallableReferenceResolution.kt:151)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver$processCallableReferenceArgument$candidates$1$1.invoke(CallableReferenceResolver.kt:76)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver$processCallableReferenceArgument$candidates$1$1.invoke(CallableReferenceResolver.kt:60)
	at org.jetbrains.kotlin.resolve.calls.inference.model.NewConstraintSystemImpl.runTransaction(NewConstraintSystemImpl.kt:131)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver$processCallableReferenceArgument$candidates$1.invoke(CallableReferenceResolver.kt:76)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver$processCallableReferenceArgument$candidates$1.invoke(CallableReferenceResolver.kt:60)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferencesCandidateFactory.createCandidate(CallableReferenceResolution.kt:196)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferencesCandidateFactory.createCandidate(CallableReferenceResolution.kt:151)
	at org.jetbrains.kotlin.resolve.calls.tower.AbstractSimpleScopeTowerProcessor.createCandidates(ScopeTowerProcessors.kt:75)
	at org.jetbrains.kotlin.resolve.calls.tower.ExplicitReceiverScopeTowerProcessor.simpleProcess(ScopeTowerProcessors.kt:98)
	at org.jetbrains.kotlin.resolve.calls.tower.SamePriorityCompositeScopeTowerProcessor.simpleProcess(ScopeTowerProcessors.kt:50)
	at org.jetbrains.kotlin.resolve.calls.tower.SamePriorityCompositeScopeTowerProcessor.simpleProcess(ScopeTowerProcessors.kt:50)
	at org.jetbrains.kotlin.resolve.calls.tower.SimpleScopeTowerProcessor$DefaultImpls.process(ScopeTowerProcessors.kt:60)
	at org.jetbrains.kotlin.resolve.calls.tower.SamePriorityCompositeScopeTowerProcessor.process(ScopeTowerProcessors.kt:47)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.processTowerData(TowerResolver.kt:271)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.access$processTowerData(TowerResolver.kt:77)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver$Task.process(TowerResolver.kt:158)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver$Task.run(TowerResolver.kt:177)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.run(TowerResolver.kt:96)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.runResolve(TowerResolver.kt:83)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver.runRHSResolution(CallableReferenceResolver.kt:129)
	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver.processCallableReferenceArgument(CallableReferenceResolver.kt:75)
	at org.jetbrains.kotlin.resolve.calls.components.EagerResolveOfCallableReferences.process(ResolutionParts.kt:371)
	at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processPart(ResolutionCandidate.kt:138)
	at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processPart$default(ResolutionCandidate.kt:134)
	at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processParts(ResolutionCandidate.kt:125)
	at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.isSuccessful(ResolutionCandidate.kt:152)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver$SuccessfulResultCollector.pushCandidates(TowerResolver.kt:321)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.processTowerData(TowerResolver.kt:277)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.access$processTowerData(TowerResolver.kt:77)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver$Task.process(TowerResolver.kt:158)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver$Task.process(TowerResolver.kt:167)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver$Task.run(TowerResolver.kt:199)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.run(TowerResolver.kt:96)
	at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver.runResolve(TowerResolver.kt:83)
	at org.jetbrains.kotlin.resolve.calls.KotlinCallResolver.resolveCall(KotlinCallResolver.kt:84)
	at org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver.runResolutionAndInference(PSICallResolver.kt:96)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:577)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.lambda$computeTasksAndResolveCall$0(CallResolver.java:208)
	at org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:91)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:206)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:196)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:322)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.kt:95)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.kt:217)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfo(CallExpressionResolver.kt:194)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:727)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitCallExpression(ExpressionTypingVisitorDispatcher.java:376)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$ForBlock.visitCallExpression(ExpressionTypingVisitorDispatcher.java:58)
	at org.jetbrains.kotlin.psi.KtCallExpression.accept(KtCallExpression.java:35)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(ExpressionTypingVisitorDispatcher.java:173)
	... 74 more
```


Plus, if one put such callable reference on top-level, then RHS will be unresolved:
```
fun test() {
    HashMap<*, *>::getOrDefault // "debug info unresolved"
}
```