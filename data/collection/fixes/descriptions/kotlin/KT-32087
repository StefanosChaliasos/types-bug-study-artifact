```
fun <A> alpha() : List<A> {
    return listOf()
}

fun <B> beta(gamma: () -> List<B>) : List<B> {
    return gamma()
}

fun omega() : List<Int> {
    return beta { alpha<Int>() }
}
```
![](image.png)

Applying the inspection to remove the `<Int>` type argument from the call to `alpha` causes compilation error:

```
Kotlin: Type inference failed: Not enough information to infer parameter A in fun <A> alpha(): List<A>
Please specify it explicitly.
```

I would expect either the return type of `omega` to transitively infer the return type of `alpha` through `beta` or for the IDE to not offer to remove the explicit type definition.