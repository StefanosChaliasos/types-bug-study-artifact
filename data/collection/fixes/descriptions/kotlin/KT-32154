Calling `setOf(Map.Entry<*, *>::key)` gives an error from the IDE, but compiles fine.
Calling `Map.Entry<*, *>::key` outside of `setOf` works fine. Maybe it's a problem of the new type inference algorithm.
The only mitigation of the problem seems to be calling `setOf(Map.Entry<*, *>::key as KProperty<*>)`. In particular:
```
val kp = Map.Entry<*, *>::key
setOf(kp) //Works
setOf(Map.Entry<*, *>::key as KProperty<*>) //Works

setOf(Map.Entry<*, *>::key) //IDE error, compiles OK
setOf<KProperty<*>>(Map.Entry<*, *>::key) //IDE error, compiles OK
```

Tested on IntelliJ IDEA 2019.1.3 (Community Edition)
Build #IC-191.7479.19, built on May 28, 2019
JRE: 1.8.0_202-release-1483-b58 amd64
JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o
Windows 10 10.0