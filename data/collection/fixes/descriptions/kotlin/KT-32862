As the error icon does not show any error I am pasting it here
```
Internal Error occurred while analyzing this expression 
(Please use the "
 
" icon in the bottom-right corner to report this error):
 
java.lang.IllegalArgumentException: ClassicTypeSystemContextForCS couldn't handle: Expect , class org.jetbrains.kotlin.types.DeferredType
 	at org.jetbrains.kotlin.resolve.calls.components.ClassicTypeSystemContextForCS.safeSubstitute(ClassicTypeSystemContextForCS.kt:61)
 	at org.jetbrains.kotlin.resolve.calls.inference.model.NewConstraintSystemImpl.safeSubstitute(NewConstraintSystemImpl.kt)
 	at org.jetbrains.kotlin.types.model.MarkerExtensionsKt.safeSubstitute(MarkerExtensions.kt:12)
 	at org.jetbrains.kotlin.resolve.calls.results.FlatSignatureKt.isSignatureNotLessSpecific(FlatSignature.kt:150)
 	at org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver.compareCallsByUsedArguments(OverloadingConflictResolver.kt:280)
 	at org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver.isNotLessSpecificCallWithArgumentMapping(OverloadingConflictResolver.kt:251)
 	at org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver.findMaximallySpecificCall(OverloadingConflictResolver.kt:204)
 	at org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver.findMaximallySpecific(OverloadingConflictResolver.kt:158)
 	at org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver.chooseMaximallySpecificCandidates(OverloadingConflictResolver.kt:96)
 	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver.runRHSResolution(CallableReferenceResolver.kt:130)
 	at org.jetbrains.kotlin.resolve.calls.components.CallableReferenceResolver.processCallableReferenceArgument(CallableReferenceResolver.kt:75)
 	at org.jetbrains.kotlin.resolve.calls.components.EagerResolveOfCallableReferences.process(ResolutionParts.kt:373)
 	at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processPart(ResolutionCandidate.kt:138)
 	at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processPart$default(ResolutionCandidate.kt:134)
 	at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processParts(ResolutionCandidate.kt:125)
 	at org.jetbrain...
```
maybe not reproducible but worth a try:
1. git clone https://github.com/robstoll/atrium
2. open up ch.tutteli.atrium.api.fluent.en_GB.MapAssertionsSpec
3. the whole line of `containsNullableFun.name to Expect<Map<out String?, Int?>>::contains,` is underlined with red, hovering it shows the above error

The error happens also after a restart and regardless if with the old or new type inference