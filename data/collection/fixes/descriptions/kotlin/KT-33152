This compiles:

```
var n: Double? =  null
class Gen<T>
val foo: Map<String, (Gen<*>) -> Double?> = mapOf(
    "a" to { g -> 1.0 }, 
    "b" to { g -> n })
```

This doesn't:

```
var n: Double? =  null
class Gen<T>
val foo: Map<String, (Gen<*>) -> Double?> = mapOf(
    "a" to { g: Gen<*> -> 1.0 }, 
    "b" to { g -> n })
```

The only difference is that the parameter to lambda that's mapped to `"a"` is qualified with `Gen<*>`.

Note: IDEA doesn't show any errors in both cases (1.3.41 as well).