In Kotlin M5 I can call a {monospace}flatMap{monospace} function like this

{code:lang=kotlin}
myIterator.flatMap {(friend) -> friend.getRelationships(Direction.OUTGOING, hasSeenRT)!!.iterator().map {(relationedMovie) -> relationedMovie.getEndNode()!!} }
{code} 

Now I need to call it like this
{code:lang=kotlin}
val value: (Node) -> Iterator<Node> = {(friend) -> friend.getRelationships(Direction.OUTGOING, hasSeenRT)!!.iterator().map {(relationedMovie) -> relationedMovie.getEndNode()!!} }

myIterator.flatMap(value)
{code}

When I try to make the refactor (extract val) the variable was declared like 

{code:lang=kotlin}
val value: (???) -> [ERROR : <ERROR FUNCTION RETURN TYPE>] = {(friend) -> friend.getRelationships(Direction.OUTGOING, hasSeenRT)!!.iterator().map {(relationedMovie) -> relationedMovie.getEndNode()!!} }
{code}

I try the same refactor with others functions and I don't have any problem