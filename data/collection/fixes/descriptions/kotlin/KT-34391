Consider this code:
```
fun main() {
    val list = listOf(A())
    list.forEach(A::foo)
    list.forEach {
        it.foo()
    }
}

class A {
    @ExperimentalTime
    fun foo() {
        println("a")
    }
}

@Experimental(level = Experimental.Level.ERROR)
annotation class ExperimentalTime
```

If we use forEach with method reference, IntelliJ will not warn about experimental API, but in second forEach usage warning exists. If we remove second forEach, this code won't have any errors in editor. But if we try to compile it, we will receive compilation error.