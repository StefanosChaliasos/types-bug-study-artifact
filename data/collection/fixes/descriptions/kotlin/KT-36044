The code is:
```
fun <A> select(x: A, f: () -> A) = f()
fun <B> map(f: () -> B) = f()

fun main() {
    select('a', map { { "" } }) // Any in OI, error in NI (Required: () → Char, Found: () → String)
}
```
It seems, a type variable `B` has been fixed to `() → Char` without taking into account type of a return expression of the deepest lambda (`{ "" }`). Old inference calculates the common super type between them.