{code}
class Test {
    fun foo() {
        class S {
            class object {

            }
        }
    }
}
{code}

java.lang.IllegalStateException: @NotNull method org/jetbrains/jet/lang/resolve/TypeHierarchyResolver.getStaticScope must not return null
	at org.jetbrains.jet.lang.resolve.TypeHierarchyResolver.getStaticScope(TypeHierarchyResolver.java:162)
	at org.jetbrains.jet.lang.resolve.TypeHierarchyResolver.access$600(TypeHierarchyResolver.java:50)
	at org.jetbrains.jet.lang.resolve.TypeHierarchyResolver$ClassifierCollector.visitClassObject(TypeHierarchyResolver.java:533)
	at org.jetbrains.jet.lang.psi.JetClassObject.accept(JetClassObject.java:31)
	at org.jetbrains.jet.lang.psi.JetElementImpl.accept(JetElementImpl.java:46)
	at org.jetbrains.jet.lang.resolve.TypeHierarchyResolver.collectNamespacesAndClassifiers(TypeHierarchyResolver.java:195)
	at org.jetbrains.jet.lang.resolve.TypeHierarchyResolver.process(TypeHierarchyResolver.java:113)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.doProcess(TopDownAnalyzer.java:123)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.processClassOrObject(TopDownAnalyzer.java:199)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorForStatements.visitClass(ExpressionTypingVisitorForStatements.java:166)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorForStatements.visitClass(ExpressionTypingVisitorForStatements.java:51)
	at org.jetbrains.jet.lang.psi.JetClass.accept(JetClass.java:66)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:114)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:92)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getBlockReturnedTypeWithWritableScope(ExpressionTypingServices.java:331)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingServices.getBlockReturnedType(ExpressionTypingServices.java:215)
	at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitBlockExpression(BasicExpressionTypingVisitor.java:554)
	at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitBlockExpression(BasicExpressionTypingVisitor.java:550)
	at org.jetbrains.jet.lang.types.expressions.BasicExpressionTypingVisitor.visitBlockExpression(BasicExpressionTypingVisitor.java:63)
	at org.jetbrains.jet.lang.psi.JetBlockExpression.accept(JetBlockExpression.java:47)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:219)
	at org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:33)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:145)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitBlockExpression(JetVisitor.java:269)
	at org.jetbrains.jet.lang.psi.JetBlockExpression.accept(JetBlockExpression.java:47)