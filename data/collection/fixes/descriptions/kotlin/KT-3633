The code below seems like it should work to me:

{code}
class Cont<T>(val t: T)

class Supp<T>(val t: T)

fun <T, E : Cont<T>> doit(o: Any, e: E) {
    println("doit 1")
}

fun <T, E : Supp<T>> doit(o: Any, e: E) {
    println("doit 2")
}

fun tryit() {
    doit("hello", Cont("hello"))
}
{code}

However, it gives me this error:

{code}
Kotlin: Cannot choose among the following candidates without completing type inference: 
internal fun <T, E : Cont<T>> doit(o: jet.Any, e: E): jet.Unit defined in root package
internal fun <T, E : Supp<T>> doit(o: jet.Any, e: E): jet.Unit defined in root package
{code}

This code is in a third party Java library so I can't change it.