```
fun main() {
    val test = sequence {
        yield()
    }
}

suspend fun SequenceScope<Unit>.yield() = yield(Unit)
```

Expected: Infer correctly that `test` is of type `Sequence<Unit>`, or IntelliJ IDEA should highlight the error immediately if it doesn't compile.

Actual: IntelliJ IDEA infers the type parameter of `test` correctly, but not the Kotlin compiler, which says 
"Type inference failed: Not enough information to infer parameter T in fun <T> sequence(block: suspend SequenceScope<T>.() -> Unit): Sequence<T>
Please specify it explicitly."

Specifying it by adding `<Unit>` to the `sequence` call makes it compile correctly, but now IntelliJ IDEA would mark the parameter as redundant.