The code is:
`Test.java`
```
class Test {
    static Number[] foo() {
        return null;
    }
}
```
`main.kt`
```
fun <T> foo(x: Array<out T>): T = x[0]

inline fun <reified T> materializeArray(): Array<T> = null as Array<T>

fun main()  {
    val y = foo(Test.foo() ?: materializeArray()) // Any? in NI, Number! in OI (T of `materializeArray` is inferred to Any?)
}
```

It's reproduced only with reified type parameter in `materializeArray`.