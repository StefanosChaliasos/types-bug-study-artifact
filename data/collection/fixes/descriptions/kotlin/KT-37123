What steps will reproduce the issue?
1. Write Function as lambda (return is missing on screenshots but it does not affect anything)
```
    val observable1 = Observable.just(true)
    val observable2 = Observable.just(true)
    val observable3 = Observable.just(true)

    Observable.combineLatest({
        val valids = it as Array<Boolean>
        for (valid in valids) {
            if (!valid) return@combineLatest false
        }
        return@combineLatest true
    }, Observable.bufferSize(), observable1, observable2, observable3)
```
Signature not detected
![](image.png)
![](image1.png)
2. Add Function direct type declaration - `it` resolved, out type - not
![](image2.png)
3. Use intention to specify full signature - `it` declaration shown as redundant
![](image3.png)
4. Use intention to cleanup code - p.2 error reappears
![](image4.png)


What is the expected result?
Function type is resolved when written as p.1 lambda without specifying signature as its type is declared in library's method.

io.reactivex.rxjava2:rxjava:2.2.10
kotlin_version = '1.3.61'