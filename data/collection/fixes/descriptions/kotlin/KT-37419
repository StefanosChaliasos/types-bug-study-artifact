I have the following code.
```
  interface RecipeExecutor { ... }

  sealed class TemplateData

  typealias Recipe = RecipeExecutor.(TemplateData) -> Unit

  fun RecipeExecutor.generateAndroidModule() = ...
  fun RecipeExecutor.generateWearModule() = ...

  class SomeClass : BaseClass() {
    override val recipe: Recipe get() = when(formFactor.get()) {
      FormFactor.MOBILE -> { data: TemplateData ->
        generateAndroidModule()
      }
      FormFactor.WEAR -> { data: TemplateData ->
        generateWearModule(data as ModuleTemplateData, applicationName.get(), useGradleKts.get())
      }
      ...
    }
  }

```

It compiles just fine but is red in idea and produces errors in "Code analysis", such as
```
Error:(156, 28) Type mismatch: inferred type is (TemplateData) -> Unit but Recipe /* = RecipeExecutor.(TemplateData) -> Unit */ was expected

Error:(157, 9) Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public fun RecipeExecutor.generateAndroidModule(): Unit defined in com.android.tools.idea.npw.module.recipes.androidModule in file androidModuleRecipe.kt
```

Kotlin 1.3.70-release-IJ2020.1-1, Intellij 2020.1 EAP