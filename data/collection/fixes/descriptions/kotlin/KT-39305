In the following code example, the new type inference algorithm yields the error _"Not enough information to infer type variable T"_ for the invocation of `doThing()`, while the old type inference algorithm is able to infer the type correctly, yielding no error.

```kotlin
interface IThing<T> {}
class Thing : IThing<Set<List<Collection<Int>>>> {}

fun <T> doThing(t: IThing<T>) {}

fun reproduce() {
    // With the new type inference algorithm, error on the function invocation below:
    // "Not enough information to infer type variable T"
    doThing(Thing())
    // (No such error with the old type inference algorithm.)
}
```

---

Kotlin plugin version: `1.3.72-release-IJ2020.1-3` (also tested with `1.4-M1` with the same results.)

IDE version:

```text
IntelliJ IDEA 2020.1.1 (Community Edition)
Build #IC-201.7223.91, built on April 30, 2020
Runtime version: 11.0.6+8-b765.40 x86_64
VM: OpenJDK 64-Bit Server VM by JetBrains s.r.o
macOS 10.14.6
GC: ParNew, ConcurrentMarkSweep
Memory: 1979M
Cores: 12
Registry: compiler.automake.allow.when.app.running=true, ide.tooltip.initialDelay=225
Non-Bundled Plugins: com.intellij.plugins.vscodekeymap, org.jetbrains.kotlin
```