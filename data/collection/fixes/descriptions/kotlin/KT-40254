```
fun <T> List<Option<T>>.flatten(): List<T> = flatMap { it.fold(::emptyList, ::listOf) }

class Option<out T> {
    fun <R, A> fold(ifEmpty: () -> R, ifSome: (A) -> R): R = TODO()
}
```

Exception:
```
ERROR: Rewrite at slice FUNCTION key: CALLABLE_REFERENCE_EXPRESSION old value: public final fun <anonymous>(): kotlin.collections.List<T> defined in flatten[AnonymousFunctionDescriptor@5ab2e10d]@1521672461 new value: public final fun <anonymous>(): kotlin.collections.List<T> defined in flatten[AnonymousFunctionDescriptor@1dac0f78]@497815416
File name: resolveTwoReferencesAgainstGenerics.kt Physical: true Injected: false
fun <T> List<Option<T>>.flatten(): List<T> = flatMap { it.fold(<caret>::emptyList, ::listOf) }
java.lang.Throwable: Rewrite at slice FUNCTION key: CALLABLE_REFERENCE_EXPRESSION old value: public final fun <anonymous>(): kotlin.collections.List<T> defined in flatten[AnonymousFunctionDescriptor@5ab2e10d]@1521672461 new value: public final fun <anonymous>(): kotlin.collections.List<T> defined in flatten[AnonymousFunctionDescriptor@1dac0f78]@497815416
File name: resolveTwoReferencesAgainstGenerics.kt Physical: true Injected: false
fun <T> List<Option<T>>.flatten(): List<T> = flatMap { it.fold(<caret>::emptyList, ::listOf) }
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:146)
	at org.jetbrains.kotlin.util.slicedMap.Slices.logErrorAboutRewritingNonEqualObjects(Slices.java:158)
	at org.jetbrains.kotlin.util.slicedMap.Slices.access$000(Slices.java:30)
	at org.jetbrains.kotlin.util.slicedMap.Slices$1.processRewrite(Slices.java:42)
	at org.jetbrains.kotlin.util.slicedMap.SlicedMapImpl.put(SlicedMapImpl.java:65)
	at org.jetbrains.kotlin.resolve.DelegatingBindingTrace.record(DelegatingBindingTrace.kt:95)
	at org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver.bindFunctionReference$frontend(DoubleColonExpressionResolver.kt:649)
	at org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.completeCallableReference(ResolvedAtomCompleter.kt:397)
	at org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.complete(ResolvedAtomCompleter.kt:77)
	at org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.completeAll(ResolvedAtomCompleter.kt:90)
	at org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.completeAll(ResolvedAtomCompleter.kt:88)
	at org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.completeAll(ResolvedAtomCompleter.kt:88)
	at org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.completeAll(ResolvedAtomCompleter.kt:88)
	at org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.completeAll(ResolvedAtomCompleter.kt:88)
	at org.jetbrains.kotlin.resolve.calls.tower.KotlinToResolvedCallTransformer.transformAndReport(KotlinToResolvedCallTransformer.kt:154)
	at org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver.convertToOverloadResolutionResults(PSICallResolver.kt:234)
	at org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver.runResolutionAndInference(PSICallResolver.kt:114)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:581)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.lambda$computeTasksAndResolveCall$0(CallResolver.java:212)
	at org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:101)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:210)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:198)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:326)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.kt:98)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.kt:220)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfo(CallExpressionResolver.kt:197)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:700)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitCallExpression(ExpressionTypingVisitorDispatcher.java:388)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$ForDeclarations.visitCallExpression(ExpressionTypingVisitorDispatcher.java:46)
	at org.jetbrains.kotlin.psi.KtCallExpression.accept(KtCallExpression.java:35)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(ExpressionTypingVisitorDispatcher.java:175)
	at org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:101)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:164)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:134)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:146)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.checkFunctionReturnType(ExpressionTypingServices.java:172)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.checkFunctionReturnType(ExpressionTypingServices.java:155)
	at org.jetbrains.kotlin.resolve.BodyResolver.resolveFunctionBody(BodyResolver.java:985)
	at org.jetbrains.kotlin.resolve.BodyResolver.resolveFunctionBody(BodyResolver.java:932)
	at org.jetbrains.kotlin.resolve.BodyResolver.resolveFunctionBodies(BodyResolver.java:918)
	at org.jetbrains.kotlin.resolve.BodyResolver.resolveBehaviorDeclarationBodies(BodyResolver.java:125)
	at org.jetbrains.kotlin.resolve.BodyResolver.resolveBodies(BodyResolver.java:246)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.kt:225)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations$default(LazyTopDownAnalyzer.kt:60)
	at org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.kt:123)
	at org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$default(TopDownAnalyzerFacadeForJVM.kt:93)
	at org.jetbrains.kotlin.checkers.AbstractDiagnosticsTest.analyzeModuleContents(AbstractDiagnosticsTest.kt:435)
	at org.jetbrains.kotlin.checkers.AbstractDiagnosticsTest.analyzeAndCheckUnhandled(AbstractDiagnosticsTest.kt:141)
	at org.jetbrains.kotlin.checkers.AbstractDiagnosticsTest.analyzeAndCheck(AbstractDiagnosticsTest.kt:83)
	at org.jetbrains.kotlin.checkers.BaseDiagnosticsTest.doMultiFileTest(BaseDiagnosticsTest.kt:101)
	at org.jetbrains.kotlin.test.KotlinBaseTest.doTest(KotlinBaseTest.kt:49)
	at org.jetbrains.kotlin.checkers.KotlinMultiFileTestWithJava.doTest(KotlinMultiFileTestWithJava.kt:114)
	at org.jetbrains.kotlin.test.KotlinTestUtils.lambda$testWithCustomIgnoreDirective$6(KotlinTestUtils.java:804)
	at org.jetbrains.kotlin.test.MuteWithFileKt$testWithMuteInFile$1.invoke(muteWithFile.kt:41)
	at org.jetbrains.kotlin.test.KotlinTestUtils.runTestImpl(KotlinTestUtils.java:774)
	at org.jetbrains.kotlin.test.KotlinTestUtils.runTest(KotlinTestUtils.java:716)
	at org.jetbrains.kotlin.checkers.DiagnosticsTestGenerated$Tests$CallableReference$Resolve.runTest(DiagnosticsTestGenerated.java:2606)
	at org.jetbrains.kotlin.checkers.DiagnosticsTestGenerated$Tests$CallableReference$Resolve.testResolveTwoReferencesAgainstGenerics(DiagnosticsTestGenerated.java:2815)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.jetbrains.kotlin.test.testFramework.KtUsefulTestCase.lambda$runTest$9(KtUsefulTestCase.java:374)
	at org.jetbrains.kotlin.test.testFramework.KtUsefulTestCase.lambda$invokeTestRunnable$10(KtUsefulTestCase.java:407)
	at com.intellij.testFramework.EdtTestUtilKt.runInEdtAndWait(EdtTestUtil.kt:63)
	at org.jetbrains.kotlin.test.testFramework.KtUsefulTestCase.invokeTestRunnable(KtUsefulTestCase.java:406)
	at org.jetbrains.kotlin.test.testFramework.KtUsefulTestCase.runTest(KtUsefulTestCase.java:393)
	at org.jetbrains.kotlin.test.testFramework.KtUsefulTestCase.defaultRunBare(KtUsefulTestCase.java:424)
	at com.intellij.testFramework.EdtTestUtil$Companion$runInEdtAndWait$1.invoke(EdtTestUtil.kt:18)
	at com.intellij.testFramework.EdtTestUtil$Companion$runInEdtAndWait$1.invoke(EdtTestUtil.kt:13)
	at com.intellij.testFramework.EdtTestUtilKt$runInEdtAndWait$3.run(EdtTestUtil.kt:67)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:301)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:416)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:205)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
```