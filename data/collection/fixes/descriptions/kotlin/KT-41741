After updating to Kotlin 1.4.0, when increasing the languageLevel 1.4, we've encountered the following issue with our existing code.

I've stripped down the code as much as possible, perhaps the type parameters could be simplified even more. 
If you try to compile the attached project, you'll get an AssertionError:

```
e: org.jetbrains.kotlin.util.KotlinFrontEndException: Exception while analyzing expression at (21,18) in /home/bfd/data/git/kotlin14_analyzer_bug/src/main/kotlin/demo.kt
[...]
Caused by: java.lang.AssertionError: Empty intersection for types [Bag<(Format..Format?), in ImageInstance, out (kotlin.collections.MutableList<in (ImageInstance..ImageInstance?)>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(ImageInstance..ImageInstance?)>?)>, Bag<(Format..Format?), in (ImageInstance..ImageInstance?), out (kotlin.collections.MutableList<in (ImageInstance..ImageInstance?)>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(ImageInstance..ImageInstance?)>?)>, Bag<(Format..Format?), out Any?, out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?), out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?)>, Bag<(Format..Format?), out Any?, out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(kotlin.Nothing..kotlin.Nothing?)>?)>, Bag<(Format..Format?), in (kotlin.Nothing..kotlin.Nothing?), out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(kotlin.Nothing..kotlin.Nothing?)>?)>, Bag<(Format..Format?), out Any?, out (kotlin.collections.MutableList<in (ImageInstance..ImageInstance?)>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(ImageInstance..ImageInstance?)>?)>, Bag<(Format..Format?), out Any?, out (kotlin.collections.MutableList<in (kotlin.Nothing..kotlin.Nothing?)>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(kotlin.Nothing..kotlin.Nothing?)>?)>, Bag<(Format..Format?), in (kotlin.Nothing..kotlin.Nothing?), out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?), out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?)>, Bag<(Format..Format?), out Any?, out (kotlin.collections.MutableList<in (kotlin.Nothing..kotlin.Nothing?)>..kotlin.collections.List<kotlin.Any?>?), out (kotlin.collections.MutableList<in (kotlin.Nothing..kotlin.Nothing?)>..kotlin.collections.List<kotlin.Any?>?)>, Bag<(Format..Format?), out Any?, out (kotlin.collections.MutableList<in (kotlin.Nothing..kotlin.Nothing?)>..kotlin.collections.List<kotlin.Any?>?), out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?)>, Bag<(Format..Format?), in (kotlin.Nothing..kotlin.Nothing?), out (kotlin.collections.MutableList<in (kotlin.Nothing..kotlin.Nothing?)>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(kotlin.Nothing..kotlin.Nothing?)>?)>, Bag<(Format..Format?), out Any?, out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?), out (kotlin.collections.MutableList<in (kotlin.Nothing..kotlin.Nothing?)>..kotlin.collections.List<kotlin.Any?>?)>, Bag<(Format..Format?), in Nothing, out (kotlin.collections.MutableList<in (kotlin.Nothing..kotlin.Nothing?)>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(kotlin.Nothing..kotlin.Nothing?)>?)>, Bag<(Format..Format?), in Nothing, out (kotlin.collections.MutableList<out kotlin.Any?>..kotlin.collections.List<kotlin.Any?>?), in (kotlin.Nothing..kotlin.collections.List<(kotlin.Nothing..kotlin.Nothing?)>?)>, Bag<(Format..Format?), out Any?, out Any?, in (kotlin.Nothing..kotlin.collections.List<(kotlin.Nothing..kotlin.Nothing?)>?)>]
        at org.jetbrains.kotlin.types.TypeIntersector.intersectTypes(TypeIntersector.java:125)
        at org.jetbrains.kotlin.resolve.calls.tower.KotlinResolutionStatelessCallbacksImpl.isOldIntersectionIsEmpty(KotlinResolutionStatelessCallbacksImpl.kt:106)
        at org.jetbrains.kotlin.resolve.calls.components.CompatibilityOfTypeVariableAsIntersectionTypePart.process(ResolutionParts.kt:267)
        at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processPart(ResolutionCandidate.kt:142)
        at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processPart$default(ResolutionCandidate.kt:138)
        at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.processParts(ResolutionCandidate.kt:129)
        at org.jetbrains.kotlin.resolve.calls.model.KotlinResolutionCandidate.isSuccessful(ResolutionCandidate.kt:156)
        at org.jetbrains.kotlin.resolve.calls.tower.TowerResolver$SuccessfulResultCollector.pushCandidates(TowerResolver.kt:363)
[...]
```