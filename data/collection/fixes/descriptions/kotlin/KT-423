{code}
namespace test

class IntArray {
    fun get
}

fun test() {
    var x : Int
    x = 1
    (x) = 1
    x += 1
    (x) += 1
    var a : IntArray = IntArray(1)
    a[0] = 1
    (a[0]) = 1
    a[0] += 1
    (a[0]) += 1
}
{code}
java.lang.AssertionError
	at org.jetbrains.jet.lang.cfg.JetFlowInformationProvider$7.visitProperty(JetFlowInformationProvider.java:335)
	at org.jetbrains.jet.lang.cfg.JetFlowInformationProvider$7.visitProperty(JetFlowInformationProvider.java:1)
	at org.jetbrains.jet.lang.psi.JetProperty.accept(JetProperty.java:35)
	at org.jetbrains.jet.lang.psi.JetElement.acceptChildren(JetElement.java:56)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:9)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:1)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:132)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitBlockExpression(JetVisitor.java:264)
	at org.jetbrains.jet.lang.psi.JetBlockExpression.accept(JetBlockExpression.java:24)
	at org.jetbrains.jet.lang.psi.JetElement.acceptChildren(JetElement.java:56)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:9)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:1)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:132)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitDeclaration(JetVisitor.java:15)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitAnonymousInitializer(JetVisitor.java:296)
	at org.jetbrains.jet.lang.psi.JetClassInitializer.accept(JetClassInitializer.java:21)
	at org.jetbrains.jet.lang.psi.JetElement.acceptChildren(JetElement.java:56)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:9)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:1)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitClassBody(JetVisitor.java:56)
	at org.jetbrains.jet.lang.psi.JetClassBody.accept(JetClassBody.java:34)
	at org.jetbrains.jet.lang.psi.JetElement.acceptChildren(JetElement.java:56)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:9)
	at org.jetbrains.jet.lang.psi.JetTreeVisitor.visitJetElement(JetTreeVisitor.java:1)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitExpression(JetVisitor.java:132)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitDeclaration(JetVisitor.java:15)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitNamedDeclaration(JetVisitor.java:340)
	at org.jetbrains.jet.lang.psi.JetVisitor.visitClass(JetVisitor.java:23)
	at org.jetbrains.jet.lang.psi.JetClass.accept(JetClass.java:43)
	at org.jetbrains.jet.lang.cfg.JetFlowInformationProvider.collectDeclaredVariables(JetFlowInformationProvider.java:331)
	at org.jetbrains.jet.lang.cfg.JetFlowInformationProvider.prepareInitialMapForStartInstruction(JetFlowInformationProvider.java:242)
	at org.jetbrains.jet.lang.cfg.JetFlowInformationProvider.markUninitializedVariables(JetFlowInformationProvider.java:166)
	at org.jetbrains.jet.lang.resolve.ControlFlowAnalyzer.checkClass(ControlFlowAnalyzer.java:78)
	at org.jetbrains.jet.lang.resolve.ControlFlowAnalyzer.process(ControlFlowAnalyzer.java:46)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.process(TopDownAnalyzer.java:56)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.process(TopDownAnalyzer.java:35)
	at org.jetbrains.jet.lang.resolve.AnalyzingUtils.analyzeNamespaces(AnalyzingUtils.java:83)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade$2.compute(AnalyzerFacade.java:60)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:47)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:200)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:37)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade.analyzeFileWithCache(AnalyzerFacade.java:82)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacade.analyzeFileWithCache(AnalyzerFacade.java:46)
	at org.jetbrains.jet.plugin.compiler.WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(WholeProjectAnalyzerFacade.java:60)
	at org.jetbrains.jet.plugin.annotations.JetPsiChecker.annotate(JetPsiChecker.java:58)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.runAnnotators(DefaultHighlightVisitor.java:157)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.visit(DefaultHighlightVisitor.java:100)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$8.run(GeneralHighlightingPass.java:593)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:771)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$3600(GeneralHighlightingPass.java:80)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$10.run(GeneralHighlightingPass.java:777)
	at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.analyze(DefaultHighlightVisitor.java:84)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:774)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.access$3600(GeneralHighlightingPass.java:80)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass$10.run(GeneralHighlightingPass.java:777)
	at com.intellij.codeInsight.daemon.impl.RefCountHolder.analyze(RefCountHolder.java:238)
	at com.intellij.codeInsight.daemon.impl.analysis.HighlightVisitorImpl.analyze(HighlightVisitorImpl.java:135)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:774)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectHighlights(GeneralHighlightingPass.java:639)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectInformationWithProgress(GeneralHighlightingPass.java:204)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:58)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:61)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1$1.run(PassExecutorService.java:350)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1031)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass$1.run(PassExecutorService.java:342)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:206)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:340)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:316)
	at com.intellij.concurrency.JobUtil$3.call(JobUtil.java:134)
	at com.intellij.concurrency.JobUtil$3.call(JobUtil.java:131)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at com.intellij.concurrency.PrioritizedFutureTask.access$101(PrioritizedFutureTask.java:31)
	at com.intellij.concurrency.PrioritizedFutureTask$1.run(PrioritizedFutureTask.java:70)
	at com.intellij.concurrency.PrioritizedFutureTask.run(PrioritizedFutureTask.java:113)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)