Minimized from https://github.com/JetBrains/kotlin/blob/e20093d762ec7227cd3428d990cfa9a39bf4e279/core/descriptors.jvm/src/org/jetbrains/kotlin/load/java/AnnotationTypeQualifierResolver.kt#L86

```
fun get(map: Map<String, Int>, key: String?): Int? {
    return map[key]?.let { x ->
        return x
    }
}
```
->
```
4.kt:2:12: warning: returning type parameter has been inferred to Nothing implicitly because Nothing is more specific than specified expected type. Please specify type arguments explicitly in accordance with expected type to hide this warning. Nothing can produce an exception at runtime.
    return map[key]?.let { x ->
           ^
```
If `return x` is replaced by `x`, there's no warning.

To be honest, I don't understand the message of this warning, so I'm not even sure if it is meant to highlight some real problem in code. Maybe the diagnostic message should be shortened, with a "See KT-XXXXX for details" at the end, where the issue is explained in depth.