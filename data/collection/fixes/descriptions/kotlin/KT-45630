```
class EnumSerializer<T : Enum<T>>(val values: Array<T>)

private fun <T : Any> Class<T>.createEnumSerializer(): Any {
    return EnumSerializer(enumConstants as Array<out Enum<*>>)
}
```

1.4.30: OK
1.5.0-M1: OK

Current master, and for example 1.5.0-M2-417 (from [here](https://buildserver.labs.intellij.net/buildConfiguration/ijplatform_IjPlatform203_KotlinIdeArtifactLatestCompiler_1_5_0_MicroBranch?mode=builds)):
```
1.kt:4:27: error: type mismatch: inferred type is Enum<*> but CapturedType(out Enum<*>) was expected
    return EnumSerializer(enumConstants as Array<out Enum<*>>)
                          ^
1.kt:4:27: error: type mismatch: inferred type is Enum<*> but Nothing was expected
    return EnumSerializer(enumConstants as Array<out Enum<*>>)
                          ^
1.kt:4:27: error: type mismatch: inferred type is Enum<*> but Enum<CapturedType(out Enum<*>)> was expected
    return EnumSerializer(enumConstants as Array<out Enum<*>>)
                          ^
1.kt:4:27: error: type mismatch: inferred type is Enum<*> but Enum<in Enum<*>> was expected
    return EnumSerializer(enumConstants as Array<out Enum<*>>)
                          ^
1.kt:4:27: error: type mismatch: inferred type is Enum<*> but Enum<Nothing> was expected
    return EnumSerializer(enumConstants as Array<out Enum<*>>)
                          ^
```

This is directly minimized from this code in kotlinx.serialization: https://github.com/Kotlin/kotlinx.serialization/blob/6d2e5cfe173695647c359df307e4da9a280ff2e9/core/jvmMain/src/kotlinx/serialization/internal/Platform.kt#L122