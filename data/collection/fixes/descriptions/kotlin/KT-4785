{code}
trait Base<T> {
    fun foo(x: T)
}

open class Impl {
    protected fun foo(x: Any) {}
}

class Derived : Base<Any>, Impl()
{code}

{code}
EXCEPTION: java.lang.IllegalStateException: Cannot find declaration: fake descriptor inherited final fun foo(x: kotlin.Any): kotlin.Unit defined in Derived[SimpleFunctionDescriptorImpl@6e4ca0] has more than one overridden descriptor:
internal abstract fun foo(x: kotlin.Any): kotlin.Unit defined in Base[SimpleFunctionDescriptorImpl@3c6060d],
protected final fun foo(x: kotlin.Any): kotlin.Unit defined in Impl[SimpleFunctionDescriptorImpl@127fb654]
	at org.jetbrains.jet.lang.resolve.BindingContextUtils.callableDescriptorToDeclaration(BindingContextUtils.java:154)
	at org.jetbrains.jet.lang.resolve.BindingContextUtils.descriptorToDeclaration(BindingContextUtils.java:112)
	at org.jetbrains.jet.lang.resolve.OverrideResolver$2.cannotInferVisibility(OverrideResolver.java:175)
	at org.jetbrains.jet.lang.resolve.OverridingUtil.computeVisibilityToInherit(OverridingUtil.java:560)
	at org.jetbrains.jet.lang.resolve.OverridingUtil.resolveUnknownVisibilityForMember(OverridingUtil.java:537)
	at org.jetbrains.jet.lang.resolve.OverrideResolver.resolveUnknownVisibilityForMember(OverrideResolver.java:172)
	at org.jetbrains.jet.lang.resolve.OverrideResolver.resolveUnknownVisibilities(OverrideResolver.java:167)
	at org.jetbrains.jet.lang.resolve.OverrideResolver.generateOverridesInAClass(OverrideResolver.java:160)
	at org.jetbrains.jet.lang.resolve.OverrideResolver.generateOverridesAndDelegationInAClass(OverrideResolver.java:115)
	at org.jetbrains.jet.lang.resolve.OverrideResolver.generateOverridesAndDelegation(OverrideResolver.java:82)
	at org.jetbrains.jet.lang.resolve.OverrideResolver.process(OverrideResolver.java:62)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.doProcess(TopDownAnalyzer.java:302)
	at org.jetbrains.jet.lang.resolve.TopDownAnalyzer.analyzeFiles(TopDownAnalyzer.java:425)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacadeForJVM.analyzeFilesWithJavaIntegrationInGlobalContext(AnalyzerFacadeForJVM.java:239)
	at org.jetbrains.jet.lang.resolve.java.AnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(AnalyzerFacadeForJVM.java:212)
	at org.jetbrains.jet.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$2.invoke(KotlinToJVMBytecodeCompiler.java:271)
	at org.jetbrains.jet.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$2.invoke(KotlinToJVMBytecodeCompiler.java:264)
	at org.jetbrains.jet.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.java:225)
	at org.jetbrains.jet.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.java:263)
	at org.jetbrains.jet.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyzeAndGenerate(KotlinToJVMBytecodeCompiler.java:248)
	at org.jetbrains.jet.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileBunchOfSources(KotlinToJVMBytecodeCompiler.java:186)
	at org.jetbrains.jet.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:144)
	at org.jetbrains.jet.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:49)
	at org.jetbrains.jet.cli.common.CLICompiler.exec(CLICompiler.java:152)
	at org.jetbrains.jet.cli.common.CLICompiler.exec(CLICompiler.java:138)
	at org.jetbrains.jet.cli.common.CLICompiler.exec(CLICompiler.java:57)
	at org.jetbrains.jet.cli.common.CLICompiler.doMainNoExit(CLICompiler.java:226)
	at org.jetbrains.jet.cli.common.CLICompiler.doMain(CLICompiler.java:217)
	at org.jetbrains.jet.cli.jvm.K2JVMCompiler.main(K2JVMCompiler.java:53){code}
