{code}
enum class E{
    A
    B
}

class Outer(e: E) {
    private val prop: Int

    {
        when(e) {
            E.A -> { prop = 1 }
            E.B -> { prop = 2 }
        }
    }
}
{code}

It says that property is not intiialized and requires else branch in when.
But 

{code}
enum class E{
    A
    B
}

class Outer(e: E) {
    private val prop: Int =
        when(e) {
            E.A -> { 1 }
            E.B -> { 2 }
        }
}
{code}

compiles fine.
