{code}
trait B {
    fun getParent(): B?
}

class C : B {
    override fun getParent(): B? {
        throw UnsupportedOperationException()
    }

}

fun test(b1: B?) {
    var b = b1
    b?.getParent()
    if (b is C) {
        b?.getParent() // error on this line: can't smart-cast a var, but the cast is not needed!
    }
}
{code}