Using enum entry as type leads to a bunch of possible puzzling mistakes.

Examples:
{code}
fun main(args: Array<String>) {
    enum class E {
        A
        B
    }
    
    val c = E.A
    when (c) {
        is E.B -> println("Swear to god, it's B") // executes
    }
   
}
{code}
This example can't be fixed by compiling it correctly because not every enum entry has a class in runtime.

{code}
val e = E.A: E.A // Type mismatch
{code}

Using enum entry type (declaring extension and such) is useless, because there are no instances of this type. Enum entries have type of the enum itself.