{code}
class B<T> {
    public inner class C<S> 
    public class D<S> 
}

fun fn() {
    B<Int>().C<String>() // ok
    B<Int>().D<String>() // unresolved D, not an instance member
    B.C<String> // unresolved C, instance member
    B.D<String>() // ok

    val x1 : B<Int>.C<String> // ok
    val x2 : B<Int>.D<String> // should be error
    val x3 : B.C<String> // should be error
    val x4 : B.D<String> // ok
}
{code}