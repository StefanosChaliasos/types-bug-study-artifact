{code}
fun main(args: Array<String>) {
    val i = 0/0
    println(i)
}
{code}

Error:(401, 31) Kotlin: [Internal Error] org.jetbrains.jet.codegen.CompilationException: Back-end (JVM) Internal error: Error types are not allowed when classBuilderMode = FULL. Type: [ERROR : Division by zero] (ErrorTypeImpl). Descriptor: <ERROR CLASS>. For declaration null:null in null:null
Cause: Error types are not allowed when classBuilderMode = FULL. Type: [ERROR : Division by zero] (ErrorTypeImpl). Descriptor: <ERROR CLASS>. For declaration null:null in null:null
File being compiled and position: (401,31) in /Users/abreslav/work/kotlin/idea/src/org/jetbrains/jet/plugin/debugger/evaluate/KotlinEvaluationBuilder.kt
PsiElement: {
    val i = 0/0
    println(i)
}
The root cause was thrown at: JetTypeMapper.java:252
	at org.jetbrains.jet.codegen.ExpressionCodegen.genQualified(ExpressionCodegen.java:246)
	at org.jetbrains.jet.codegen.ExpressionCodegen.genQualified(ExpressionCodegen.java:217)
	at org.jetbrains.jet.codegen.ExpressionCodegen.gen(ExpressionCodegen.java:252)
	at org.jetbrains.jet.codegen.ExpressionCodegen.returnExpression(ExpressionCodegen.java:1642)
	at org.jetbrains.jet.codegen.FunctionGenerationStrategy$FunctionDefault.doGenerateBody(FunctionGenerationStrategy.java:66)
	at org.jetbrains.jet.codegen.FunctionGenerationStrategy$CodegenBased.generateBody(FunctionGenerationStrategy.java:88)
	at org.jetbrains.jet.codegen.FunctionCodegen.generateMethodBody(FunctionCodegen.java:314)
	at org.jetbrains.jet.codegen.FunctionCodegen.generateMethod(FunctionCodegen.java:167)
	at org.jetbrains.jet.codegen.FunctionCodegen.generateMethod(FunctionCodegen.java:118)
	at org.jetbrains.jet.codegen.FunctionCodegen.gen(FunctionCodegen.java:103)
	at org.jetbrains.jet.codegen.MemberCodegen.genFunctionOrProperty(MemberCodegen.java:120)
	at org.jetbrains.jet.codegen.PackagePartCodegen.generateBody(PackagePartCodegen.java:64)
	at org.jetbrains.jet.codegen.MemberCodegen.generate(MemberCodegen.java:90)
	at org.jetbrains.jet.codegen.PackageCodegen.generate(PackageCodegen.java:312)
	at org.jetbrains.jet.codegen.PackageCodegen.generate(PackageCodegen.java:207)
	at org.jetbrains.jet.codegen.KotlinCodegenFacade.generatePackage(KotlinCodegenFacade.java:80)
	at org.jetbrains.jet.codegen.KotlinCodegenFacade.compileCorrectFiles(KotlinCodegenFacade.java:67)
	at org.jetbrains.jet.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.generate(KotlinToJVMBytecodeCompiler.java:349)
	at org.jetbrains.jet.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules(KotlinToJVMBytecodeCompiler.java:138)
	at org.jetbrains.jet.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:143)
	at org.jetbrains.jet.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:53)
	at org.jetbrains.jet.cli.common.CLICompiler.exec(CLICompiler.java:139)
	at org.jetbrains.jet.cli.common.CLICompiler.exec(CLICompiler.java:125)
	at org.jetbrains.jet.cli.common.CLICompiler.exec(CLICompiler.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jetbrains.jet.compiler.runner.CompilerRunnerUtil.invokeExecMethod(CompilerRunnerUtil.java:129)
	at org.jetbrains.jet.compiler.runner.KotlinCompilerRunner.execCompiler(KotlinCompilerRunner.java:112)
	at org.jetbrains.jet.compiler.runner.KotlinCompilerRunner.access$000(KotlinCompilerRunner.java:40)
	at org.jetbrains.jet.compiler.runner.KotlinCompilerRunner$1.fun(KotlinCompilerRunner.java:95)
	at org.jetbrains.jet.compiler.runner.KotlinCompilerRunner$1.fun(KotlinCompilerRunner.java:92)
	at org.jetbrains.jet.compiler.runner.CompilerRunnerUtil.outputCompilerMessagesAndHandleExitCode(CompilerRunnerUtil.java:138)
	at org.jetbrains.jet.compiler.runner.KotlinCompilerRunner.runCompiler(KotlinCompilerRunner.java:92)
	at org.jetbrains.jet.compiler.runner.KotlinCompilerRunner.runK2JvmCompiler(KotlinCompilerRunner.java:58)
	at org.jetbrains.jet.jps.build.KotlinBuilder.build(KotlinBuilder.java:209)
	at org.jetbrains.jps.incremental.IncProjectBuilder.runModuleLevelBuilders(IncProjectBuilder.java:1108)
	at org.jetbrains.jps.incremental.IncProjectBuilder.runBuildersForChunk(IncProjectBuilder.java:815)
	at org.jetbrains.jps.incremental.IncProjectBuilder.buildTargetsChunk(IncProjectBuilder.java:863)
	at org.jetbrains.jps.incremental.IncProjectBuilder.buildChunkIfAffected(IncProjectBuilder.java:778)
	at org.jetbrains.jps.incremental.IncProjectBuilder.buildChunks(IncProjectBuilder.java:601)
	at org.jetbrains.jps.incremental.IncProjectBuilder.runBuild(IncProjectBuilder.java:353)
	at org.jetbrains.jps.incremental.IncProjectBuilder.build(IncProjectBuilder.java:185)
	at org.jetbrains.jps.cmdline.BuildRunner.runBuild(BuildRunner.java:129)
	at org.jetbrains.jps.cmdline.BuildSession.runBuild(BuildSession.java:224)
	at org.jetbrains.jps.cmdline.BuildSession.run(BuildSession.java:113)
	at org.jetbrains.jps.cmdline.BuildMain$MyMessageHandler$1.run(BuildMain.java:133)
	at org.jetbrains.jps.service.impl.SharedThreadPoolImpl$1.run(SharedThreadPoolImpl.java:41)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:695)
Caused by: java.lang.IllegalStateException: Error types are not allowed when classBuilderMode = FULL. Type: [ERROR : Division by zero] (ErrorTypeImpl). Descriptor: <ERROR CLASS>. For declaration null:null in null:null
	at org.jetbrains.jet.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:252)
	at org.jetbrains.jet.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:202)
	at org.jetbrains.jet.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:186)
	at org.jetbrains.jet.codegen.ExpressionCodegen.asmType(ExpressionCodegen.java:316)
	at org.jetbrains.jet.codegen.ExpressionCodegen.generateLocalVariableDeclaration(ExpressionCodegen.java:1455)
	at org.jetbrains.jet.codegen.ExpressionCodegen.generateBlock(ExpressionCodegen.java:1415)
	at org.jetbrains.jet.codegen.ExpressionCodegen.visitBlockExpression(ExpressionCodegen.java:1281)
	at org.jetbrains.jet.codegen.ExpressionCodegen.visitBlockExpression(ExpressionCodegen.java:87)
	at org.jetbrains.jet.lang.psi.JetBlockExpression.accept(JetBlockExpression.java:42)
	at org.jetbrains.jet.codegen.ExpressionCodegen.genQualified(ExpressionCodegen.java:236)
	... 54 more