{code}
class A {
    fun <T> get(thisRef: Any?, prop: PropertyMetadata): T = null!!
}

class B() {
    val x: Int by A() //error: Missing 'get(B, kotlin.PropertyMetadataImpl)' method on delegate of type 'A'
}
{code}

Also It would be nice if worked with extensions
{code}
class A {
}

fun <T> A.get(thisRef: Any?, prop: PropertyMetadata): T = null!!

class B() {
    val x: Int by A() //error: T can not be infered
}
{code}
