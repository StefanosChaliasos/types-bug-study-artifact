{code}
class A(val next: A? = null) {
    val x: String // should be mark as uninitialized?
    {
        next?.x = "a" // should not let re-assignment here?
    }
}

fun main(args: Array<String>) {
    print(A().x) // prints "null"
}
{code}

Maybe more practical example
{code}
class A(val next: A? = null) {
    var x: String = next?.x ?: "default" // doesn't let to use `x` of next
}
{code}