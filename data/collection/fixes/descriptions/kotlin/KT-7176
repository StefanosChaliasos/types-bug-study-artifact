This is a special case of KTIJ-3259

The current code still reports the "Reflection not found in the classpath" warning.
```
val list: List<(String, Int) -> String> = listOf(::repeat)
```

I'm not sure this is fixable since the analyzer probably evaluates the type of `listOf(::repeat)` before trying to coerce it to `List<(String, Int) -> String>`

I personally use a very convenient method pointer map in a class whose job is to interpret messages from a web socket.
The declaration looks like this (with a lot more entries):
```
val CONSUMERS: Map<String, Interpreter.(String, JsonObject) -> Unit> = mapOf(
        "sendChat"  to Interpreter::sendChat,
        "setTyping" to Interpreter::setTyping
    )
```

Since the update, my Interpreter.kt file is flooded with warnings.

I haven't found a way to disable the warning locally (if there is, the intention action menu is not proposing it).
I think that since this issue is probably not fixable in the analyzer, there should be a way to disable the warning locally.
