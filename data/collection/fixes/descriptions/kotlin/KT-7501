I got this exception from the 0.11.742 compiler, but after rebuild it disappeared :(

{code}
Error:Kotlin: [Internal Error] java.lang.AssertionError: Exception while analyzing expression at (56,37) in /Users/udalov/kotlin/core/descriptors/src/org/jetbrains/kotlin/builtins/BuiltinsPackageFragment.kt:
memberScope()
	at com.intellij.openapi.diagnostic.DefaultLogger.error(DefaultLogger.java:66)
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:130)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:185)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:108)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:114)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getBodyExpressionType(ExpressionTypingServices.java:295)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver$initializeFunctionReturnTypeBasedOnFunctionBody$returnType$1.invoke(FunctionDescriptorResolver.kt:118)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver$initializeFunctionReturnTypeBasedOnFunctionBody$returnType$1.invoke(FunctionDescriptorResolver.kt:48)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:314)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:355)
	at org.jetbrains.kotlin.types.DeferredType.getDelegate(DeferredType.java:86)
	at org.jetbrains.kotlin.types.DelegatingType.getCapability(DelegatingType.java:71)
	at org.jetbrains.kotlin.types.TypesPackage$TypeCapabilities$065d5a65.sameTypeConstructors(TypeCapabilities.kt:74)
	at org.jetbrains.kotlin.types.TypesPackage.sameTypeConstructors(Unknown Source)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.isSubtypeOf(TypeCheckingProcedure.java:190)
	at org.jetbrains.kotlin.types.checker.JetTypeChecker.isSubtypeOf(JetTypeChecker.java:55)
	at org.jetbrains.kotlin.resolve.OverrideResolver.isReturnTypeOkForOverride(OverrideResolver.java:641)
	at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverridesForMemberMarkedOverride(OverrideResolver.java:601)
	at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverrideForMember(OverrideResolver.java:529)
	at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverridesInAClass(OverrideResolver.java:269)
	at org.jetbrains.kotlin.resolve.OverrideResolver.checkOverrides(OverrideResolver.java:260)
	at org.jetbrains.kotlin.resolve.OverrideResolver.check(OverrideResolver.java:67)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.java:299)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeDeclarations(LazyTopDownAnalyzerForTopLevel.java:77)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzerForTopLevel.analyzeFiles(LazyTopDownAnalyzerForTopLevel.java:69)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.java:147)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegrationWithCustomContext(TopDownAnalyzerFacadeForJVM.java:100)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$2.invoke(KotlinToJVMBytecodeCompiler.java:316)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$2.invoke(KotlinToJVMBytecodeCompiler.java:309)
	at org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.java:232)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.java:308)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules(KotlinToJVMBytecodeCompiler.java:130)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:178)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.java:53)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:148)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:128)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execAndOutputXml(CLICompiler.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jetbrains.kotlin.compilerRunner.CompilerRunnerUtil.invokeExecMethod(CompilerRunnerUtil.java:92)
	at org.jetbrains.kotlin.compilerRunner.KotlinCompilerRunner.execCompiler(KotlinCompilerRunner.java:120)
	at org.jetbrains.kotlin.compilerRunner.KotlinCompilerRunner.runCompiler(KotlinCompilerRunner.java:95)
	at org.jetbrains.kotlin.compilerRunner.KotlinCompilerRunner.runK2JvmCompiler(KotlinCompilerRunner.java:63)
	at org.jetbrains.kotlin.jps.build.KotlinBuilder.compileToJvm(KotlinBuilder.kt:467)
	at org.jetbrains.kotlin.jps.build.KotlinBuilder.doCompileModuleChunk(KotlinBuilder.kt:233)
	at org.jetbrains.kotlin.jps.build.KotlinBuilder.build(KotlinBuilder.kt:134)
	at org.jetbrains.jps.incremental.IncProjectBuilder.runModuleLevelBuilders(IncProjectBuilder.java:1170)
	at org.jetbrains.jps.incremental.IncProjectBuilder.runBuildersForChunk(IncProjectBuilder.java:846)
	at org.jetbrains.jps.incremental.IncProjectBuilder.buildTargetsChunk(IncProjectBuilder.java:919)
	at org.jetbrains.jps.incremental.IncProjectBuilder.buildChunkIfAffected(IncProjectBuilder.java:814)
	at org.jetbrains.jps.incremental.IncProjectBuilder.buildChunks(IncProjectBuilder.java:637)
	at org.jetbrains.jps.incremental.IncProjectBuilder.runBuild(IncProjectBuilder.java:370)
	at org.jetbrains.jps.incremental.IncProjectBuilder.build(IncProjectBuilder.java:191)
	at org.jetbrains.jps.cmdline.BuildRunner.runBuild(BuildRunner.java:137)
	at org.jetbrains.jps.cmdline.BuildSession.runBuild(BuildSession.java:293)
	at org.jetbrains.jps.cmdline.BuildSession.run(BuildSession.java:124)
	at org.jetbrains.jps.cmdline.BuildMain$MyMessageHandler$1.run(BuildMain.java:242)
	at org.jetbrains.jps.service.impl.SharedThreadPoolImpl$1.run(SharedThreadPoolImpl.java:41)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:695)
Caused by: java.lang.AssertionError: Exception while analyzing expression at (48,31) in /Users/udalov/kotlin/core/descriptors/src/org/jetbrains/kotlin/builtins/BuiltinsPackageFragment.kt:
storageManager.createLazyValue {
        val stream = loadResourceSure(BuiltInsSerializationUtil.getPackageFilePath(fqName))
        val proto = ProtoBuf.Package.parseFrom(stream, BuiltInsSerializationUtil.EXTENSION_REGISTRY)
        DeserializedPackageMemberScope(this, proto, nameResolver, components, classNames = {
            proto.getExtension(BuiltInsProtoBuf.className)?.map { id -> nameResolver.getName(id) } ?: listOf()
        })
    }
	at com.intellij.openapi.diagnostic.DefaultLogger.error(DefaultLogger.java:66)
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:130)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:185)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:108)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:184)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getType(ExpressionTypingServices.java:200)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.safeGetType(ExpressionTypingServices.java:171)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolveInitializerType(DescriptorResolver.java:945)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.access$200(DescriptorResolver.java:66)
	at org.jetbrains.kotlin.resolve.DescriptorResolver$2.invoke(DescriptorResolver.java:835)
	at org.jetbrains.kotlin.resolve.DescriptorResolver$2.invoke(DescriptorResolver.java:832)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:314)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:355)
	at org.jetbrains.kotlin.types.DeferredType.getDelegate(DeferredType.java:86)
	at org.jetbrains.kotlin.types.DelegatingType.getCapability(DelegatingType.java:71)
	at org.jetbrains.kotlin.types.TypesPackage$dynamicTypes$18e465db.isDynamic(dynamicTypes.kt:42)
	at org.jetbrains.kotlin.resolve.calls.tasks.TaskPrioritizer.addCandidatesForExplicitReceiver(TaskPrioritizer.kt:133)
	at org.jetbrains.kotlin.resolve.calls.tasks.TaskPrioritizer.addCandidatesForInvoke(TaskPrioritizer.kt:295)
	at org.jetbrains.kotlin.resolve.calls.tasks.TaskPrioritizer.doComputeTasks(TaskPrioritizer.kt:113)
	at org.jetbrains.kotlin.resolve.calls.tasks.TaskPrioritizer.computePrioritizedTasks(TaskPrioritizer.kt:78)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:181)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.resolveCallForInvoke(CallResolver.java:156)
	at org.jetbrains.kotlin.resolve.calls.CallTransformer$1.transformCall(CallTransformer.java:242)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.performResolution(CallResolver.java:617)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.performResolutionGuardedForExtraFunctionLiteralArguments(CallResolver.java:548)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.doResolveCall(CallResolver.java:499)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:424)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:182)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:170)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:246)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.java:79)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.java:194)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfo(CallExpressionResolver.java:173)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:805)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:91)
	at org.jetbrains.kotlin.psi.JetCallExpression.accept(JetCallExpression.java:35)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:271)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:39)
	at org.jetbrains.kotlin.psi.JetVisitor.visitExpression(JetVisitor.java:166)
	at org.jetbrains.kotlin.psi.JetVisitor.visitReferenceExpression(JetVisitor.java:182)
	at org.jetbrains.kotlin.psi.JetVisitor.visitCallExpression(JetVisitor.java:258)
	at org.jetbrains.kotlin.psi.JetCallExpression.accept(JetCallExpression.java:35)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:141)
	... 63 more
Caused by: java.lang.AssertionError: Exception while analyzing expression at (48,62) in /Users/udalov/kotlin/core/descriptors/src/org/jetbrains/kotlin/builtins/BuiltinsPackageFragment.kt:
{
        val stream = loadResourceSure(BuiltInsSerializationUtil.getPackageFilePath(fqName))
        val proto = ProtoBuf.Package.parseFrom(stream, BuiltInsSerializationUtil.EXTENSION_REGISTRY)
        DeserializedPackageMemberScope(this, proto, nameResolver, components, classNames = {
            proto.getExtension(BuiltInsProtoBuf.className)?.map { id -> nameResolver.getName(id) } ?: listOf()
        })
    }
	at com.intellij.openapi.diagnostic.DefaultLogger.error(DefaultLogger.java:66)
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:130)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:185)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:108)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:189)
	at org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver.getFunctionLiteralTypeInfo(ArgumentTypeResolver.java:219)
	at org.jetbrains.kotlin.resolve.calls.CandidateResolver.addConstraintForFunctionLiteral(CandidateResolver.java:332)
	at org.jetbrains.kotlin.resolve.calls.CandidateResolver.completeTypeInferenceDependentOnFunctionLiteralsForCall(CandidateResolver.java:274)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.completeTypeInferenceDependentOnFunctionLiterals(CallResolver.java:456)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:429)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:182)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:170)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:246)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.java:79)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.java:194)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getSelectorReturnTypeInfo(CallExpressionResolver.java:263)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getQualifiedExpressionTypeInfo(CallExpressionResolver.java:329)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:799)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:91)
	at org.jetbrains.kotlin.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:282)
	at org.jetbrains.kotlin.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:271)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:39)
	at org.jetbrains.kotlin.psi.JetVisitor.visitExpression(JetVisitor.java:166)
	at org.jetbrains.kotlin.psi.JetVisitor.visitQualifiedExpression(JetVisitor.java:266)
	at org.jetbrains.kotlin.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:282)
	at org.jetbrains.kotlin.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:141)
	... 103 more
Caused by: java.lang.AssertionError: Exception while analyzing expression at (50,9) in /Users/udalov/kotlin/core/descriptors/src/org/jetbrains/kotlin/builtins/BuiltinsPackageFragment.kt:
val proto = ProtoBuf.Package.parseFrom(stream, BuiltInsSerializationUtil.EXTENSION_REGISTRY)
	at com.intellij.openapi.diagnostic.DefaultLogger.error(DefaultLogger.java:66)
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:130)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:185)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:116)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getBlockReturnedTypeWithWritableScope(ExpressionTypingServices.java:340)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getBlockReturnedType(ExpressionTypingServices.java:268)
	at org.jetbrains.kotlin.types.expressions.FunctionsTypingVisitor.computeUnsafeReturnType(FunctionsTypingVisitor.kt:199)
	at org.jetbrains.kotlin.types.expressions.FunctionsTypingVisitor.computeReturnType(FunctionsTypingVisitor.kt:168)
	at org.jetbrains.kotlin.types.expressions.FunctionsTypingVisitor.visitFunctionLiteralExpression(FunctionsTypingVisitor.kt:135)
	at org.jetbrains.kotlin.types.expressions.FunctionsTypingVisitor.visitFunctionLiteralExpression(FunctionsTypingVisitor.kt:46)
	at org.jetbrains.kotlin.psi.JetFunctionLiteralExpression.accept(JetFunctionLiteralExpression.java:34)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitFunctionLiteralExpression(ExpressionTypingVisitorDispatcher.java:200)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitFunctionLiteralExpression(ExpressionTypingVisitorDispatcher.java:39)
	at org.jetbrains.kotlin.psi.JetFunctionLiteralExpression.accept(JetFunctionLiteralExpression.java:34)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:141)
	... 128 more
Caused by: java.lang.AssertionError: Exception while analyzing expression at (50,21) in /Users/udalov/kotlin/core/descriptors/src/org/jetbrains/kotlin/builtins/BuiltinsPackageFragment.kt:
ProtoBuf.Package.parseFrom(stream, BuiltInsSerializationUtil.EXTENSION_REGISTRY)
	at com.intellij.openapi.diagnostic.DefaultLogger.error(DefaultLogger.java:66)
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:130)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:185)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:108)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getTypeInfo(ExpressionTypingServices.java:184)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getType(ExpressionTypingServices.java:200)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.safeGetType(ExpressionTypingServices.java:171)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolveInitializerType(DescriptorResolver.java:945)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.getVariableType(DescriptorResolver.java:843)
	at org.jetbrains.kotlin.resolve.DescriptorResolver.resolveLocalVariableDescriptor(DescriptorResolver.java:661)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorForStatements.visitProperty(ExpressionTypingVisitorForStatements.java:135)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorForStatements.visitProperty(ExpressionTypingVisitorForStatements.java:59)
	at org.jetbrains.kotlin.psi.JetProperty.accept(JetProperty.java:57)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:141)
	... 140 more
Caused by: java.lang.IllegalArgumentException: incorrect fq name: com.google.protobuf.GeneratedMessageLite.ExtendableMessage<Package>
	at org.jetbrains.kotlin.name.FqName.validateFqName(FqName.java:62)
	at org.jetbrains.kotlin.name.FqName.<init>(FqName.java:43)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinCliJavaFileManagerImpl.findPackage(KotlinCliJavaFileManagerImpl.kt:81)
	at com.intellij.psi.impl.PsiElementFinderImpl.findPackage(PsiElementFinderImpl.java:65)
	at com.intellij.psi.impl.JavaPsiFacadeImpl.findPackage(JavaPsiFacadeImpl.java:185)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:444)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:463)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.access$100(PsiJavaCodeReferenceElementImpl.java:55)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:339)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:331)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:191)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:188)
	at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:188)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:767)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:757)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.multiResolve(PsiJavaCodeReferenceElementImpl.java:366)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.advancedResolve(PsiJavaCodeReferenceElementImpl.java:359)
	at com.intellij.psi.impl.source.PsiClassReferenceType.resolveGenerics(PsiClassReferenceType.java:141)
	at com.intellij.psi.util.PsiUtil.captureToplevelWildcards(PsiUtil.java:718)
	at com.intellij.psi.impl.PsiClassImplUtil.getSuperTypes(PsiClassImplUtil.java:908)
	at com.intellij.psi.impl.source.PsiClassImpl.getSuperTypes(PsiClassImpl.java:249)
	at com.intellij.psi.impl.PsiClassImplUtil.processSuperTypes(PsiClassImplUtil.java:774)
	at com.intellij.psi.impl.PsiClassImplUtil.processDeclarationsInClassNotCached(PsiClassImplUtil.java:709)
	at com.intellij.psi.impl.PsiClassImplUtil.processDeclarationsInClass(PsiClassImplUtil.java:478)
	at com.intellij.psi.impl.PsiClassImplUtil.processDeclarationsInClass(PsiClassImplUtil.java:448)
	at com.intellij.psi.impl.source.PsiClassImpl.processDeclarations(PsiClassImpl.java:488)
	at com.intellij.psi.scope.util.PsiScopesUtil.treeWalkUp(PsiScopesUtil.java:72)
	at com.intellij.psi.scope.util.PsiScopesUtil.treeWalkUp(PsiScopesUtil.java:54)
	at com.intellij.psi.scope.util.PsiScopesUtil.resolveAndWalk(PsiScopesUtil.java:215)
	at com.intellij.psi.scope.util.PsiScopesUtil.resolveAndWalk(PsiScopesUtil.java:146)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:438)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:454)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.access$100(PsiJavaCodeReferenceElementImpl.java:55)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:339)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:331)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:191)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:188)
	at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:188)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:767)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:757)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.multiResolve(PsiJavaCodeReferenceElementImpl.java:366)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.advancedResolve(PsiJavaCodeReferenceElementImpl.java:359)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:328)
	at com.intellij.psi.impl.source.resolve.ClassResolverProcessor.<init>(ClassResolverProcessor.java:65)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:437)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:454)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.access$100(PsiJavaCodeReferenceElementImpl.java:55)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:339)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:331)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:191)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:188)
	at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:188)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:767)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:757)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.multiResolve(PsiJavaCodeReferenceElementImpl.java:366)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.advancedResolve(PsiJavaCodeReferenceElementImpl.java:359)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:328)
	at com.intellij.psi.impl.source.resolve.ClassResolverProcessor.<init>(ClassResolverProcessor.java:65)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:437)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:454)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.access$100(PsiJavaCodeReferenceElementImpl.java:55)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:339)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:331)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:191)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:188)
	at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:188)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:767)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:757)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.multiResolve(PsiJavaCodeReferenceElementImpl.java:366)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.advancedResolve(PsiJavaCodeReferenceElementImpl.java:359)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:328)
	at com.intellij.psi.impl.source.resolve.ClassResolverProcessor.<init>(ClassResolverProcessor.java:65)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:437)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.access$100(PsiJavaCodeReferenceElementImpl.java:55)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:339)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:331)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:191)
	at com.intellij.psi.impl.source.resolve.ResolveCache$4.compute(ResolveCache.java:188)
	at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:188)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:767)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:757)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.multiResolve(PsiJavaCodeReferenceElementImpl.java:366)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.advancedResolve(PsiJavaCodeReferenceElementImpl.java:359)
	at com.intellij.psi.impl.source.PsiClassReferenceType.resolveGenerics(PsiClassReferenceType.java:141)
	at org.jetbrains.kotlin.load.java.structure.impl.JavaClassifierTypeImpl.resolve(JavaClassifierTypeImpl.java:61)
	at org.jetbrains.kotlin.load.java.structure.impl.JavaClassifierTypeImpl.getClassifier(JavaClassifierTypeImpl.java:48)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver$LazyJavaClassifierType$classifier$1.invoke(LazyJavaTypeResolver.kt:117)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver$LazyJavaClassifierType$classifier$1.invoke(LazyJavaTypeResolver.kt:112)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:314)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver$LazyJavaClassifierType.computeTypeConstructor(LazyJavaTypeResolver.kt:120)
	at org.jetbrains.kotlin.types.AbstractLazyType$typeConstructor$1.invoke(AbstractLazyType.kt:25)
	at org.jetbrains.kotlin.types.AbstractLazyType$typeConstructor$1.invoke(AbstractLazyType.kt:23)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:314)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:355)
	at org.jetbrains.kotlin.types.AbstractLazyType.getConstructor(AbstractLazyType.kt:26)
	at org.jetbrains.kotlin.types.AbstractLazyType.isError(AbstractLazyType.kt:42)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.isSubtypeOfForRepresentatives(TypeCheckingProcedure.java:203)
	at org.jetbrains.kotlin.types.checker.TypeCheckingProcedure.isSubtypeOf(TypeCheckingProcedure.java:199)
	at org.jetbrains.kotlin.types.checker.JetTypeChecker.isSubtypeOf(JetTypeChecker.java:55)
	at org.jetbrains.kotlin.types.DelegatingFlexibleType.<init>(flexibleTypes.kt:206)
	at org.jetbrains.kotlin.types.DelegatingFlexibleType$Companion.create(flexibleTypes.kt:151)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver$FlexibleJavaClassifierTypeCapabilities.create(LazyJavaTypeResolver.kt:293)
	at org.jetbrains.kotlin.load.java.lazy.types.LazyJavaTypeResolver.transformJavaType(LazyJavaTypeResolver.kt:65)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaMemberScope.resolveValueParameters(LazyJavaMemberScope.kt:180)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaMemberScope.resolveMethodToFunctionDescriptor(LazyJavaMemberScope.kt:120)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaMemberScope$functions$1.invoke(LazyJavaMemberScope.kt:81)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaMemberScope$functions$1.invoke(LazyJavaMemberScope.kt:50)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:385)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:434)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaMemberScope.getFunctions(LazyJavaMemberScope.kt:218)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaMemberScope.getFunctions(LazyJavaMemberScope.kt:50)
	at org.jetbrains.kotlin.resolve.scopes.JetScopeSelectorUtil$4.get(JetScopeSelectorUtil.java:83)
	at org.jetbrains.kotlin.resolve.scopes.JetScopeSelectorUtil.getFromAllScopes(JetScopeSelectorUtil.java:123)
	at org.jetbrains.kotlin.resolve.scopes.ChainedScope.getFunctions(ChainedScope.kt:46)
	at org.jetbrains.kotlin.resolve.scopes.ChainedScope.getFunctions(ChainedScope.kt:25)
	at org.jetbrains.kotlin.resolve.calls.tasks.collectors.FunctionCollector.getNonExtensionsByName(CallableDescriptorCollectors.kt:71)
	at org.jetbrains.kotlin.resolve.calls.tasks.collectors.CollectorsPackage$CallableDescriptorCollectors$50805b7c$filtered$2.getNonExtensionsByName(CallableDescriptorCollectors.kt:164)
	at org.jetbrains.kotlin.resolve.calls.tasks.TaskPrioritizer.addCandidatesForNoReceiver(TaskPrioritizer.kt:249)
	at org.jetbrains.kotlin.resolve.calls.tasks.TaskPrioritizer.doComputeTasks(TaskPrioritizer.kt:122)
	at org.jetbrains.kotlin.resolve.calls.tasks.TaskPrioritizer.computePrioritizedTasks(TaskPrioritizer.kt:74)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:181)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:170)
	at org.jetbrains.kotlin.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:246)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.java:79)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.java:194)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getSelectorReturnTypeInfo(CallExpressionResolver.java:263)
	at org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getQualifiedExpressionTypeInfo(CallExpressionResolver.java:329)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:799)
	at org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitQualifiedExpression(BasicExpressionTypingVisitor.java:91)
	at org.jetbrains.kotlin.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:282)
	at org.jetbrains.kotlin.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:271)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitJetElement(ExpressionTypingVisitorDispatcher.java:39)
	at org.jetbrains.kotlin.psi.JetVisitor.visitExpression(JetVisitor.java:166)
	at org.jetbrains.kotlin.psi.JetVisitor.visitQualifiedExpression(JetVisitor.java:266)
	at org.jetbrains.kotlin.psi.JetVisitor.visitDotQualifiedExpression(JetVisitor.java:282)
	at org.jetbrains.kotlin.psi.JetDotQualifiedExpression.accept(JetDotQualifiedExpression.java:44)
	at org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:141)
	... 151 more{code}
