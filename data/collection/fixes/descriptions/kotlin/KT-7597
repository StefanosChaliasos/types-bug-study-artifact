{code}
trait Inv<I>

fun <S, T: S> Inv<T>.reduce2(): S = null!!

fun test(a: Inv<Int>): Int {
    val b = 1 + a.reduce2()
    return b
}
{code}
Webdemo: http://try.kotlinlang.org/#/UserProjects/1173989613471765633502032441762/117398961347176563350-1725724863

org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Error type encountered: [ERROR : Type for 1 + a.reduce2()] (ErrorTypeImpl). One of the possible reasons may be that this type is not directly accessible from this module. To workaround this error, try adding an explicit dependency on the module or library which contains this type to the classpath
Cause: Error type encountered: [ERROR : Type for 1 + a.reduce2()] (ErrorTypeImpl). One of the possible reasons may be that this type is not directly accessible from this module. To workaround this error, try adding an explicit dependency on the module or library which contains this type to the classpath
File being compiled and position: (5,28) in /Test.kt
PsiElement: {
    val b = 1 + a.reduce2()
    return b
}
The root cause was thrown at: JetTypeMapper.java:277
at org.jetbrains.kotlin.codegen.ExpressionCodegen.genQualified(ExpressionCodegen.java:295)
at org.jetbrains.kotlin.codegen.ExpressionCodegen.genStatement(ExpressionCodegen.java:315)
at org.jetbrains.kotlin.codegen.ExpressionCodegen.gen(ExpressionCodegen.java:305)
at org.jetbrains.kotlin.codegen.ExpressionCodegen.returnExpression(ExpressionCodegen.java:1851)
...