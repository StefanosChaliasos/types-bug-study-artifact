{code}
class TestClass(var prop: Int)
open class OtherClass
fun OtherClass.test(prop: KMemberProperty<TestClass, Int>): Unit = throw Exception()
class OtherClass2: OtherClass() {
    val result = test(TestClass::result) // error here
}
{code}
expected "Property TestClass.result does not exists"
actual: Error:(156, 23) Kotlin: Type checking has run into a recursive problem. Easiest workaround: specify types of your declarations explicitly