Java file:
{code}
package module1;

public abstract class AbstractModule {
    protected abstract void configure();
    protected <T> void bind(Class<T> clazz) {}
    public final synchronized void doConfigure() {
        configure();
    }
}
{code}

Kotlin file:
{code}
package module2

import module1.*

public class AppServiceModule : AbstractModule() {
    inline fun <reified T> AbstractModule.bind() = bind(javaClass<T>())
    override fun configure() = bind<String>()
}

fun main(args: Array<String>) {
    AppServiceModule().doConfigure()
}
{code}