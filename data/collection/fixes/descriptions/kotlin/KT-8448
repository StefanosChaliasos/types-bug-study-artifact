{code}
fun foo() = ::foo
{code}

{code}
java.lang.StackOverflowError
	at org.jetbrains.kotlin.types.ErrorUtils.isErrorClass(ErrorUtils.java:389)
	at org.jetbrains.kotlin.types.ErrorUtils.isError(ErrorUtils.java:385)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getFqNameSafeIfPossible(DescriptorUtils.java:101)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getFqName(DescriptorUtils.java:88)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getFqNameUnsafe(DescriptorUtils.java:119)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getFqName(DescriptorUtils.java:89)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapBuiltinType(JetTypeMapper.java:370)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:272)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:262)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.writeGenericType(JetTypeMapper.java:486)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapKnownAsmType(JetTypeMapper.java:534)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:281)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:262)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.writeGenericType(JetTypeMapper.java:486)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapKnownAsmType(JetTypeMapper.java:534)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:281)
	at org.jetbrains.kotlin.codegen.state.JetTypeMapper.mapType(JetTypeMapper.java:262)
{code}
