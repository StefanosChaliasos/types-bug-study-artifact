Compile and run:

``` kotlin
class X {
    class A(val s : String = super.toString())
}

fun main(args: Array<String>) {
    X.A()
}
```

``` text
Exception in thread "main" java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    X$A.<init>(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V @8: invokespecial
  Reason:
    Type uninitializedThis (current frame, stack[1]) is not assignable to 'X$A'
  Current Frame:
    bci: @8
    flags: { flagThisUninit }
    locals: { uninitializedThis, 'java/lang/String', integer, 'kotlin/jvm/internal/DefaultConstructorMarker' }
    stack: { uninitializedThis, uninitializedThis }
  Bytecode:
    0x0000000: 2a1c 047e 9900 082a b700 204c 2bb7 0022
    0x0000010: b1                                     
  Stackmap Table:
    same_locals_1_stack_item_frame(@12,UninitializedThis)

	at _DefaultPackage$K$2b1b479f.main(K.kt:6)
	at _DefaultPackage.main(K.kt:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
```