The following Kotlin code compiles:
{code lang=kt}
abstract class CAA {
    abstract fun foo()
}

interface IA {
    fun foo() {}
}

class CB : CAA(), IA
// CB#foo() resolves to IA#foo() at run-time
{code}

Corresponding Java 8 code doesn't compile (class CB should implement abstract method `foo`).

JVM 8 loads such classes (with default methods on interfaces), but `CB#foo` resolves to `CAA#foo` at run-time (with `AbstractMethodError`).

Should be an error in Kotlin 1.0.