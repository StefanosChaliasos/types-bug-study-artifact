$ cat abc.scala
```
object Test {
  val v: Array[Array[Array]] = Array()
  def f[T](w: Array[Array[T]]) = { for (r <- w) () }
  f(v)
}

```




$ dotc abc.scala
```

exception occurred while typechecking abc.scala

exception occurred while compiling abc.scala
Exception in thread "main" java.lang.AssertionError: assertion failed: bad inst T := X0, constr = Constraint(
 uninstVars = T, T;
 constrained types =
  [dotty$DottyPredef$arrayTag$$T] => (implicit ctag: scala.reflect.ClassTag[T])scala.reflect.ClassTag[Array[T]]
, [dotty$DottyPredef$arrayTag$$T] => (implicit ctag: scala.reflect.ClassTag[T])scala.reflect.ClassTag[Array[T]]
 bounds =
     T >: [X0] => Array[X0] <: Array[T]
     T = X0
 ordering =
)
	at scala.Predef$.assert(Predef.scala:165)
	at dotty.tools.dotc.core.Types$TypeVar.instantiate(Types.scala:2917)
	at dotty.tools.dotc.typer.Inferencing$IsFullyDefinedAccumulator.dotty$tools$dotc$typer$Inferencing$IsFullyDefinedAccumulator$$instantiate(Inferencing.scala:73)
	at dotty.tools.dotc.typer.Inferencing$IsFullyDefinedAccumulator.apply(Inferencing.scala:95)
	at dotty.tools.dotc.typer.Inferencing$IsFullyDefinedAccumulator.process(Inferencing.scala:116)
	at dotty.tools.dotc.typer.Inferencing$.isFullyDefined(Inferencing.scala:35)
	at dotty.tools.dotc.typer.Inferencing$.fullyDefinedType(Inferencing.scala:44)
	at dotty.tools.dotc.typer.Implicits$class.synthesizedClassTag(Implicits.scala:486)
	at dotty.tools.dotc.typer.Typer.synthesizedClassTag(Typer.scala:62)
	at dotty.tools.dotc.typer.Implicits$class.inferImplicitArg(Implicits.scala:459)
	at dotty.tools.dotc.typer.Typer.inferImplicitArg(Typer.scala:62)
	at dotty.tools.dotc.typer.Typer$$anonfun$36.apply(Typer.scala:1765)
<snipped>
```