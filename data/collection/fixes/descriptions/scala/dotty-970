```
$ cat B.scala
object B{
  def main(args: Array[String]): Unit = {
    val s = List(1,2,3)
    ()
  }
}

$ dotc ./scala-scala/src/library/scala/collection/immutable/Seq.scala ./scala-scala/src/library/scala/package.scala ./scala-scala/src/library/scala/collection/GenSeqLike.scala ./scala-scala/src/library/scala/collection/SeqLike.scala ./scala-scala/src/library/scala/collection/generic/GenSeqFactory.scala B.scala
./scala-scala/src/library/scala/collection/SeqLike.scala:62: error: cyclic reference involving trait ParSeq
trait SeqLike[+A, +Repr] extends Any with IterableLike[A, Repr] with GenSeqLike[A, Repr] with Parallelizable[A, ParSeq[A]] { self =>
                                                                                                                ^
```

If `B.scala` is removed from compilation list, cyclic reference error is not triggered anymore.
