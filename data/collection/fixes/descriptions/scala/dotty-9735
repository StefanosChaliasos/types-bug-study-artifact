## Minimized code

```Scala
trait Two[A, B]

opaque type U[A] = [B] =>> Two[A, B] // compiles fine
opaque type T[A] = [B] =>> String // error :(
```

## Output

```scala
package object main$package cannot be instantiated since it has a member T with possibly conflicting bounds LazyRef([A] =>> [B] =>> String) <: ... <: [X0] =>> String
```

## Expectation

Not sure if the second definition is correct, but error message is confusing anyway