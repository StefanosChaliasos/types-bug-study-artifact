They have a bit of an existential crisis:

```
scala> final class Me[X](val mine: X) extends AnyVal
defined class Me

scala> classOf[Me[Int]]
res0: Class[Me[Int]] = class Me

scala> classOf[Me[String]]
res1: Class[Me[String]] = class Me

scala> classOf[Me[_]]
res2: Class[Me[_]] = class java.lang.Object
```

The fact that the literal type in the last example is an `ExistentialType` rather than a `TypeRef` tricks erasure into erasing it to an `ErasedValueType`.