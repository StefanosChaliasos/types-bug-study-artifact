Possibly related: https://github.com/scala/bug/issues/10668

```
Welcome to Scala 2.11.8 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_151).
Type in expressions for evaluation. Or try :help.

scala> :paste
// Entering paste mode (ctrl-D to finish)

case class BreakImpl(a: String)(b: String)(implicit c: String) {
  def self: this.type  = this
}

object Test extends App {

  val break = BreakImpl("")("")("")

  break match {
    case b@BreakImpl(s) => b(null)
  }
}

// Exiting paste mode, now interpreting.

exception when typing x1(null)/class scala.reflect.internal.Trees$Apply
BreakImpl does not take parameters in file <console>
scala.reflect.internal.Types$TypeError: BreakImpl does not take parameters
	at scala.tools.nsc.typechecker.Contexts$ThrowingReporter.handleError(Contexts.scala:1402)
	at scala.tools.nsc.typechecker.Contexts$ContextReporter.issue(Contexts.scala:1254)
	at scala.tools.nsc.typechecker.Contexts$Context.issue(Contexts.scala:573)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$duplErrorTree$1(Typers.scala:3214)
	at scala.tools.nsc.typechecker.Typers$Typer.doTypedApply(Typers.scala:3551)
	at scala.tools.nsc.typechecker.Typers$Typer.normalTypedApply$1(Typers.scala:4546)
	at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:4580)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5343)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedArg(Typers.scala:3164)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$class.typedArgWithFormal$1(PatternTypers.scala:112)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$$anonfun$2.apply(PatternTypers.scala:115)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$$anonfun$2.apply(PatternTypers.scala:115)
	at scala.runtime.Tuple2Zipped$$anonfun$map$extension$1.apply(Tuple2Zipped.scala:46)
	at scala.runtime.Tuple2Zipped$$anonfun$map$extension$1.apply(Tuple2Zipped.scala:44)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.runtime.Tuple2Zipped$.map$extension(Tuple2Zipped.scala:44)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$class.typedArgsForFormals(PatternTypers.scala:115)
	at scala.tools.nsc.typechecker.Typers$Typer.typedArgsForFormals(Typers.scala:111)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$handleMonomorphicCall$1(Typers.scala:3470)
	at scala.tools.nsc.typechecker.Typers$Typer.doTypedApply(Typers.scala:3495)
	at scala.tools.nsc.typechecker.Typers$Typer.normalTypedApply$1(Typers.scala:4546)
	at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:4580)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5343)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5463)
	at scala.tools.nsc.typechecker.Typers$Typer.typedIf$1(Typers.scala:4255)
	at scala.tools.nsc.typechecker.Typers$Typer.typedOutsidePatternMode$1(Typers.scala:5319)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5353)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5463)
	at scala.tools.nsc.typechecker.Typers$Typer.typedLabelDef(Typers.scala:2296)
	at scala.tools.nsc.typechecker.Typers$Typer.typedOutsidePatternMode$1(Typers.scala:5334)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5353)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedBlock(Typers.scala:2381)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedOutsidePatternMode$1$1.apply(Typers.scala:5318)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedOutsidePatternMode$1$1.apply(Typers.scala:5318)
	at scala.tools.nsc.typechecker.Typers$Typer.typedOutsidePatternMode$1(Typers.scala:5317)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5353)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedPackageDef$1(Typers.scala:5015)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5312)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5448)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer$$anonfun$transform$2.apply(Erasure.scala:1167)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer$$anonfun$transform$2.apply(Erasure.scala:1163)
	at scala.reflect.internal.SymbolTable.enteringPhase(SymbolTable.scala:235)
	at scala.reflect.internal.SymbolTable.exitingPhase(SymbolTable.scala:256)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer.transform(Erasure.scala:1163)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer.transform(Erasure.scala:745)
	at scala.tools.nsc.ast.Trees$Transformer.transformUnit(Trees.scala:147)
	at scala.tools.nsc.transform.Transform$Phase.apply(Transform.scala:30)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$applyPhase$1.apply$mcV$sp(Global.scala:440)
	at scala.tools.nsc.Global$GlobalPhase.withCurrentUnit(Global.scala:431)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:440)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:398)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:398)
	at scala.collection.Iterator$class.foreach(Iterator.scala:893)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:398)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1501)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1486)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1481)
	at scala.tools.nsc.interpreter.IMain.compileSourcesKeepingRun(IMain.scala:435)
	at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compileAndSaveRun(IMain.scala:855)
	at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compile(IMain.scala:813)
	at scala.tools.nsc.interpreter.IMain$Request.compile$lzycompute(IMain.scala:1002)
	at scala.tools.nsc.interpreter.IMain$Request.compile(IMain.scala:997)
	at scala.tools.nsc.interpreter.IMain.compile(IMain.scala:579)
	at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:567)
	at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:565)
	at scala.tools.nsc.interpreter.ILoop.interpretCode$1(ILoop.scala:750)
	at scala.tools.nsc.interpreter.ILoop.pasteCommand(ILoop.scala:764)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$standardCommands$9.apply(ILoop.scala:208)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$standardCommands$9.apply(ILoop.scala:208)
	at scala.tools.nsc.interpreter.LoopCommands$LineCmd.apply(LoopCommands.scala:62)
	at scala.tools.nsc.interpreter.ILoop.colonCommand(ILoop.scala:688)
	at scala.tools.nsc.interpreter.ILoop.command(ILoop.scala:679)
	at scala.tools.nsc.interpreter.ILoop.processLine(ILoop.scala:395)
	at scala.tools.nsc.interpreter.ILoop.loop(ILoop.scala:415)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply$mcZ$sp(ILoop.scala:923)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:909)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:909)
	at scala.reflect.internal.util.ScalaClassLoader$.savingContextLoader(ScalaClassLoader.scala:97)
	at scala.tools.nsc.interpreter.ILoop.process(ILoop.scala:909)
	at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:74)
	at scala.tools.nsc.MainGenericRunner.run$1(MainGenericRunner.scala:87)
	at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:98)
	at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:103)
	at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
ReplGlobal.abort: unrecoverable error
error:
  unrecoverable error
     while compiling: <console>
        during phase: globalPhase=erasure, enteringPhase=posterasure
     library version: version 2.11.8
    compiler version: version 2.11.8
  reconstructed args:

  last tree to typer: TypeTree(class App$class)
       tree position: line 15 of <console>
            tree tpe: App$class
              symbol: abstract class App$class in package scala
   symbol definition: abstract class App$class extends DelayedInit with App (a ClassSymbol with ImplClassSymbol)
      symbol package: scala
       symbol owners: class App$class
           call site: object Test in package $line3

<Cannot read source file>
exception when typing matchEnd3(x1(null))
exception when typing if (x1.ne(null))
  matchEnd3(x1(null))
else
  case5()
exception when typing case4(){
  if (x1.ne(null))
    matchEnd3(x1(null))
  else
    case5()
}
exception when typing {
  case <synthetic> val x1: BreakImpl = Test.this.break();
  case4(){
    if (x1.ne(null))
      matchEnd3(x1(null))
    else
      case5()
  };
  case5(){
    matchEnd3(throw new MatchError(x1))
  };
  matchEnd3(x){
    x
  }
}
exception when typing object Test extends Object with App {
  def <init>(): Test.type = {
    Test.super.<init>();
    Test.this./*App$class*/$init$();
    ()
  };
  private[this] val break: BreakImpl = new BreakImpl("", "", "");
  <stable> <accessor> def break(): BreakImpl = Test.this.break;
  {
    case <synthetic> val x1: BreakImpl = Test.this.break();
    case4(){
      if (x1.ne(null))
        matchEnd3(x1(null))
      else
        case5()
    };
    case5(){
      matchEnd3(throw new MatchError(x1))
    };
    matchEnd3(x){
      x
    }
  }
}
exception when typing object $iw extends Object {
  def <init>(): type = {
    $iw.super.<init>();
    ()
  };
  case class BreakImpl extends Object with Product with Serializable {
    <caseaccessor> <paramaccessor> private[this] val a: String = _;
    <stable> <caseaccessor> <accessor> <paramaccessor> def a(): String = BreakImpl.this.a;
    <paramaccessor> private[this] val b: String = _;
    implicit <paramaccessor> private[this] val c: String = _;
    def <init>(a: String, b: String, c: String): BreakImpl = {
      BreakImpl.super.<init>();
      BreakImpl.this./*Product$class*/$init$();
      ()
    };
    def self(): BreakImpl = this;
    <synthetic> def copy(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
    <synthetic> def copy$default$1(): String = BreakImpl.this.a();
    override <synthetic> def productPrefix(): String = "BreakImpl";
    <synthetic> def productArity(): Int = 1;
    <synthetic> def productElement(x$1: Int): Object = {
      case <synthetic> val x1: Int = x$1;
      (x1: Int) match {
        case 0 => BreakImpl.this.a()
        case _ => throw new IndexOutOfBoundsException(x$1.toString())
      }
    };
    override <synthetic> def productIterator(): Iterator = runtime.this.ScalaRunTime.typedProductIterator(BreakImpl.this);
    <synthetic> def canEqual(x$1: Object): Boolean = x$1.$isInstanceOf[BreakImpl]();
    override <synthetic> def hashCode(): Int = ScalaRunTime.this._hashCode(BreakImpl.this);
    override <synthetic> def toString(): String = ScalaRunTime.this._toString(BreakImpl.this);
    override <synthetic> def equals(x$1: Object): Boolean = BreakImpl.this.eq(x$1.asInstanceOf[Object]()).||({
  case <synthetic> val x1: Object = x$1;
  case5(){
    if (x1.isInstanceOf[BreakImpl]())
      matchEnd4(true)
    else
      case6()
  };
  case6(){
    matchEnd4(false)
  };
  matchEnd4(x: Boolean){
    x
  }
}.&&({
      <synthetic> val BreakImpl$1: BreakImpl = x$1.asInstanceOf[BreakImpl]();
      BreakImpl.this.a().==(BreakImpl$1.a()).&&(BreakImpl$1.canEqual(BreakImpl.this))
    }))
  };
  <synthetic> object BreakImpl extends Object with Serializable {
    def <init>(): BreakImpl.type = {
      BreakImpl.super.<init>();
      ()
    };
    final override <synthetic> def toString(): String = "BreakImpl";
    case <synthetic> def apply(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
    case <synthetic> def unapply(x$0: BreakImpl): Option = if (x$0.==(null))
      scala.this.None
    else
      new Some(x$0.a());
    <synthetic> private def readResolve(): Object = $iw.this.BreakImpl
  };
  object Test extends Object with App {
    def <init>(): Test.type = {
      Test.super.<init>();
      Test.this./*App$class*/$init$();
      ()
    };
    private[this] val break: BreakImpl = new BreakImpl("", "", "");
    <stable> <accessor> def break(): BreakImpl = Test.this.break;
    {
      case <synthetic> val x1: BreakImpl = Test.this.break();
      case4(){
        if (x1.ne(null))
          matchEnd3(x1(null))
        else
          case5()
      };
      case5(){
        matchEnd3(throw new MatchError(x1))
      };
      matchEnd3(x){
        x
      }
    }
  }
}
exception when typing object $iw extends Object {
  def <init>(): type = {
    $iw.super.<init>();
    ()
  };
  object $iw extends Object {
    def <init>(): type = {
      $iw.super.<init>();
      ()
    };
    case class BreakImpl extends Object with Product with Serializable {
      <caseaccessor> <paramaccessor> private[this] val a: String = _;
      <stable> <caseaccessor> <accessor> <paramaccessor> def a(): String = BreakImpl.this.a;
      <paramaccessor> private[this] val b: String = _;
      implicit <paramaccessor> private[this] val c: String = _;
      def <init>(a: String, b: String, c: String): BreakImpl = {
        BreakImpl.super.<init>();
        BreakImpl.this./*Product$class*/$init$();
        ()
      };
      def self(): BreakImpl = this;
      <synthetic> def copy(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
      <synthetic> def copy$default$1(): String = BreakImpl.this.a();
      override <synthetic> def productPrefix(): String = "BreakImpl";
      <synthetic> def productArity(): Int = 1;
      <synthetic> def productElement(x$1: Int): Object = {
        case <synthetic> val x1: Int = x$1;
        (x1: Int) match {
          case 0 => BreakImpl.this.a()
          case _ => throw new IndexOutOfBoundsException(x$1.toString())
        }
      };
      override <synthetic> def productIterator(): Iterator = runtime.this.ScalaRunTime.typedProductIterator(BreakImpl.this);
      <synthetic> def canEqual(x$1: Object): Boolean = x$1.$isInstanceOf[BreakImpl]();
      override <synthetic> def hashCode(): Int = ScalaRunTime.this._hashCode(BreakImpl.this);
      override <synthetic> def toString(): String = ScalaRunTime.this._toString(BreakImpl.this);
      override <synthetic> def equals(x$1: Object): Boolean = BreakImpl.this.eq(x$1.asInstanceOf[Object]()).||({
  case <synthetic> val x1: Object = x$1;
  case5(){
    if (x1.isInstanceOf[BreakImpl]())
      matchEnd4(true)
    else
      case6()
  };
  case6(){
    matchEnd4(false)
  };
  matchEnd4(x: Boolean){
    x
  }
}.&&({
        <synthetic> val BreakImpl$1: BreakImpl = x$1.asInstanceOf[BreakImpl]();
        BreakImpl.this.a().==(BreakImpl$1.a()).&&(BreakImpl$1.canEqual(BreakImpl.this))
      }))
    };
    <synthetic> object BreakImpl extends Object with Serializable {
      def <init>(): BreakImpl.type = {
        BreakImpl.super.<init>();
        ()
      };
      final override <synthetic> def toString(): String = "BreakImpl";
      case <synthetic> def apply(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
      case <synthetic> def unapply(x$0: BreakImpl): Option = if (x$0.==(null))
        scala.this.None
      else
        new Some(x$0.a());
      <synthetic> private def readResolve(): Object = $iw.this.BreakImpl
    };
    object Test extends Object with App {
      def <init>(): Test.type = {
        Test.super.<init>();
        Test.this./*App$class*/$init$();
        ()
      };
      private[this] val break: BreakImpl = new BreakImpl("", "", "");
      <stable> <accessor> def break(): BreakImpl = Test.this.break;
      {
        case <synthetic> val x1: BreakImpl = Test.this.break();
        case4(){
          if (x1.ne(null))
            matchEnd3(x1(null))
          else
            case5()
        };
        case5(){
          matchEnd3(throw new MatchError(x1))
        };
        matchEnd3(x){
          x
        }
      }
    }
  }
}
exception when typing object $read extends Object {
  def <init>(): $line3.$read.type = {
    $read.super.<init>();
    ()
  };
  object $iw extends Object {
    def <init>(): type = {
      $iw.super.<init>();
      ()
    };
    object $iw extends Object {
      def <init>(): type = {
        $iw.super.<init>();
        ()
      };
      case class BreakImpl extends Object with Product with Serializable {
        <caseaccessor> <paramaccessor> private[this] val a: String = _;
        <stable> <caseaccessor> <accessor> <paramaccessor> def a(): String = BreakImpl.this.a;
        <paramaccessor> private[this] val b: String = _;
        implicit <paramaccessor> private[this] val c: String = _;
        def <init>(a: String, b: String, c: String): BreakImpl = {
          BreakImpl.super.<init>();
          BreakImpl.this./*Product$class*/$init$();
          ()
        };
        def self(): BreakImpl = this;
        <synthetic> def copy(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
        <synthetic> def copy$default$1(): String = BreakImpl.this.a();
        override <synthetic> def productPrefix(): String = "BreakImpl";
        <synthetic> def productArity(): Int = 1;
        <synthetic> def productElement(x$1: Int): Object = {
          case <synthetic> val x1: Int = x$1;
          (x1: Int) match {
            case 0 => BreakImpl.this.a()
            case _ => throw new IndexOutOfBoundsException(x$1.toString())
          }
        };
        override <synthetic> def productIterator(): Iterator = runtime.this.ScalaRunTime.typedProductIterator(BreakImpl.this);
        <synthetic> def canEqual(x$1: Object): Boolean = x$1.$isInstanceOf[BreakImpl]();
        override <synthetic> def hashCode(): Int = ScalaRunTime.this._hashCode(BreakImpl.this);
        override <synthetic> def toString(): String = ScalaRunTime.this._toString(BreakImpl.this);
        override <synthetic> def equals(x$1: Object): Boolean = BreakImpl.this.eq(x$1.asInstanceOf[Object]()).||({
  case <synthetic> val x1: Object = x$1;
  case5(){
    if (x1.isInstanceOf[BreakImpl]())
      matchEnd4(true)
    else
      case6()
  };
  case6(){
    matchEnd4(false)
  };
  matchEnd4(x: Boolean){
    x
  }
}.&&({
          <synthetic> val BreakImpl$1: BreakImpl = x$1.asInstanceOf[BreakImpl]();
          BreakImpl.this.a().==(BreakImpl$1.a()).&&(BreakImpl$1.canEqual(BreakImpl.this))
        }))
      };
      <synthetic> object BreakImpl extends Object with Serializable {
        def <init>(): BreakImpl.type = {
          BreakImpl.super.<init>();
          ()
        };
        final override <synthetic> def toString(): String = "BreakImpl";
        case <synthetic> def apply(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
        case <synthetic> def unapply(x$0: BreakImpl): Option = if (x$0.==(null))
          scala.this.None
        else
          new Some(x$0.a());
        <synthetic> private def readResolve(): Object = $iw.this.BreakImpl
      };
      object Test extends Object with App {
        def <init>(): Test.type = {
          Test.super.<init>();
          Test.this./*App$class*/$init$();
          ()
        };
        private[this] val break: BreakImpl = new BreakImpl("", "", "");
        <stable> <accessor> def break(): BreakImpl = Test.this.break;
        {
          case <synthetic> val x1: BreakImpl = Test.this.break();
          case4(){
            if (x1.ne(null))
              matchEnd3(x1(null))
            else
              case5()
          };
          case5(){
            matchEnd3(throw new MatchError(x1))
          };
          matchEnd3(x){
            x
          }
        }
      }
    }
  }
}
exception when typing package $line3 {
  object $read extends Object {
    def <init>(): $line3.$read.type = {
      $read.super.<init>();
      ()
    };
    object $iw extends Object {
      def <init>(): type = {
        $iw.super.<init>();
        ()
      };
      object $iw extends Object {
        def <init>(): type = {
          $iw.super.<init>();
          ()
        };
        case class BreakImpl extends Object with Product with Serializable {
          <caseaccessor> <paramaccessor> private[this] val a: String = _;
          <stable> <caseaccessor> <accessor> <paramaccessor> def a(): String = BreakImpl.this.a;
          <paramaccessor> private[this] val b: String = _;
          implicit <paramaccessor> private[this] val c: String = _;
          def <init>(a: String, b: String, c: String): BreakImpl = {
            BreakImpl.super.<init>();
            BreakImpl.this./*Product$class*/$init$();
            ()
          };
          def self(): BreakImpl = this;
          <synthetic> def copy(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
          <synthetic> def copy$default$1(): String = BreakImpl.this.a();
          override <synthetic> def productPrefix(): String = "BreakImpl";
          <synthetic> def productArity(): Int = 1;
          <synthetic> def productElement(x$1: Int): Object = {
            case <synthetic> val x1: Int = x$1;
            (x1: Int) match {
              case 0 => BreakImpl.this.a()
              case _ => throw new IndexOutOfBoundsException(x$1.toString())
            }
          };
          override <synthetic> def productIterator(): Iterator = runtime.this.ScalaRunTime.typedProductIterator(BreakImpl.this);
          <synthetic> def canEqual(x$1: Object): Boolean = x$1.$isInstanceOf[BreakImpl]();
          override <synthetic> def hashCode(): Int = ScalaRunTime.this._hashCode(BreakImpl.this);
          override <synthetic> def toString(): String = ScalaRunTime.this._toString(BreakImpl.this);
          override <synthetic> def equals(x$1: Object): Boolean = BreakImpl.this.eq(x$1.asInstanceOf[Object]()).||({
  case <synthetic> val x1: Object = x$1;
  case5(){
    if (x1.isInstanceOf[BreakImpl]())
      matchEnd4(true)
    else
      case6()
  };
  case6(){
    matchEnd4(false)
  };
  matchEnd4(x: Boolean){
    x
  }
}.&&({
            <synthetic> val BreakImpl$1: BreakImpl = x$1.asInstanceOf[BreakImpl]();
            BreakImpl.this.a().==(BreakImpl$1.a()).&&(BreakImpl$1.canEqual(BreakImpl.this))
          }))
        };
        <synthetic> object BreakImpl extends Object with Serializable {
          def <init>(): BreakImpl.type = {
            BreakImpl.super.<init>();
            ()
          };
          final override <synthetic> def toString(): String = "BreakImpl";
          case <synthetic> def apply(a: String, b: String, c: String): BreakImpl = new BreakImpl(a, b, c);
          case <synthetic> def unapply(x$0: BreakImpl): Option = if (x$0.==(null))
            scala.this.None
          else
            new Some(x$0.a());
          <synthetic> private def readResolve(): Object = $iw.this.BreakImpl
        };
        object Test extends Object with App {
          def <init>(): Test.type = {
            Test.super.<init>();
            Test.this./*App$class*/$init$();
            ()
          };
          private[this] val break: BreakImpl = new BreakImpl("", "", "");
          <stable> <accessor> def break(): BreakImpl = Test.this.break;
          {
            case <synthetic> val x1: BreakImpl = Test.this.break();
            case4(){
              if (x1.ne(null))
                matchEnd3(x1(null))
              else
                case5()
            };
            case5(){
              matchEnd3(throw new MatchError(x1))
            };
            matchEnd3(x){
              x
            }
          }
        }
      }
    }
  }
}
scala.reflect.internal.FatalError: 
  unrecoverable error
     while compiling: <console>
        during phase: globalPhase=erasure, enteringPhase=posterasure
     library version: version 2.11.8
    compiler version: version 2.11.8
  reconstructed args: 

  last tree to typer: TypeTree(class App$class)
       tree position: line 15 of <console>
            tree tpe: App$class
              symbol: abstract class App$class in package scala
   symbol definition: abstract class App$class extends DelayedInit with App (a ClassSymbol with ImplClassSymbol)
      symbol package: scala
       symbol owners: class App$class
           call site: object Test in package $line3

<Cannot read source file>
	at scala.reflect.internal.Reporting$class.abort(Reporting.scala:59)
	at scala.tools.nsc.interpreter.IMain$$anon$1.scala$tools$nsc$interpreter$ReplGlobal$$super$abort(IMain.scala:247)
	at scala.tools.nsc.interpreter.ReplGlobal$class.abort(ReplGlobal.scala:20)
	at scala.tools.nsc.interpreter.IMain$$anon$1.abort(IMain.scala:247)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:705)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedArg(Typers.scala:3164)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$class.typedArgWithFormal$1(PatternTypers.scala:112)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$$anonfun$2.apply(PatternTypers.scala:115)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$$anonfun$2.apply(PatternTypers.scala:115)
	at scala.runtime.Tuple2Zipped$$anonfun$map$extension$1.apply(Tuple2Zipped.scala:46)
	at scala.runtime.Tuple2Zipped$$anonfun$map$extension$1.apply(Tuple2Zipped.scala:44)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.runtime.Tuple2Zipped$.map$extension(Tuple2Zipped.scala:44)
	at scala.tools.nsc.typechecker.PatternTypers$PatternTyper$class.typedArgsForFormals(PatternTypers.scala:115)
	at scala.tools.nsc.typechecker.Typers$Typer.typedArgsForFormals(Typers.scala:111)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$handleMonomorphicCall$1(Typers.scala:3470)
	at scala.tools.nsc.typechecker.Typers$Typer.doTypedApply(Typers.scala:3495)
	at scala.tools.nsc.typechecker.Typers$Typer.normalTypedApply$1(Typers.scala:4546)
	at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:4580)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5343)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5463)
	at scala.tools.nsc.typechecker.Typers$Typer.typedIf$1(Typers.scala:4255)
	at scala.tools.nsc.typechecker.Typers$Typer.typedOutsidePatternMode$1(Typers.scala:5319)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5353)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5463)
	at scala.tools.nsc.typechecker.Typers$Typer.typedLabelDef(Typers.scala:2296)
	at scala.tools.nsc.typechecker.Typers$Typer.typedOutsidePatternMode$1(Typers.scala:5334)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5353)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedBlock(Typers.scala:2381)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedOutsidePatternMode$1$1.apply(Typers.scala:5318)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedOutsidePatternMode$1$1.apply(Typers.scala:5318)
	at scala.tools.nsc.typechecker.Typers$Typer.typedOutsidePatternMode$1(Typers.scala:5317)
	at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5353)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
	at scala.tools.nsc.typechecker.Typers$Typer.typedClassDef(Typers.scala:1762)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5309)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
	at scala.collection.immutable.List.loop$1(List.scala:173)
	at scala.collection.immutable.List.mapConserve(List.scala:189)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
	at scala.tools.nsc.typechecker.Typers$Typer.typedPackageDef$1(Typers.scala:5015)
	at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5312)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
	at scala.tools.nsc.transform.Erasure$Eraser.typed1(Erasure.scala:698)
	at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
	at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5448)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer$$anonfun$transform$2.apply(Erasure.scala:1167)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer$$anonfun$transform$2.apply(Erasure.scala:1163)
	at scala.reflect.internal.SymbolTable.enteringPhase(SymbolTable.scala:235)
	at scala.reflect.internal.SymbolTable.exitingPhase(SymbolTable.scala:256)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer.transform(Erasure.scala:1163)
	at scala.tools.nsc.transform.Erasure$ErasureTransformer.transform(Erasure.scala:745)
	at scala.tools.nsc.ast.Trees$Transformer.transformUnit(Trees.scala:147)
	at scala.tools.nsc.transform.Transform$Phase.apply(Transform.scala:30)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$applyPhase$1.apply$mcV$sp(Global.scala:440)
	at scala.tools.nsc.Global$GlobalPhase.withCurrentUnit(Global.scala:431)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:440)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:398)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:398)
	at scala.collection.Iterator$class.foreach(Iterator.scala:893)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:398)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1501)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1486)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1481)
	at scala.tools.nsc.interpreter.IMain.compileSourcesKeepingRun(IMain.scala:435)
	at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compileAndSaveRun(IMain.scala:855)
	at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compile(IMain.scala:813)
	at scala.tools.nsc.interpreter.IMain$Request.compile$lzycompute(IMain.scala:1002)
	at scala.tools.nsc.interpreter.IMain$Request.compile(IMain.scala:997)
	at scala.tools.nsc.interpreter.IMain.compile(IMain.scala:579)
	at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:567)
	at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:565)
	at scala.tools.nsc.interpreter.ILoop.interpretCode$1(ILoop.scala:750)
	at scala.tools.nsc.interpreter.ILoop.pasteCommand(ILoop.scala:764)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$standardCommands$9.apply(ILoop.scala:208)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$standardCommands$9.apply(ILoop.scala:208)
	at scala.tools.nsc.interpreter.LoopCommands$LineCmd.apply(LoopCommands.scala:62)
	at scala.tools.nsc.interpreter.ILoop.colonCommand(ILoop.scala:688)
	at scala.tools.nsc.interpreter.ILoop.command(ILoop.scala:679)
	at scala.tools.nsc.interpreter.ILoop.processLine(ILoop.scala:395)
	at scala.tools.nsc.interpreter.ILoop.loop(ILoop.scala:415)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply$mcZ$sp(ILoop.scala:923)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:909)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:909)
	at scala.reflect.internal.util.ScalaClassLoader$.savingContextLoader(ScalaClassLoader.scala:97)
	at scala.tools.nsc.interpreter.ILoop.process(ILoop.scala:909)
	at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:74)
	at scala.tools.nsc.MainGenericRunner.run$1(MainGenericRunner.scala:87)
	at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:98)
	at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:103)
	at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)

That entry seems to have slain the compiler.  Shall I replay
your session? I can re-run each line except the last one.
[y/n]
```