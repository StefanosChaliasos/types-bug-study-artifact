```scala
scala> :pas
// Entering paste mode (ctrl-D to finish)
import scala.language.higherKinds

trait Invocation[M[_[_]], A] {
  def invoke[F[_]](mf: M[F]): F[A]
}

def invoke[M[_[_]], F[_], A](
  actions: M[({ type λ[α] = F[(String, α)]})#λ], 
  inv: Invocation[M, A]
): F[(String, A)] = inv.invoke(actions)


// Exiting paste mode, now interpreting.

<pastie>:18: error: no type parameters for method invoke: (mf: M[F])F[A] exist so that it can be applied to arguments (M[[A]F[(String, A)]])
 --- because ---
argument expression's type is not compatible with formal parameter type;
 found   : M[[A]F[(String, A)]]
 required: M[?F]

): F[(String, A)] = inv.invoke(actions)
                        ^
<pastie>:18: error: type mismatch;
 found   : M[[A]F[(String, A)]]
 required: M[F]
): F[(String, A)] = inv.invoke(actions)
                               ^
<pastie>:18: error: type mismatch;
 found   : F[A]
 required: F[(String, A)]
): F[(String, A)] = inv.invoke(actions)
```