When a non-Any upper bound is given to a type parameter, 2.13 instantiates the parameter to the upper bound even when a more precise type is known in some situations (unlike 2.12 and Dotty). Compare:
```scala
Welcome to Scala 2.12.4 (OpenJDK 64-Bit Server VM, Java 1.8.0_162).
Type in expressions for evaluation. Or try :help.

scala> def id0[T](x: T): T = x
id0: [T](x: T)T

scala> id0(if (1 == 1) 1 else 2)
res0: Int = 1

scala> def id[T <: AnyVal](x: T): T = x
id: [T <: AnyVal](x: T)T

scala> id(if (1 == 1) 1 else 2)
res1: Int = 1
```
And:
```scala
Welcome to Scala 2.13.0-M3 (OpenJDK 64-Bit Server VM, Java 1.8.0_162).
Type in expressions for evaluation. Or try :help.

scala> def id0[T](x: T): T = x
id0: [T](x: T)T

scala> id0(if (1 == 1) 1 else 2)
res0: Int = 1

scala> def id[T <: AnyVal](x: T): T = x
id: [T <: AnyVal](x: T)T

scala> id(if (1 == 1) 1 else 2)
res1: AnyVal = 1

```