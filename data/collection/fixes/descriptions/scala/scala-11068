``` scala
import scala.language.higherKinds
import scala.concurrent.Future

object Regression {
  
  trait Functor[F[_]]
  trait Monad[F[_]] extends Functor[F]
  trait MonadError[F[_], E] extends Monad[F]
  implicit def futureMonad: Monad[Future] = ???
  
  

  object OptionT extends OptionTInstances0 {
    implicit final def OptionTFunctor[F[_]](implicit F0: Functor[F]): Functor[({type T[A] = OptionT[F, A]})#T] = ???

  }

  sealed abstract class OptionTInstances0 {
    implicit final def OptionTMonadError[F[_]](implicit F0: Monad[F]): MonadError[({type T[A] = OptionT[F, A]})#T, Throwable] = ???

  }

  trait OptionT[F[_], A]

  def main(args: Array[String]): Unit = {

    def f = implicitly[Functor[({type T[A] = OptionT[Future, A]})#T]]

  }

}
```

* It compiles in Scala 2.12.6: https://scastie.scala-lang.org/ifY5zoUzQTO2qzmviNxv6g
* It does not compile in Scala 2.13.0-M4 https://scastie.scala-lang.org/5CenTZ5qRnSeE1tyhRUXfw