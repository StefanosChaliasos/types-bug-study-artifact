compiling the below code throws a  `warning: unreachable code
       case _:AB => false`

```scala
sealed trait A
sealed trait AB extends A
sealed trait AA extends A
def f(a: A): Boolean = a match {
     case _:AA => true
     case _:AB => false
}
```
while testing the function show that both branches are reachable.

```scala
scala> f(new AB{} )
res0: Boolean = false

scala> f(new AA{} )
res1: Boolean = true
```

This behavior is reproducible on 2.11 and 2.12, and only if all traits are `sealed`