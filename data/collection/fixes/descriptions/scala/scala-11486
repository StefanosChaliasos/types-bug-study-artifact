```
Welcome to Scala 2.13.0-RC1 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_192).
Type in expressions for evaluation. Or try :help.

scala> implicit def foo(i: Int): String = i.toString
                    ^
       warning: implicit conversion method foo should be enabled
       by making the implicit value scala.language.implicitConversions visible.
       This can be achieved by adding the import clause 'import scala.language.implicitConversions'
       or by setting the compiler option -language:implicitConversions.
       See the Scaladoc for value scala.language.implicitConversions for a discussion
       why the feature should be explicitly enabled.
foo: (i: Int)String

scala> val a: String = 42
a: String = 42

scala> val _: String = 42
              ^
       error: scrutinee is incompatible with pattern type;
        found   : String
        required: Int

scala> class A; class B ; implicit def a_to_b(a: A): B = new B
                                       ^
       warning: implicit conversion method a_to_b should be enabled
       by making the implicit value scala.language.implicitConversions visible.
       This can be achieved by adding the import clause 'import scala.language.implicitConversions'
       or by setting the compiler option -language:implicitConversions.
       See the Scaladoc for value scala.language.implicitConversions for a discussion
       why the feature should be explicitly enabled.
defined class A
defined class B
a_to_b: (a: A)B

scala> val x: B = new A
x: B = B@583fb274

scala> val _: B = new A
              ^
       warning: fruitless type test: a value of type A cannot also be a B
scala.MatchError: A@1e545821 (of class A)
  ... 28 elided
```

```
Welcome to Scala 2.13.0-M5 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_192).
Type in expressions for evaluation. Or try :help.

scala> implicit def foo(i: Int): String = i.toString
                    ^
       warning: implicit conversion method foo should be enabled
       by making the implicit value scala.language.implicitConversions visible.
       ----
       This can be achieved by adding the import clause 'import scala.language.implicitConversions'
       or by setting the compiler option -language:implicitConversions.
       See the Scaladoc for value scala.language.implicitConversions for a discussion
       why the feature should be explicitly enabled.
foo: (i: Int)String

scala> val a: String = 42
a: String = 42

scala> val _: String = 42
_: String = 42

scala> class A; class B ; implicit def a_to_b(a: A): B = new B
                                       ^
       warning: implicit conversion method a_to_b should be enabled
       by making the implicit value scala.language.implicitConversions visible.
       ----
       This can be achieved by adding the import clause 'import scala.language.implicitConversions'
       or by setting the compiler option -language:implicitConversions.
       See the Scaladoc for value scala.language.implicitConversions for a discussion
       why the feature should be explicitly enabled.
defined class A
defined class B
a_to_b: (a: A)B

scala> val x: B = new A
x: B = B@11c78080

scala> val _: B = new A
_: B = B@165614f5
```