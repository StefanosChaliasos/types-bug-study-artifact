Given java class

```
abstract class AFn implements java.lang.Callable {
  Object invoke() {
    return throw new Exception()
  }
  override Object call() {
    return invoke()
  }
}
```

then

```
new AFn {
  override def invoke(): Object = new Object()
}
```

fails to compile with 

```
incompatible type in overriding def call(): V (defined in trait Callable)
with def call(): Object (defined in class AFn);
found   : ()Object
required: ()V

```

`AFn` extends the raw interface `Callable`, and this seems to be throwing a wrench in the works.

Clojure fans may have recognized `Afn` as the implementation of clojure functions.
