## reproduction steps

Using Scala 2.13.3 and Java 11.

Compile the following class into a class-file:

```scala
@throws(classOf[IllegalArgumentException])
class ScalaClass[T](someList: List[T]) {
   throw new IllegalArgumentException("Boom!")
}
```

## problem

The generated classfile/bytecode contains a type signature for `ScalaClass`. This type signature contains a _ThrowsSignature_ although these are only permitted as part of _MethodSignature_: 
https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jvms-4.7.9.1

This issue was discovered while working with ClassGraph to do bytecode analysis:
https://github.com/classgraph/classgraph/issues/495#issuecomment-768105884
You can read up on the details from the linked comment onwards.

At first we thought the type signature parser of ClassGraph was missing something, but we're confident that the bytecode generated by Scala is invalid. Later on in that issue you can see that `javac` even rejects the classfile generated by Scala due to it being invalid:
https://github.com/classgraph/classgraph/issues/495#issuecomment-768307245

Attached is a minimal Scala/Maven project that produces the said invalid classfile for the class mentioned above:
[ClassGraphMinimalExample.zip](https://github.com/scala/bug/files/5881407/ClassGraphMinimalExample.zip)