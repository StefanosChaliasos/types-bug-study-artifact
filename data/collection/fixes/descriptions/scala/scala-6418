You can successfully run this through the interpreter:

def banded(input:Double) =
  if(input > 1.0 | input < 0.0)
    Left("Nothing")
  else
    Right(math.round(input * 100.0))

But if you start the REPL and :load the above, you get:

scala> :load Banded.scala
Loading Banded.scala...
banded: (input: Double)Any
<console>:1: error: illegal start of definition
         else
         ^

If you add curly braces:

def banded(input:Double) = {
  if(input > 1.0 | input < 0.0)
    Left("Nothing")
  else
    Right(math.round(input * 100.0))
}

Then the :load command is successful.