diff --git a/src/main/org/codehaus/groovy/transform/stc/StaticTypeCheckingSupport.java b/src/main/org/codehaus/groovy/transform/stc/StaticTypeCheckingSupport.java
index 45cff59f07..b920a0a59b 100644
--- a/src/main/org/codehaus/groovy/transform/stc/StaticTypeCheckingSupport.java
+++ b/src/main/org/codehaus/groovy/transform/stc/StaticTypeCheckingSupport.java
@@ -1468,7 +1468,11 @@ public abstract class StaticTypeCheckingSupport {
             compareNode = getCombinedBoundType(resolved);
             compareNode = compareNode.redirect().getPlainNodeReference();
         } else {
-            compareNode = resolved.getType().getPlainNodeReference();
+            if (!resolved.isPlaceholder()) {
+                compareNode = resolved.getType().getPlainNodeReference();
+            } else {
+                return true;
+            }
         }
         return gt.isCompatibleWith(compareNode);
     }
diff --git a/src/test/org/codehaus/groovy/classgen/asm/sc/bugs/Groovy7327Bug.groovy b/src/test/org/codehaus/groovy/classgen/asm/sc/bugs/Groovy7327Bug.groovy
new file mode 100644
index 0000000000..379f2d9385
--- /dev/null
+++ b/src/test/org/codehaus/groovy/classgen/asm/sc/bugs/Groovy7327Bug.groovy
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2003-2015 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+
+
+
+
+
+package org.codehaus.groovy.classgen.asm.sc.bugs
+
+import groovy.transform.stc.StaticTypeCheckingTestCase
+import org.codehaus.groovy.classgen.asm.sc.StaticCompilationTestSupport
+
+class Groovy7327Bug extends StaticTypeCheckingTestCase implements StaticCompilationTestSupport {
+    void testReturnTypeInferenceWithJavaEnum() {
+        assertScript '''import org.codehaus.groovy.control.CompilePhase
+
+            public static <T> List<T> randomSample(T[] sequence) {
+                Arrays.asList(sequence)[0..1]
+            }
+
+            assert randomSample(CompilePhase.values()).size() == 2
+        '''
+    }
+}
