changeset:   995:384ea9a98912
user:        mcimadamore
date:        Mon May 02 12:05:41 2011 +0100
summary:     7040883: Compilation error: "length in Array is defined in an inaccessible class or interface"

diff -r 62bc3775d5bb -r 384ea9a98912 src/share/classes/com/sun/tools/javac/code/Types.java
--- a/src/share/classes/com/sun/tools/javac/code/Types.java	Mon May 02 02:13:02 2011 -0700
+++ b/src/share/classes/com/sun/tools/javac/code/Types.java	Mon May 02 12:05:41 2011 +0100
@@ -2314,7 +2314,7 @@
             if (elemtype == t.elemtype)
                 return t;
             else
-                return new ArrayType(elemtype, t.tsym);
+                return new ArrayType(upperBound(elemtype), t.tsym);
         }
 
         @Override
diff -r 62bc3775d5bb -r 384ea9a98912 test/tools/javac/generics/7034511/T7034511a.java
--- a/test/tools/javac/generics/7034511/T7034511a.java	Mon May 02 02:13:02 2011 -0700
+++ b/test/tools/javac/generics/7034511/T7034511a.java	Mon May 02 12:05:41 2011 +0100
@@ -1,6 +1,7 @@
 /*
  * @test /nodynamiccopyright/
- * @bug     7034511
+ * @ignore backing out 7034511, see 7040883
+ * @bug     7034511 7040883
  * @summary Loophole in typesafety
  * @compile/fail/ref=T7034511a.out -XDrawDiagnostics T7034511a.java
  */
diff -r 62bc3775d5bb -r 384ea9a98912 test/tools/javac/generics/7034511/T7034511b.java
--- a/test/tools/javac/generics/7034511/T7034511b.java	Mon May 02 02:13:02 2011 -0700
+++ b/test/tools/javac/generics/7034511/T7034511b.java	Mon May 02 12:05:41 2011 +0100
@@ -1,6 +1,7 @@
 /*
  * @test /nodynamiccopyright/
- * @bug     7034511
+ * @ignore backing out 7034511, see 7040883
+ * @bug     7034511 7040883
  * @summary Loophole in typesafety
  * @compile/fail/ref=T7034511b.out -XDrawDiagnostics T7034511b.java
  */
diff -r 62bc3775d5bb -r 384ea9a98912 test/tools/javac/generics/typevars/T7040883.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/test/tools/javac/generics/typevars/T7040883.java	Mon May 02 12:05:41 2011 +0100
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+/*
+ * @test
+ * @bug     7040883 7034511
+ * @summary Compilation error: "length in Array is defined in an inaccessible class or interface"
+ * @compile T7040883.java
+ */
+
+public class T7040883 {
+
+    <Z> Z[] getListeners(Class<Z> z) { return null; }
+
+    void test(String s) {
+        int i = getListeners(s.getClass()).length;
+    }
+}

