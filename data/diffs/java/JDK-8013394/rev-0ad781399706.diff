changeset:   1947:0ad781399706
user:        vromero
date:        Wed Aug 14 10:53:37 2013 +0100
summary:     8013394: compile of iterator use fails with error \"defined in an inaccessible class or interface\"

diff -r 32b6a99cc74e -r 0ad781399706 src/share/classes/com/sun/tools/javac/comp/Lower.java
--- a/src/share/classes/com/sun/tools/javac/comp/Lower.java	Tue Aug 13 18:34:06 2013 -0700
+++ b/src/share/classes/com/sun/tools/javac/comp/Lower.java	Wed Aug 14 10:53:37 2013 +0100
@@ -3436,7 +3436,7 @@
                                            eType,
                                            List.<Type>nil());
             VarSymbol itvar = new VarSymbol(0, names.fromString("i" + target.syntheticNameChar()),
-                                            types.erasure(iterator.type.getReturnType()),
+                                            types.erasure(types.asSuper(iterator.type.getReturnType(), syms.iteratorType.tsym)),
                                             currentMethodSym);
 
              JCStatement init = make.
diff -r 32b6a99cc74e -r 0ad781399706 test/tools/javac/T8013394/CompileErrorWithIteratorTest.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/test/tools/javac/T8013394/CompileErrorWithIteratorTest.java	Wed Aug 14 10:53:37 2013 +0100
@@ -0,0 +1,85 @@
+/*
+ * Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.  Oracle designates this
+ * particular file as subject to the "Classpath" exception as provided
+ * by Oracle in the LICENSE file that accompanied this code.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+/*
+ * @test
+ * @bug 8013394
+ * @summary compile of iterator use fails with error "defined in an inaccessible class or interface"
+ * @library /tools/javac/lib
+ * @build ToolBox
+ * @run main CompileErrorWithIteratorTest
+ */
+
+public class CompileErrorWithIteratorTest {
+
+    private static final String TestCollectionSrc =
+        "package pkg;\n" +
+
+        "import java.util.Iterator;\n" +
+        "import java.util.NoSuchElementException;\n" +
+
+        "public class TestCollection<E> implements Iterable<E> {\n" +
+        "    public testCollectionIterator iterator() {\n" +
+        "        return  new testCollectionIterator();\n" +
+        "    }\n" +
+        "    class testCollectionIterator implements Iterator<E> {\n" +
+        "        public boolean hasNext() { return true; }\n" +
+        "        public E next() throws NoSuchElementException\n" +
+        "        {\n" +
+        "            return null;\n" +
+        "        }\n" +
+        "        public void remove() {}\n" +
+        "    }\n" +
+        "}";
+
+    private static final String TestSrc =
+        "import pkg.TestCollection;\n" +
+        "\n" +
+        "public class Test {\n" +
+        "\n" +
+        "    public static void main(String[] args) {\n" +
+        "        TestCollection<String>  tc1 = new TestCollection<String>();\n" +
+        "        for (String s : tc1) {\n" +
+        "            System.out.println(s);\n" +
+        "        }\n" +
+        "      }\n" +
+        "}";
+
+    public static void main(String args[]) throws Exception {
+        new CompileErrorWithIteratorTest().run();
+    }
+
+    void run() throws Exception {
+        compile();
+    }
+
+    void compile() throws Exception {
+        ToolBox.JavaToolArgs javacParams =
+                new ToolBox.JavaToolArgs()
+                .setSources(TestCollectionSrc, TestSrc);
+        ToolBox.javac(javacParams);
+    }
+
+}

